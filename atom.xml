<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kingle blog</title>
  <subtitle>web</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kingle.online/"/>
  <updated>2018-05-21T06:30:27.000Z</updated>
  <id>http://kingle.online/</id>
  
  <author>
    <name>kingle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iTerm2插件git的缩写大全</title>
    <link href="http://kingle.online/2018/05/13/iTerm2%E6%8F%92%E4%BB%B6git%E7%9A%84%E7%BC%A9%E5%86%99%E5%A4%A7%E5%85%A8/"/>
    <id>http://kingle.online/2018/05/13/iTerm2插件git的缩写大全/</id>
    <published>2018-05-13T15:45:42.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iTerm2终端集成git缩写意思"><a href="#iTerm2终端集成git缩写意思" class="headerlink" title="iTerm2终端集成git缩写意思"></a>iTerm2终端集成git缩写意思</h2><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git" target="_blank" rel="external">oh-my-zsh git</a></p>
<p>The <a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git" target="_blank" rel="external">git</a> plugin provides many <a href="#aliases">aliases</a> and a few useful <a href="#functions">functions</a>.</p>
<p>Enable it by adding <em>git</em> to the <a href="https://github.com/robbyrussell/oh-my-zsh/blob/master/templates/zshrc.zsh-template#L61" target="_blank" rel="external"><em>plugins array</em></a> before sourcing OMZ (see [[Plugins]]).</p>
<h2 id="Aliases"><a href="#Aliases" class="headerlink" title="Aliases"></a>Aliases</h2><table>
<thead>
<tr>
<th style="text-align:left">Alias</th>
<th style="text-align:left">Command</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">g</td>
<td style="text-align:left">git</td>
</tr>
<tr>
<td style="text-align:left">ga</td>
<td style="text-align:left">git add</td>
</tr>
<tr>
<td style="text-align:left">gaa</td>
<td style="text-align:left">git add –all</td>
</tr>
<tr>
<td style="text-align:left">gapa</td>
<td style="text-align:left">git add –patch</td>
</tr>
<tr>
<td style="text-align:left">gau</td>
<td style="text-align:left">git add –update</td>
</tr>
<tr>
<td style="text-align:left">gb</td>
<td style="text-align:left">git branch</td>
</tr>
<tr>
<td style="text-align:left">gba</td>
<td style="text-align:left">git branch -a</td>
</tr>
<tr>
<td style="text-align:left">gbda</td>
<td style="text-align:left">git branch –merged \</td>
<td>command grep -vE “^(*\</td>
<td>\s<em>master\s</em>$)” \</td>
<td>command xargs -n 1 git branch -d</td>
</tr>
<tr>
<td style="text-align:left">gbl</td>
<td style="text-align:left">git blame -b -w</td>
</tr>
<tr>
<td style="text-align:left">gbnm</td>
<td style="text-align:left">git branch –no-merged</td>
</tr>
<tr>
<td style="text-align:left">gbr</td>
<td style="text-align:left">git branch –remote</td>
</tr>
<tr>
<td style="text-align:left">gbs</td>
<td style="text-align:left">git bisect</td>
</tr>
<tr>
<td style="text-align:left">gbsb</td>
<td style="text-align:left">git bisect bad</td>
</tr>
<tr>
<td style="text-align:left">gbsg</td>
<td style="text-align:left">git bisect good</td>
</tr>
<tr>
<td style="text-align:left">gbsr</td>
<td style="text-align:left">git bisect reset</td>
</tr>
<tr>
<td style="text-align:left">gbss</td>
<td style="text-align:left">git bisect start</td>
</tr>
<tr>
<td style="text-align:left">gc</td>
<td style="text-align:left">git commit -v</td>
</tr>
<tr>
<td style="text-align:left">gc!</td>
<td style="text-align:left">git commit -v –amend</td>
</tr>
<tr>
<td style="text-align:left">gca</td>
<td style="text-align:left">git commit -v -a</td>
</tr>
<tr>
<td style="text-align:left">gcam</td>
<td style="text-align:left">git commit -a -m</td>
</tr>
<tr>
<td style="text-align:left">gca!</td>
<td style="text-align:left">git commit -v -a –amend</td>
</tr>
<tr>
<td style="text-align:left">gcan!</td>
<td style="text-align:left">git commit -v -a -s –no-edit –amend</td>
</tr>
<tr>
<td style="text-align:left">gcb</td>
<td style="text-align:left">git checkout -b</td>
</tr>
<tr>
<td style="text-align:left">gcf</td>
<td style="text-align:left">git config –list</td>
</tr>
<tr>
<td style="text-align:left">gcl</td>
<td style="text-align:left">git clone –recursive</td>
</tr>
<tr>
<td style="text-align:left">gclean</td>
<td style="text-align:left">git clean -df</td>
</tr>
<tr>
<td style="text-align:left">gcm</td>
<td style="text-align:left">git checkout master</td>
</tr>
<tr>
<td style="text-align:left">gcd</td>
<td style="text-align:left">git checkout develop</td>
</tr>
<tr>
<td style="text-align:left">gcmsg</td>
<td style="text-align:left">git commit -m</td>
</tr>
<tr>
<td style="text-align:left">gco</td>
<td style="text-align:left">git checkout</td>
</tr>
<tr>
<td style="text-align:left">gcount</td>
<td style="text-align:left">git shortlog -sn</td>
</tr>
<tr>
<td style="text-align:left">gcp</td>
<td style="text-align:left">git cherry-pick</td>
</tr>
<tr>
<td style="text-align:left">gcpa</td>
<td style="text-align:left">git cherry-pick –abort</td>
</tr>
<tr>
<td style="text-align:left">gcpc</td>
<td style="text-align:left">git cherry-pick –continue</td>
</tr>
<tr>
<td style="text-align:left">gcs</td>
<td style="text-align:left">git commit -S</td>
</tr>
<tr>
<td style="text-align:left">gd</td>
<td style="text-align:left">git diff</td>
</tr>
<tr>
<td style="text-align:left">gdca</td>
<td style="text-align:left">git diff –cached</td>
</tr>
<tr>
<td style="text-align:left">gdt</td>
<td style="text-align:left">git diff-tree –no-commit-id –name-only -r</td>
</tr>
<tr>
<td style="text-align:left">gdw</td>
<td style="text-align:left">git diff –word-diff</td>
</tr>
<tr>
<td style="text-align:left">gf</td>
<td style="text-align:left">git fetch</td>
</tr>
<tr>
<td style="text-align:left">gfa</td>
<td style="text-align:left">git fetch –all –prune</td>
</tr>
<tr>
<td style="text-align:left">gfo</td>
<td style="text-align:left">git fetch origin</td>
</tr>
<tr>
<td style="text-align:left">gg</td>
<td style="text-align:left">git gui citool</td>
</tr>
<tr>
<td style="text-align:left">gga</td>
<td style="text-align:left">git gui citool –amend</td>
</tr>
<tr>
<td style="text-align:left">ggf</td>
<td style="text-align:left">git push –force origin $(current_branch)</td>
</tr>
<tr>
<td style="text-align:left">ghh</td>
<td style="text-align:left">git help</td>
</tr>
<tr>
<td style="text-align:left">ggpull</td>
<td style="text-align:left">ggl</td>
</tr>
<tr>
<td style="text-align:left">ggpur</td>
<td style="text-align:left">ggu</td>
</tr>
<tr>
<td style="text-align:left">ggpush</td>
<td style="text-align:left">ggp</td>
</tr>
<tr>
<td style="text-align:left">ggsup</td>
<td style="text-align:left">git branch –set-upstream-to = origin/$(current_branch)</td>
</tr>
<tr>
<td style="text-align:left">gpsup</td>
<td style="text-align:left">git push –set-upstream origin $(current_branch)</td>
</tr>
<tr>
<td style="text-align:left">gignore</td>
<td style="text-align:left">git update-index –assume-unchanged</td>
</tr>
<tr>
<td style="text-align:left">gignored</td>
<td style="text-align:left">git ls-files -v \</td>
<td>grep “^[[:lower:]]”</td>
</tr>
<tr>
<td style="text-align:left">git-svn-dcommit-push</td>
<td style="text-align:left">git svn dcommit &amp;&amp; git push github master:svntrunk</td>
</tr>
<tr>
<td style="text-align:left">gk</td>
<td style="text-align:left">\gitk –all –branches</td>
</tr>
<tr>
<td style="text-align:left">gke</td>
<td style="text-align:left">\gitk –all $(git log -g –pretty = format:%h)</td>
</tr>
<tr>
<td style="text-align:left">gl</td>
<td style="text-align:left">git pull</td>
</tr>
<tr>
<td style="text-align:left">glg</td>
<td style="text-align:left">git log –stat –color</td>
</tr>
<tr>
<td style="text-align:left">glgg</td>
<td style="text-align:left">git log –graph –color</td>
</tr>
<tr>
<td style="text-align:left">glgga</td>
<td style="text-align:left">git log –graph –decorate –all</td>
</tr>
<tr>
<td style="text-align:left">glgm</td>
<td style="text-align:left">git log –graph –max-count = 10</td>
</tr>
<tr>
<td style="text-align:left">glgp</td>
<td style="text-align:left">git log –stat –color -p</td>
</tr>
<tr>
<td style="text-align:left">glo</td>
<td style="text-align:left">git log –oneline –decorate –color</td>
</tr>
<tr>
<td style="text-align:left">glog</td>
<td style="text-align:left">git log –oneline –decorate –color –graph</td>
</tr>
<tr>
<td style="text-align:left">glol</td>
<td style="text-align:left">git log –graph –pretty = format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit</td>
</tr>
<tr>
<td style="text-align:left">glola</td>
<td style="text-align:left">git log –graph –pretty = format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit –all</td>
</tr>
<tr>
<td style="text-align:left">glp</td>
<td style="text-align:left">_git_log_prettily</td>
</tr>
<tr>
<td style="text-align:left">gm</td>
<td style="text-align:left">git merge</td>
</tr>
<tr>
<td style="text-align:left">gmom</td>
<td style="text-align:left">git merge origin/master</td>
</tr>
<tr>
<td style="text-align:left">gmt</td>
<td style="text-align:left">git mergetool –no-prompt</td>
</tr>
<tr>
<td style="text-align:left">gmtvim</td>
<td style="text-align:left">git mergetool –no-prompt –tool = vimdiff</td>
</tr>
<tr>
<td style="text-align:left">gmum</td>
<td style="text-align:left">git merge upstream/master</td>
</tr>
<tr>
<td style="text-align:left">gp</td>
<td style="text-align:left">git push</td>
</tr>
<tr>
<td style="text-align:left">gpd</td>
<td style="text-align:left">git push –dry-run</td>
</tr>
<tr>
<td style="text-align:left">gpoat</td>
<td style="text-align:left">git push origin –all &amp;&amp; git push origin –tags</td>
</tr>
<tr>
<td style="text-align:left">gpristine</td>
<td style="text-align:left">git reset –hard &amp;&amp; git clean -dfx</td>
</tr>
<tr>
<td style="text-align:left">gpu</td>
<td style="text-align:left">git push upstream</td>
</tr>
<tr>
<td style="text-align:left">gpv</td>
<td style="text-align:left">git push -v</td>
</tr>
<tr>
<td style="text-align:left">gr</td>
<td style="text-align:left">git remote</td>
</tr>
<tr>
<td style="text-align:left">gra</td>
<td style="text-align:left">git remote add</td>
</tr>
<tr>
<td style="text-align:left">grb</td>
<td style="text-align:left">git rebase</td>
</tr>
<tr>
<td style="text-align:left">grba</td>
<td style="text-align:left">git rebase –abort</td>
</tr>
<tr>
<td style="text-align:left">grbc</td>
<td style="text-align:left">git rebase –continue</td>
</tr>
<tr>
<td style="text-align:left">grbi</td>
<td style="text-align:left">git rebase -i</td>
</tr>
<tr>
<td style="text-align:left">grbm</td>
<td style="text-align:left">git rebase master</td>
</tr>
<tr>
<td style="text-align:left">grbs</td>
<td style="text-align:left">git rebase –skip</td>
</tr>
<tr>
<td style="text-align:left">grh</td>
<td style="text-align:left">git reset HEAD</td>
</tr>
<tr>
<td style="text-align:left">grhh</td>
<td style="text-align:left">git reset HEAD –hard</td>
</tr>
<tr>
<td style="text-align:left">grmv</td>
<td style="text-align:left">git remote rename</td>
</tr>
<tr>
<td style="text-align:left">grrm</td>
<td style="text-align:left">git remote remove</td>
</tr>
<tr>
<td style="text-align:left">grset</td>
<td style="text-align:left">git remote set-url</td>
</tr>
<tr>
<td style="text-align:left">grt</td>
<td style="text-align:left">cd $(git rev-parse –show-toplevel \</td>
<td>\</td>
<td>echo “.”)</td>
</tr>
<tr>
<td style="text-align:left">gru</td>
<td style="text-align:left">git reset –</td>
</tr>
<tr>
<td style="text-align:left">grup</td>
<td style="text-align:left">git remote update</td>
</tr>
<tr>
<td style="text-align:left">grv</td>
<td style="text-align:left">git remote -v</td>
</tr>
<tr>
<td style="text-align:left">gsb</td>
<td style="text-align:left">git status -sb</td>
</tr>
<tr>
<td style="text-align:left">gsd</td>
<td style="text-align:left">git svn dcommit</td>
</tr>
<tr>
<td style="text-align:left">gsi</td>
<td style="text-align:left">git submodule init</td>
</tr>
<tr>
<td style="text-align:left">gsps</td>
<td style="text-align:left">git show –pretty = short –show-signature</td>
</tr>
<tr>
<td style="text-align:left">gsr</td>
<td style="text-align:left">git svn rebase</td>
</tr>
<tr>
<td style="text-align:left">gss</td>
<td style="text-align:left">git status -s</td>
</tr>
<tr>
<td style="text-align:left">gst</td>
<td style="text-align:left">git status</td>
</tr>
<tr>
<td style="text-align:left">gsta</td>
<td style="text-align:left">git stash save</td>
</tr>
<tr>
<td style="text-align:left">gstaa</td>
<td style="text-align:left">git stash apply</td>
</tr>
<tr>
<td style="text-align:left">gstd</td>
<td style="text-align:left">git stash drop</td>
</tr>
<tr>
<td style="text-align:left">gstl</td>
<td style="text-align:left">git stash list</td>
</tr>
<tr>
<td style="text-align:left">gstp</td>
<td style="text-align:left">git stash pop</td>
</tr>
<tr>
<td style="text-align:left">gstc</td>
<td style="text-align:left">git stash clear</td>
</tr>
<tr>
<td style="text-align:left">gsts</td>
<td style="text-align:left">git stash show –text</td>
</tr>
<tr>
<td style="text-align:left">gsu</td>
<td style="text-align:left">git submodule update</td>
</tr>
<tr>
<td style="text-align:left">gts</td>
<td style="text-align:left">git tag -s</td>
</tr>
<tr>
<td style="text-align:left">gunignore</td>
<td style="text-align:left">git update-index –no-assume-unchanged</td>
</tr>
<tr>
<td style="text-align:left">gunwip</td>
<td style="text-align:left">git log -n 1 \</td>
<td>grep -q -c “--wip--“ &amp;&amp; git reset HEAD~1</td>
</tr>
<tr>
<td style="text-align:left">gup</td>
<td style="text-align:left">git pull –rebase</td>
</tr>
<tr>
<td style="text-align:left">gupv</td>
<td style="text-align:left">git pull –rebase -v</td>
</tr>
<tr>
<td style="text-align:left">glum</td>
<td style="text-align:left">git pull upstream master</td>
</tr>
<tr>
<td style="text-align:left">gvt</td>
<td style="text-align:left">git verify-tag</td>
</tr>
<tr>
<td style="text-align:left">gwch</td>
<td style="text-align:left">git whatchanged -p –abbrev-commit –pretty = medium</td>
</tr>
<tr>
<td style="text-align:left">gwip</td>
<td style="text-align:left">git add -A; git rm $(git ls-files –deleted) 2&gt; /dev/null; git commit -m “–wip–”</td>
</tr>
</tbody>
</table>
<h2 id="Deprecated-Aliases"><a href="#Deprecated-Aliases" class="headerlink" title="Deprecated Aliases"></a>Deprecated Aliases</h2><p>These are aliases that have been removed, renamed, or otherwise modified in a way that may, or may not, receive further support.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Alias</th>
<th style="text-align:left">Command</th>
<th>Modification</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">gap</td>
<td style="text-align:left">git add –patch</td>
<td>new alias <code>gapa</code></td>
</tr>
<tr>
<td style="text-align:left">gcl</td>
<td style="text-align:left">git config –list</td>
<td>new alias <code>gcf</code></td>
</tr>
<tr>
<td style="text-align:left">gdc</td>
<td style="text-align:left">git diff –cached</td>
<td>new alias <code>gdca</code></td>
</tr>
<tr>
<td style="text-align:left">gdt</td>
<td style="text-align:left">git difftool</td>
<td>no replacement</td>
</tr>
<tr>
<td style="text-align:left">ggpull</td>
<td style="text-align:left">git pull origin $(current_branch)</td>
<td>new alias <code>ggl</code> (<code>ggpull</code> still exists for now though)</td>
</tr>
<tr>
<td style="text-align:left">ggpur</td>
<td style="text-align:left">git pull –rebase origin $(current_branch)</td>
<td>new alias <code>ggu</code> (<code>ggpur</code> still exists for now though)</td>
</tr>
<tr>
<td style="text-align:left">ggpush</td>
<td style="text-align:left">git push origin $(current_branch)</td>
<td>new alias <code>ggp</code> (<code>ggpush</code> still exists for now though)</td>
</tr>
<tr>
<td style="text-align:left">gk</td>
<td style="text-align:left">gitk –all –branches</td>
<td>now aliased to <code>\gitk --all --branches</code></td>
</tr>
<tr>
<td style="text-align:left">glg</td>
<td style="text-align:left">git log –stat –max-count = 10</td>
<td>now aliased to <code>git log --stat --color</code></td>
</tr>
<tr>
<td style="text-align:left">glgg</td>
<td style="text-align:left">git log –graph –max-count = 10</td>
<td>now aliased to <code>git log --graph --color</code></td>
</tr>
<tr>
<td style="text-align:left">gwc</td>
<td style="text-align:left">git whatchanged -p –abbrev-commit –pretty = medium</td>
<td>new alias <code>gwch</code></td>
</tr>
<tr>
<td style="text-align:left">gwip</td>
<td style="text-align:left">git add -A; git ls-files –deleted -z \</td>
<td>xargs -r0 git rm; git commit -m “–wip–”</td>
<td>now aliased to <code>git add -A; git rm $(git ls-files --deleted) 2&gt; /dev/null; git commit -m &quot;--wip--&quot;</code></td>
</tr>
</tbody>
</table>
<h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><h3 id="Current"><a href="#Current" class="headerlink" title="Current"></a>Current</h3><table>
<thead>
<tr>
<th style="text-align:left">Command</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">current_branch</td>
<td style="text-align:left">Return the name of the current branch</td>
</tr>
<tr>
<td style="text-align:left">current_repository</td>
<td style="text-align:left">Return the names of the current remotes</td>
</tr>
<tr>
<td style="text-align:left">git_current_user_name</td>
<td style="text-align:left">Returns the <code>user.name</code> config value</td>
</tr>
<tr>
<td style="text-align:left">git_current_user_email</td>
<td style="text-align:left">Returns the <code>user.email</code> config value</td>
</tr>
</tbody>
</table>
<h3 id="WiP"><a href="#WiP" class="headerlink" title="WiP"></a>WiP</h3><p>These features allow to pause a branch development and switch to another one (<em>“Work in Progress”</em>, or wip). When you want to go back to work, just unwip it.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Command</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">work_in_progress</td>
<td style="text-align:left">Echoes a warning if the current branch is a wip</td>
</tr>
<tr>
<td style="text-align:left">gwip</td>
<td style="text-align:left">Commit wip branch</td>
</tr>
<tr>
<td style="text-align:left">gunwip</td>
<td style="text-align:left">Uncommit wip branch</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iTerm2终端集成git缩写意思&quot;&gt;&lt;a href=&quot;#iTerm2终端集成git缩写意思&quot; class=&quot;headerlink&quot; title=&quot;iTerm2终端集成git缩写意思&quot;&gt;&lt;/a&gt;iTerm2终端集成git缩写意思&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;h
    
    </summary>
    
    
      <category term="iTerm2" scheme="http://kingle.online/tags/iTerm2/"/>
    
      <category term="git" scheme="http://kingle.online/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Spacemacs_Rocks第二季</title>
    <link href="http://kingle.online/2018/05/11/Spacemacs-Rocks%E7%AC%AC%E4%BA%8C%E5%AD%A3/"/>
    <id>http://kingle.online/2018/05/11/Spacemacs-Rocks第二季/</id>
    <published>2018-05-11T11:09:32.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><p><code>转载自子龙山人</code>  <a href="https://github.com/emacs-china/Spacemacs-rocks" target="_blank" rel="external">GitHub</a></p>
<ul>
<li><a href="#org8e531e4">Spacemacs Rocks 第二季</a></li>
<li><a href="#org2190e32">第一天：准备开始</a><ul>
<li><a href="#org5bc055c">基础操作</a></li>
<li><a href="#org2c50608">内置功能</a></li>
<li><a href="#orgfc88980">学习基础 Elisp</a><ul>
<li><a href="#orgf08ebf8">开始 Hacking！</a></li>
<li><a href="#org2547de0">插件管理</a></li>
<li><a href="#orge1dca82">Org-mode</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org2695352">第二天：高级自定义</a><ul>
<li><a href="#orgf957759">Emacs 也很美</a></li>
<li><a href="#org6fcd5d1">JavaScript IDE</a><ul>
<li><a href="#org8f375d6">Org-mode 进阶</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org50998e0">第三天：配置文件模块化（上）</a><ul>
<li><a href="#org1d08f8f">多文件存储配置文件(上)</a></li>
<li><a href="#org9b503cc">Major 与 Minor Mode 详解</a></li>
</ul>
</li>
<li><a href="#org9d0053b">第四天：配置文件模块化（下）以及使用优化</a><ul>
<li><a href="#orgfdc7949">配置文件模块化（下）</a></li>
<li><a href="#orgd68fa7c">更好的默认设置</a><ul>
<li><a href="#org196a7c0">代码缩进</a></li>
<li><a href="#org869832b">缩写补全</a></li>
<li><a href="#org06e0376">Hippie 补全</a></li>
</ul>
</li>
<li><a href="#orgeaf2737">Dired Mode</a></li>
<li><a href="#orgc24092e">Org-mode 管理 Emacs 配置</a></li>
</ul>
</li>
<li><a href="#orgc5c41fd">第五天：打造前端开发神器</a><ul>
<li><a href="#orgcccff8e">web-mode</a></li>
<li><a href="#orga582e4b">js2-refactor</a></li>
<li><a href="#org059d427">优化 occur 与 imenu</a></li>
<li><a href="#org22cfd37">expand-region</a></li>
<li><a href="#orgfb338f0">iedit</a></li>
<li><a href="#orgac10fea">Org 导出</a></li>
</ul>
</li>
<li><a href="#org0c79e1c">第六天：代码片段与语法检查器</a><ul>
<li><a href="#org02ac8b2">Org-mode 进阶使用</a></li>
<li><a href="#orgd315801">批量修改文件名</a></li>
<li><a href="#orgd19f267">搜索与替换</a></li>
<li><a href="#org3b3755a">语法检查器（Linter）</a></li>
<li><a href="#orgf80e49f">代码块</a><ul>
<li><a href="#org4b803a9">auto-yasnippet</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgb3a7381">第七天：Evil 模式</a><ul>
<li><a href="#orge0ad04b">Evil 的安装</a></li>
<li><a href="#org564b3ef">Evil 模式插件</a><ul>
<li><a href="#org1d14471">Leader Key</a></li>
<li><a href="#orga686ee7">Window-numbering</a></li>
<li><a href="#org104ac0e">Evil-Surround</a></li>
<li><a href="#org9dc2dbf">Evil-nerd-commenter</a></li>
<li><a href="#org8b2c336">Which-key</a></li>
</ul>
</li>
<li><a href="#orgb455361">Org Mode 中的搜索</a></li>
</ul>
</li>
<li><a href="#org9f0276f">第八天：Cask 介绍与实践</a><ul>
<li><a href="#org11f095e">Cask 的安装</a></li>
<li><a href="#orgb0ac29c">为何使用 Cask</a></li>
<li><a href="#org98cd21d">故障排除</a><ul>
<li><a href="#org90fc7fa">Emacs24.5 时不能安装 <strong>let-alist</strong></a></li>
<li><a href="#orgbb42be1">在 Emacs24.5 中没有定义 define-advice</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org2696956">第九天：Macro 与 Use-package</a><ul>
<li><a href="#orgee1cc43">Macro</a><ul>
<li><a href="#orgd8856e4">什么是 Macro</a></li>
<li><a href="#org2b6f15f">backquote</a></li>
<li><a href="#org0c70c67">为什么使用宏</a></li>
</ul>
</li>
<li><a href="#orgee11da2">Use-package</a><ul>
<li><a href="#orgd43ba31">简介</a></li>
<li><a href="#org0b48881">一些简单的用法</a></li>
<li><a href="#orgc4af53d">为什么使用 Use-package</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org1bc6686">第十天: Company-mode 与 auto-completion</a><ul>
<li><a href="#org7d4cda3">升级 Package 之后有 BUG 怎么办</a></li>
<li><a href="#org30609e4">Use-package 的更多用法</a></li>
<li><a href="#org9b55859">Company-mode 的工作原理</a></li>
<li><a href="#org3d77d90">为什么有时 Python 的补全 不工作</a></li>
<li><a href="#orgc8d9855">Group Backend</a></li>
<li><a href="#org4cd182c">怎样写一个简单的补全后端</a></li>
</ul>
</li>
<li><a href="#orgf400691">第十一天: Spacemacs 简介及安装</a><ul>
<li><a href="#org8e616e8">安装 Spacemacs</a></li>
<li><a href="#org786c10c">添加内置的 layer</a></li>
<li><a href="#org2625293">一些简单的配置</a><ul>
<li><a href="#org4b2e64d">启动时全屏显示</a></li>
<li><a href="#orgbe06964">ivy layer</a></li>
<li><a href="#org08caf77">查看 layer 下的 文档信息</a></li>
<li><a href="#org68755ed">删除安装的 package</a></li>
<li><a href="#orgff4594e">安装 package</a></li>
<li><a href="#org35fee55">配置 customize-group</a></li>
<li><a href="#orgbf75d92">修改主题</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgd5f1894">第十二天: 创建你的第一个 Spacemacs Layer</a><ul>
<li><a href="#orgc209da2">如何更新 Spacemacs</a></li>
<li><a href="#orgaa8a861">variables 变量</a></li>
<li><a href="#org6ead49b">定制 modeline</a></li>
<li><a href="#orgb9f8f67">创建自己的 layer</a></li>
<li><a href="#orge89fffe">文档</a></li>
</ul>
</li>
<li><a href="#org87c1aae">第十三天: 定制你的 Layer</a><ul>
<li><a href="#orgc978b4e">修复上一期视频中的配置问题</a></li>
<li><a href="#orgebd1104">修复 ivy0.8 的问题</a></li>
<li><a href="#orgbe2ad06">post-init 和 pre-init</a></li>
<li><a href="#org20e46c5">location</a><ul>
<li><a href="#orgfa0c305">自带 package</a></li>
<li><a href="#org913e852">从 github 安装</a></li>
</ul>
</li>
<li><a href="#org2f374c9">layers.el</a></li>
</ul>
</li>
<li><a href="#orga1f8ac7">第十四天: 文件和 Buffer 操作</a><ul>
<li><a href="#org4d6fe04">不同点</a></li>
<li><a href="#org383a09c">文件相关操作</a></li>
<li><a href="#org32b660b">buffer 相关操作</a></li>
<li><a href="#org0098104">Dired</a></li>
</ul>
</li>
<li><a href="#orgcb67752">第十五天: layout, windows 和 project 相关</a><ul>
<li><a href="#org8be11d8">Layout 相关操作</a></li>
<li><a href="#orgeb89e22">Window 相关操作</a></li>
<li><a href="#org0bd2176">project 相关操作</a></li>
<li><a href="#orgbbaa39c">更多内容</a></li>
</ul>
</li>
<li><a href="#orgc3b50c4">第十六天: 使用 ctags 和 company-etags</a><ul>
<li><a href="#orgbe8e1c7">为什么使用 ctags</a></li>
<li><a href="#orgafde45b">如何配置 ctags</a></li>
<li><a href="#org6e89a36">如何高效的使用 ctags</a><ul>
<li><a href="#org8794417">自动重新生成 TAGS 文件</a></li>
<li><a href="#orgd708a2d">配置规则来生成更多的 TAGS</a></li>
<li><a href="#org2d1e771">使用 etags-select 来浏览项目</a></li>
</ul>
</li>
<li><a href="#orgd18a4d2">最后的思考</a></li>
</ul>
</li>
</ul>
<p><a href="https://travis-ci.org/emacs-china/Spacemacs-rocks" target="_blank" rel="external">https://travis-ci.org/emacs-china/Spacemacs-rocks.svg?branch=master</a></p>
<p><a id="org8e531e4"></a></p>
<h1 id="Spacemacs-Rocks-第二季"><a href="#Spacemacs-Rocks-第二季" class="headerlink" title="Spacemacs Rocks 第二季"></a>Spacemacs Rocks 第二季</h1><p><img src="https://raw.githubusercontent.com/emacs-china/Spacemacs-rocks/master/Artwork.png"></p>
<p><strong>GitHub</strong> <a href="https://github.com/emacs-china/Spacemacs-rocks" target="_blank" rel="external">Spacemacs Rocks</a> <strong>作者</strong> <a href="https://github.com/zilongshanren/" target="_blank" rel="external">zilongshanren</a> <strong>编者</strong> <a href="https://github.com/li-xinyang" target="_blank" rel="external">li-xinyang</a>, <a href="https://github.com/lsytj0413" target="_blank" rel="external">lsytj0413</a></p>
<p>在这一季中我们计划用 21 天学习 Emacs 以及 Spacemacs 的使用。从基础安装开始到可以<br>运用到工作生产环节中。为了确保学习质量，请务必完成和理解计划中的每一项学习任务。</p>
<p><a id="org2190e32"></a></p>
<h1 id="第一天：准备开始"><a href="#第一天：准备开始" class="headerlink" title="第一天：准备开始"></a>第一天：准备开始</h1><p>视频地址如下</p>
<ul>
<li><a href="http://v.youku.com/v_show/id_XMTUwNjU0MjE0OA==.html" target="_blank" rel="external">优酷视频</a></li>
<li><a href="http://pan.baidu.com/s/1gep9DQV" target="_blank" rel="external">百度网盘</a></li>
<li><a href="https://youtu.be/QKhS9EX9qd8" target="_blank" rel="external">YouTube</a></li>
</ul>
<p><strong>说在最前面</strong></p>
<p>如果你第一次听说 Emacs 你可以在<a href="http://emacs.sexy/" target="_blank" rel="external">性感的 Emacs（Emacs is Sexy）</a>一文中找到使用它的理<br>由！我相信你一定会被它的强大所吸引。</p>
<p>如果你还没有安装 Emacs 可以在 <a href="http://emacsformacosx.com/builds" target="_blank" rel="external">Mac OS X 安装链接</a>以及 <a href="http://emacsbinw64.sourceforge.net/" target="_blank" rel="external">Window 安装链接</a>找到它。本文<br>我们使用的为 Emacs 25.0.x Pretest 版本，一些配置在 Emacs 24 中可能并不适用。</p>
<p>在开始本教程之前请务必先完成 Emacs 提供的官方教程（完成时间大约 30 分钟），它可<br>以通过使用 <code>C-h t</code> （同时按住 Ctrl 与 h 键，接着按 t 键 <code>t</code> 在这里代表 tutorial）<br>在 Emacs 中直接将其打开。</p>
<p>Emacs Lisp 是 Emacs 所用的编程语言，你可以在阅读<a href="https://learnxinyminutes.com/docs/elisp/" target="_blank" rel="external">这篇教程（Learn X in Y Minutes）</a><br>后很快地了解它的基础用法。</p>
<p><a id="org5bc055c"></a></p>
<h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p>因为 Control 键在 Emacs 中极为常用，所以为了更方便地使用 Emacs 的键位修改，需要<br>对其做出修改。建议将大写锁定键（Caps Lock）替换为 Control 键。这里是一个可以参考<br>的把大写锁定键替换为 Control 键的教程：<a href="https://www.emacswiki.org/emacs/MovingTheCtrlKey" target="_blank" rel="external">移动 Control 键 (Moving The Ctrl Key)。</a>如<br>果这个的教程不适用于你的操作系统，请自行搜索其它的修改方式。</p>
<p>常见符号所代表的意义如下</p>
<ul>
<li>M(eta)，在 Mac 下为 Option 键</li>
<li>s(uper)，在 Mac 环境下为左 Command 键</li>
<li>S(Shift)</li>
<li>C(trl)</li>
</ul>
<p>光标的移动是编辑器中最常用的操作所以必须熟知。</p>
<ul>
<li><code>C-f</code> 为前移一个字符， <code>f</code> 代表 forward。</li>
<li><code>C-b</code> 为后移一个字符， <code>b</code> 代表 backward。</li>
<li><code>C-p</code> 为上移至前一行， <code>p</code> 代表 previous。</li>
<li><code>C-n</code> 为上移至下一行， <code>n</code> 代表 next。</li>
<li><code>C-a</code> 为移至行首， <code>a</code> 代表 ahead。</li>
<li><code>C-e</code> 为移至行尾， <code>e</code> 代表 end。</li>
</ul>
<p>常用的文件操作快捷键组合也必须熟记。</p>
<ul>
<li><code>C-x C-f</code> 为打开目标文件， <code>f</code> 代表 find/file</li>
<li><code>C-x C-s</code> 为保存当前缓冲区（Buffer）， <code>s</code> 代表 save</li>
</ul>
<p><code>C-x</code> 是 Emacs 的快捷键中常用的前缀命令。这些前缀命令常常代表了一系列有关联的指<br>令，十分重要，请特别牢记。其它常见的还有 <code>C-c</code>, <code>C-h</code> 。打断组合键为 <code>C-g</code> ，它<br>用于终端取消之前的指令。快捷键就是用预先绑定好的方式告诉 Emacs 去执行指定的命令。<br>（之后会介绍到更多有关绑定的内容）</p>
<p><a id="org2c50608"></a></p>
<h2 id="内置功能"><a href="#内置功能" class="headerlink" title="内置功能"></a>内置功能</h2><p>Emacs 功能强大，但是部分功能默认情况下并未开启。下面就有几个例子，</p>
<p>编辑器内显示行号可使用 <code>M-x linum-mode</code> 来开启。</p>
<p><strong>获取帮助</strong></p>
<p>Emacs 是一个富文档编辑器（Self document, extensible editor）而下面的三种方法在学<br>习 Emacs 的过程中也非常重要。他们分别是，</p>
<ul>
<li><code>C-h k</code> 寻找快捷键的帮助信息</li>
<li><code>C-h v</code> 寻找变量的帮助信息</li>
<li><code>C-h f</code> 寻找函数的帮助信息</li>
</ul>
<p><a id="orgfc88980"></a></p>
<h2 id="学习基础-Elisp"><a href="#学习基础-Elisp" class="headerlink" title="学习基础 Elisp"></a>学习基础 Elisp</h2><p>请务必完成<a href="https://learnxinyminutes.com/docs/elisp/" target="_blank" rel="external">这篇教程（Learn X in Y Minutes）</a>来了解 Elisp 的使用（阅读时间大约 15<br>分钟），你也可以在<a href="https://learnxinyminutes.com/docs/zh-cn/elisp-cn/" target="_blank" rel="external">这里</a>找到它的中文版。Emacs Lisp 为一个函数式的语言，所以它全部<br>功能都是由函数来实现的。</p>
<p>下面为一些简单的例子</p>
<pre><code>;; 2 + 2
(+ 2 2)

;; 2 + 3 * 4
(+ 2 (* 3 4))

;; 定义变量
(setq name &quot;username&quot;)
(message name) ; -&gt; &quot;username&quot;

;; 定义函数
(defun func ()
  (message &quot;Hello, %s&quot; name))

;; 执行函数
(func) ; -&gt; Hello, username

;; 设置快捷键
(global-set-key (kbd &quot;&lt;f1&gt;&quot;) &apos;func)

;; 使函数可直接被调用可添加 (interactive)
(defun func ()
  (interactive)
  (message &quot;Hello, %s&quot; name))
</code></pre><p><a id="orgf08ebf8"></a></p>
<h3 id="开始-Hacking！"><a href="#开始-Hacking！" class="headerlink" title="开始 Hacking！"></a>开始 Hacking！</h3><p>Emacs 的配置文件默认保存在 <code>~/.emacs.d/init.el</code> 文件中。（如果其不存在可自行创建，<br>配置文件也可保存在 <code>~/.emacs</code> 文件中，他们之间的区别我们会在后面做讨论）</p>
<p><strong><strong>注意：</strong></strong> 如果希望把配置放在 <code>~/.emacs.d/init.el</code> 文件中，那么需要手工删除<br><code>~/.emacs</code> 文件。</p>
<p>在开始配置之前让我们先来区别 Emacs 中 Major Mode 与 Minor Mode 的区别。Major<br>Mode 通常是定义对于一种文件类型编辑的核心规则，例如语法高亮、缩进、快捷键绑定等。<br>而 Minor Mode 是除去 Major Mode 所提供的核心功能以外的额外编辑功能（辅助功能）。<br>例如在下面的配置文件中 <code>tool-bar-mode</code> 与 <code>linum-mode</code> 等均为 Minor Mode*。</p>
<p>简单来说就是，一种文件类型同时只能存在一种 Major Mode 但是它可以同时激活一种或多<br>种 Minor Mode。如果你希望知道当前的模式信息，可以使用 <code>C-h m</code> 来显示当前所有开启<br>的全部 Minor Mode 的信息。</p>
<p><strong>简单的编辑器自定义</strong></p>
<p>下面是一些简单的编辑器配置信息，你需要做的就是将其写入你的配置文件中<br>（ <code>~/.emacs.d/init.el</code> ）即可。</p>
<pre><code>;; 关闭工具栏，tool-bar-mode 即为一个 Minor Mode
(tool-bar-mode -1)

;; 关闭文件滑动控件
(scroll-bar-mode -1)

;; 显示行号
(global-linum-mode 1)

;; 更改光标的样式（不能生效，解决方案见第二集）
(setq cursor-type &apos;bar)

;; 关闭启动帮助画面
(setq inhibit-splash-screen 1)

;; 关闭缩进 (第二天中被去除)
;; (electric-indent-mode -1)

;; 更改显示字体大小 16pt
;; http://stackoverflow.com/questions/294664/how-to-set-the-font-size-in-emacs
(set-face-attribute &apos;default nil :height 160)

;; 快速打开配置文件
(defun open-init-file()
  (interactive)
  (find-file &quot;~/.emacs.d/init.el&quot;))

;; 这一行代码，将函数 open-init-file 绑定到 &lt;f2&gt; 键上
(global-set-key (kbd &quot;&lt;f2&gt;&quot;) &apos;open-init-file)
</code></pre><p>在每次编辑配置文件后，刚刚做的修改并不会立刻生效。这时你需要重启编辑器或者重新加<br>载配置文件。重新加载配置文件你需要在当前配置文件中使用 <code>M-x load-file</code> 双击两次<br>回车确认默认文件名，或者使用 <code>M-x eval-buffer</code> 去执行当前缓冲区的所有 Lisp 命令。<br>你也可以使用 <code>C-x C-e</code> 来执行某一行的 Lisp 代码。这些可使刚刚修改的配置文件生效。<br>当然你也可以将这些函数绑定为快捷键。</p>
<p><a id="org2547de0"></a></p>
<h3 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h3><p>使用默认的插件管理系统（可在菜单栏 <code>Options &gt; Manage Emacs Packages</code> 中找到）安<br>装 <a href="http://company-mode.github.io/" target="_blank" rel="external">Company</a> 插件，他是一个用于代码补全的插件。它的名字代表补全一切的意思（ <strong>Comp</strong><br>lete <strong>Any</strong> thing）。因为默认的插件管理系统提供的插件十分有限，所以我们会在之后的<br>几天中继续将其强化。</p>
<p>使用的下面的配置将 Company-mode 在全局模式下激活</p>
<pre><code>; 开启全局 Company 补全
(global-company-mode 1)
</code></pre><p><a id="orge1dca82"></a></p>
<h3 id="Org-mode"><a href="#Org-mode" class="headerlink" title="Org-mode"></a>Org-mode</h3><p>简单的 Org-mode 使用，它可以列出提纲，并方便地使用 <code>tab</code> 键来对其进行展开与关闭。<br><code>C-c C-t</code> 可以将一个条目转换成一条待办事件。</p>
<pre><code>* 为一级标题
** 为二级标题
*** 为三级标题并以此类推
</code></pre><p><a id="org2695352"></a></p>
<h1 id="第二天：高级自定义"><a href="#第二天：高级自定义" class="headerlink" title="第二天：高级自定义"></a>第二天：高级自定义</h1><p>视频地址如下</p>
<ul>
<li><a href="http://v.youku.com/v_show/id_XMTUxMzQyODI4MA==.html" target="_blank" rel="external">优酷视频</a></li>
<li><a href="http://pan.baidu.com/s/1c2Cw9ck" target="_blank" rel="external">百度网盘</a></li>
<li><a href="https://youtu.be/l6TzOIlS8Ec" target="_blank" rel="external">YouTube</a></li>
</ul>
<p><strong>说在最前面</strong></p>
<p>如果你想深入学习 Emacs Lisp 可以阅读 GNU 提供的 <a href="https://www.gnu.org/software/emacs/manual/html_mono/eintr.html" target="_blank" rel="external">An Introduction to Programming<br>in Emacs Lisp</a> 。（也可以 <code>M-x info</code> 然后选择 Emacs Lisp Intro）</p>
<p>我们先解决前一天中遇到的一些问题。首先是在对象是一个缓冲区局部变量（Buffer-local<br>variable）的时候，比如这里的 <code>cursor-type</code> ，我们需要区分 <code>setq</code> 与<br><code>setq-default</code> ： <code>setq</code> 设置当前缓冲区（Buffer）中的变量值， <code>setq-default</code> 设<br>置的为全局的变量的值（具体内容可以在 <a href="http://stackoverflow.com/questions/18172728/the-difference-between-setq-and-setq-default-in-emacs-lisp" target="_blank" rel="external">StackOverflow 找到</a>）。下面是一个例子，用于<br>设置光标样式的方法。</p>
<pre><code>(setq-default cursor-type &apos;bar)
</code></pre><p>今天我们需要将第一天关闭的自动缩进 (<code>electric-indent-mode</code>) 从配置文件中去除，它<br>是 Emacs 24.4 中加入的新特性，你可以在这篇<a href="http://emacsredux.com/blog/2014/01/19/a-peek-at-emacs-24-dot-4-auto-indentation-by-default/" target="_blank" rel="external">文章</a>中找到更多关于它的内容。我们之前关<br>闭它是因为，它存在不理想的缩进效果（在 Emacs Lisp 中用分号做注释时<br><code>fancy-comment</code> 会造成很远的缩进，其实解决方法是使用 Emacs Lisp 推荐的两个分号而<br>不是一个 <code>;;</code> ，这样就可以避免这个问题。于是我们也就将其从配置文件中删除）</p>
<p>因为通常我们的配置文件以及项目文件均使用版本控制系统，所以自动生成的备份文件就显<br>得有些多余。我们还可以禁止 Emacs 自动生成备份文件，例如 <code>init.el~</code> 。（ <code>~</code> 为后<br>缀的文件为自动生成的备份文件）我们可以使用下面的方法将其关闭。</p>
<pre><code>(setq make-backup-files nil)
</code></pre><p>关于分屏的使用，如果你已经读过 Emacs 自带的教程，现在你应该已经掌握了基本的分屏<br>操作方法了。关于分屏的更多内容你可以在<a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Split-Window.html" target="_blank" rel="external">这里</a>找到。</p>
<ul>
<li><code>C-x 1</code> 仅保留当前窗口</li>
<li><code>C-x 2</code> 将当前窗口分到上边</li>
<li><code>C-x 3</code> 将当前窗口分到右边</li>
</ul>
<p>使用下面的配置来加入最近打开过文件的选项让我们更快捷的在图形界面的菜单中打开最近<br>编辑过的文件。</p>
<pre><code>(require &apos;recentf)
(recentf-mode 1)
(setq recentf-max-menu-item 10)

;; 这个快捷键绑定可以用之后的插件 counsel 代替
;; (global-set-key (kbd &quot;C-x C-r&quot;) &apos;recentf-open-files)
</code></pre><p><code>require</code> 的意思为从文件中加载特性，你可以在杀哥的网站读到关于 Emacs Lisp 库系统<br>的更多内容，文章在<a href="http://ergoemacs.org/emacs/elisp_library_system.html" target="_blank" rel="external">这里</a>。</p>
<p>使用下面的配置文件将删除功能配置成与其他图形界面的编辑器相同，即当你选中一段文字<br>之后输入一个字符会替换掉你选中部分的文字。</p>
<pre><code>(delete-selection-mode 1)
</code></pre><p>下面的这些函数可以让你找到不同函数，变量以及快捷键所定义的文件位置。因为非常常用<br>所以我们建议将其设置为与查找文档类似的快捷键（如下所示），</p>
<ul>
<li><code>find-function</code> （ <code>C-h C-f</code> ）</li>
<li><code>find-variable</code> （ <code>C-h C-v</code> ）</li>
<li><code>find-function-on-key</code> （ <code>C-h C-k</code> ）</li>
</ul>
<p>在我们进入下一个部分之间让我们来看看使用 <code>~/.emacs.d/init.el</code> 与 <code>~/.emacs</code> 的区<br>别（更多关于他们区别的讨论可在<a href="http://emacs.stackexchange.com/questions/1/are-there-any-advantages-to-using-emacs-d-init-el-instead-of-emacs" target="_blank" rel="external">这里</a>找到）。简单来说请使用前者，因为它有下面的两个<br>优点，</p>
<ul>
<li>它可以更好将所有 Emacs 相关的文件整合在一个目录内（干净的 <code>HOME</code> ，网盘备份等优点）</li>
<li>更好的版本控制</li>
</ul>
<p><a id="orgf957759"></a></p>
<h2 id="Emacs-也很美"><a href="#Emacs-也很美" class="headerlink" title="Emacs 也很美"></a>Emacs 也很美</h2><p><strong>配置插件源</strong></p>
<p>在进行美化之前我们需要配置插件的源（默认的源非常有限），最常使用的是 <a href="https://melpa.org/" target="_blank" rel="external">MELPA</a><br>（Milkypostman’s Emacs Lisp Package Archive）。它有非常多的插件（3000 多个插件）。<br>一个插件下载的次数多并不能说明它非常有用，也许这个插件是其他的插件的依赖。在<a href="https://melpa.org/#/getting-started" target="_blank" rel="external">这里</a><br>你可以找到其安装使用方法。添加源后，我们就可以使用 <code>M-x package-list-packages</code><br>来查看所有 MELPA 上的插件了。在表单中可以使用 <code>I</code> 来标记安装 <code>D</code> 来标记删除，<br><code>U</code> 来更新，并用 <code>X</code> 来确认。</p>
<p>你可以直接将下面的代码复制到你的配置文件顶端，从而直接使用 Melpa 作为插件的源。<br>你可以将你需要的插件名字写在 <code>my/packages</code> 中，Emacs 在启动时会自动下载未被安装<br>的插件。</p>
<pre><code> (when (&gt;= emacs-major-version 24)
     (require &apos;package)
     (package-initialize)
     (setq package-archives &apos;((&quot;gnu&quot;   . &quot;http://elpa.emacs-china.org/gnu/&quot;)
                      (&quot;melpa&quot; . &quot;http://elpa.emacs-china.org/melpa/&quot;))))

;; 注意 elpa.emacs-china.org 是 Emacs China 中文社区在国内搭建的一个 ELPA 镜像

 ;; cl - Common Lisp Extension
 (require &apos;cl)

 ;; Add Packages
 (defvar my/packages &apos;(
                ;; --- Auto-completion ---
                company
                ;; --- Better Editor ---
                hungry-delete
                swiper
                counsel
                smartparens
                ;; --- Major Mode ---
                js2-mode
                ;; --- Minor Mode ---
                nodejs-repl
                exec-path-from-shell
                ;; --- Themes ---
                monokai-theme
                ;; solarized-theme
                ) &quot;Default packages&quot;)

 (setq package-selected-packages my/packages)

 (defun my/packages-installed-p ()
     (loop for pkg in my/packages
           when (not (package-installed-p pkg)) do (return nil)
           finally (return t)))

 (unless (my/packages-installed-p)
     (message &quot;%s&quot; &quot;Refreshing package database...&quot;)
     (package-refresh-contents)
     (dolist (pkg my/packages)
       (when (not (package-installed-p pkg))
         (package-install pkg))))

 ;; Find Executable Path on OS X
 (when (memq window-system &apos;(mac ns))
   (exec-path-from-shell-initialize))
</code></pre><p>关于上面这段配置代码有几个知识点，首先就是这段配置文件中用到了 <code>loop for ... in</code><br>，它来自 <code>cl</code> 即 Common Lisp 扩展。 <code>for</code> , <code>in</code>, <code>collect</code> 均为 <code>cl-loop</code> 中的<br>保留关键字。下面是一些简单的 <code>cl-loop</code> 的使用示例：</p>
<pre><code>;; 遍历每一个缓冲区（Buffer）
(cl-loop for buf in (buffer-list)
         collect (buffer-file-name buf))

;; 寻找 729 的平方根（设置最大为 100 为了防止无限循环）
(cl-loop for x from 1 to 100
         for y = (* x x)
         until (&gt;= y 729)
         finally return (list x (= y 729)))
</code></pre><p>你可以在<a href="http://www.gnu.org/software/emacs/manual/html_mono/cl.html#Loop-Facility" target="_blank" rel="external">这里</a>找到更多关于循环的使用说明。</p>
<p>其次就是它使用到了 <code>quote</code>, 它其实就是我们之前常常见到的 <code>&#39;</code> （单引号）的完全体。<br>因为它在 Lisp 中十分常用，所以就提供了简写的方法。</p>
<pre><code>;; 下面两行的效果完全相同的
(quote foo)
&apos;foo
</code></pre><p><code>quote</code> 的意思是不要执行后面的内容，返回它原本的内容（具体请参考下面的例子）</p>
<pre><code>(print &apos;(+ 1 1)) ;; -&gt; (+ 1 1)
(print (+ 1 1))  ;; -&gt; 2
</code></pre><p>更多关于 <code>quote</code> 的内容可以在<a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Quoting.html" target="_blank" rel="external">这里</a>找到，或者在<a href="http://stackoverflow.com/questions/134887/when-to-use-quote-in-lisp" target="_blank" rel="external">这里</a>找到 StackOverflow 上对于它的讨论。</p>
<p>这样我们就可以区分下面三行代码的区别，</p>
<pre><code>;; 第一种
(setq package-selected-packages my/packages)
;; 第二种
(setq package-selected-packages &apos;my/packages)
;; 第三种
(setq package-selected-packages (quote my/packages))
</code></pre><p>第一种设置是在缓冲区中设置一个名为 <code>package-selected-packages</code> 的变量，将其的值<br>设定为 <code>my/packages</code> 变量的值。第二种和第三种其实是完全相同的，将一个名为<br><code>package-selected-packages</code> 的变量设置为 <code>my/packages</code> 。</p>
<p>我们可以用下面代码将 Emacs 设置为开启默认全屏，</p>
<pre><code>(setq initial-frame-alist (quote ((fullscreen . maximized))))
</code></pre><p>我们也可以启用自动括号匹配（Highlight Matching Parenthesis），随后会介绍插件来增<br>强这个匹配的功能。你可以在<a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Hooks.html" target="_blank" rel="external">这里</a>读到关于钩子的更多信息。</p>
<pre><code>(add-hook &apos;emacs-lisp-mode-hook &apos;show-paren-mode)
</code></pre><p>高亮当前行，当文本内容很多时可以很容易找到光标的位置。</p>
<pre><code>(global-hl-line-mode 1)
</code></pre><p><strong>安装主题</strong></p>
<pre><code>(add-to-list &apos;my/packages &apos;monokai-theme)
</code></pre><p>然后使用下面的配置使其每次打开编辑器时加载主题，</p>
<pre><code>(load-theme &apos;monokai 1)
</code></pre><p><strong>推荐插件</strong></p>
<ul>
<li><a href="http://company-mode.github.io/" target="_blank" rel="external">company</a></li>
<li><a href="https://github.com/nflath/hungry-delete" target="_blank" rel="external">hungry-delete</a></li>
<li><a href="https://github.com/nonsequitur/smex" target="_blank" rel="external">Smex</a> (如果你使用 Counsel 来增强你的 <code>M-x</code> ，那么就不需要再安装 Smex 了)</li>
<li><a href="https://github.com/abo-abo/swiper" target="_blank" rel="external">Swiper &amp; Counsel</a></li>
<li><a href="https://github.com/Fuco1/smartparens" target="_blank" rel="external">smartparens</a></li>
</ul>
<p>使用 <code>M-x customize-group</code> 后选择对应的插件名称，可以进入可视化选项区对指定的插<br>件做自定义设置。当选择 Save for future session 后，刚刚做的设计就会被保存在你的<br>配置文件（ <code>init.el</code> ）中。关于各个插件的安装与使用方法通常都可以在其官方页面找<br>到（GitHub Pages 或者是项目仓库中的 README 文件）。我们强烈建议大家在安装这些插<br>件后阅读使用方法来更好的将它们使用到你的日常工作当中使效率最大化。</p>
<p><a id="org6fcd5d1"></a></p>
<h2 id="JavaScript-IDE"><a href="#JavaScript-IDE" class="headerlink" title="JavaScript IDE"></a>JavaScript IDE</h2><p>Emacs 提供的默认 JavaScript Major Mode 并不是非常好用。所以我们可以将默认的模式<br>替换成 <a href="https://github.com/mooz/js2-mode" target="_blank" rel="external">js2-mode</a> 一个比默认模式好用的 Major Mode。我们可以通过 MELPA 来下载它，然<br>后用下面的代码将其启用。</p>
<pre><code>(setq auto-mode-alist
      (append
       &apos;((&quot;\\.js\\&apos;&quot; . js2-mode))
       auto-mode-alist))
</code></pre><p>你可以在<a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Auto-Major-Mode.html" target="_blank" rel="external">这里</a>（How Emacs Chooses a Major Mode）找到 Emacs 是如何选择何时该选用何<br>种 Major Mode 的方法。</p>
<p>在这里我们需要知道 <code>auto-mode-alist</code> 的作用，这个变量是一个 <a href="https://www.emacswiki.org/emacs/AssociationList" target="_blank" rel="external">AssociationList</a>，它<br>使用正则表达式（REGEXP）的规则来匹配不同类型文件应使用的 Major Mode。 下面是几个<br>正则表达式匹配的例子，</p>
<pre><code>((&quot;\\`/tmp/fol/&quot; . text-mode)
 (&quot;\\.texinfo\\&apos;&quot; . texinfo-mode)
 (&quot;\\.texi\\&apos;&quot; . texinfo-mode)
 (&quot;\\.el\\&apos;&quot; . emacs-lisp-mode)
 (&quot;\\.c\\&apos;&quot; . c-mode)
 (&quot;\\.h\\&apos;&quot; . c-mode)
 …)
</code></pre><p>下面是如何添加新的模式与对应文件类型的例子（与我们配置 <code>js2-mode</code> 时相似的例子），</p>
<pre><code>(setq auto-mode-alist
  (append
   ;; File name (within directory) starts with a dot.
   &apos;((&quot;/\\.[^/]*\\&apos;&quot; . fundamental-mode)
     ;; File name has no dot.
     (&quot;/[^\\./]*\\&apos;&quot; . fundamental-mode)
     ;; File name ends in ‘.C’.
     (&quot;\\.C\\&apos;&quot; . c++-mode))
   auto-mode-alist))
</code></pre><p>在 <code>js2-mode</code> 模式中会提供</p>
<ul>
<li>语法高亮</li>
<li>语法检查器（Linter）</li>
</ul>
<p>执行缓冲区的代码可以使用 <code>nodejs-repl</code> 插件，它需要你的机器上已经安装了 NodeJS。<br>然而在 Mac OS X 上可能会出现找不到 NodeJS 可执行文件的问题，要解决这个问题你需要<br>安装另外一个 <code>exec-path-from-shell</code> 的插件并将其启用。</p>
<pre><code>(when (memq window-system &apos;(mac ns))
  (exec-path-from-shell-initialize))
</code></pre><p>有了 <code>nodejs-repl</code> 我们就可以方便的测试和开发我们的 JavaScript 代码了（你可以在<br><a href="https://github.com/mooz/js2-mode" target="_blank" rel="external">这里</a>找到更多关于它的使用方法）。</p>
<p><a id="org8f375d6"></a></p>
<h3 id="Org-mode-进阶"><a href="#Org-mode-进阶" class="headerlink" title="Org-mode 进阶"></a>Org-mode 进阶</h3><p>在 Org-mode 中你可以直接开启新的缓冲区（Buffer）直接用相应的 Major Mode 来编辑代<br>码块内的内容。在代码块中使用 <code>C-c &#39;</code> 会直接打开对应模式的缓冲区（不仅限于 Lisp）。<br>这样就使在 Org-mode 中编辑代码变的十分方便快捷。</p>
<p>使用 <code>&lt;s</code> 然后 Tab 可以直接插入代码块的代码片段（Snippet），更多类似的代码片段<br>（Org-mode Easy Templates）可以在<a href="http://orgmode.org/manual/Easy-Templates.html" target="_blank" rel="external">这里</a>找到。</p>
<pre><code>#+BEGIN_SRC emacs-lisp
  ;; Your code goes here
  ;; 你的代码写在这里
#+END_SRC
</code></pre><p><strong>添加 Org-mode 文本内语法高亮</strong></p>
<pre><code>(require &apos;org)
(setq org-src-fontify-natively t)
</code></pre><p>在 Org-mode 中重置有序列表序号可以直接使用 M-<ret> 。</ret></p>
<p><strong>Agenda 的使用</strong></p>
<pre><code>;; 设置默认 Org Agenda 文件目录
(setq org-agenda-files &apos;(&quot;~/org&quot;))

;; 设置 org-agenda 打开快捷键
(global-set-key (kbd &quot;C-c a&quot;) &apos;org-agenda)
</code></pre><p>你只需将你的 <code>*.org</code> 文件放入上面所指定的文件夹中就可以开始使用 Agenda<br>模式了。</p>
<ul>
<li><code>C-c C-s</code> 选择想要开始的时间</li>
<li><code>C-c C-d</code> 选择想要结束的时间</li>
<li><code>C-c a</code> 可以打开 Agenda 模式菜单并选择不同的可视方式（ <code>r</code> ）</li>
</ul>
<p><a id="org50998e0"></a></p>
<h1 id="第三天：配置文件模块化（上）"><a href="#第三天：配置文件模块化（上）" class="headerlink" title="第三天：配置文件模块化（上）"></a>第三天：配置文件模块化（上）</h1><p>视频地址如下</p>
<ul>
<li><a href="http://v.youku.com/v_show/id_XMTUyNzA0MTMxNg%3D%3D.html?f%3D26962151&amp;o%3D1" target="_blank" rel="external">优酷视频</a></li>
<li><a href="http://pan.baidu.com/s/1nuJWyLF" target="_blank" rel="external">百度网盘</a></li>
<li><a href="https://youtu.be/hL9B2AtcB1w" target="_blank" rel="external">YouTube</a></li>
</ul>
<p><a id="org1d08f8f"></a></p>
<h2 id="多文件存储配置文件-上"><a href="#多文件存储配置文件-上" class="headerlink" title="多文件存储配置文件(上)"></a>多文件存储配置文件(上)</h2><p>将不同的配置代码放置到不同的文件中，使其模块化，这让我们的后续维护变得更加简单。<br>下面是我们现在的 <code>~/.emacs.d/</code> 目录中的样子，</p>
<pre><code>├── auto-save-list # 自动生成的保存数据
├── elpa           # 下载的插件目录
├── init.el        # 我们的配置文件
└── recentf        # 最近访问的文件列表
</code></pre><p>通常我们只保存配置文件和对其进行版本控制，其他的插件均为在第一次使用编辑器时再通<br>过网络重新下载，当然你也可以选择将全部配置文件进行版本控制来保证自己时刻拥有最稳<br>定的生产环境。</p>
<p>Elisp 中并没有命名空间（Namespace），换句话说就是所有的变量均为全局变量，所以其<br>命名方法就变的非常重要。下面是一个简单的命名规则，</p>
<pre><code>#自定义变量可以使用自己的名字作为命名方式（可以是变量名或者函数名）
my/XXXX

#模式命名规则
ModeName-mode

#模式内的变量则可以使用
ModeName-VariableName
</code></pre><p>遵守上面的命名规则可以最大程度的减少命名冲突发生的可能性。</p>
<p>现在我们想将原本混合在一起的配置文件分为下面的几个模块（每一个模块为一个独立的配<br>置文件并将其保存在指定的子目录中），它们分别是</p>
<pre><code>init-packages.el        # 插件管理
init-ui.el              # 视觉层配置
init-better-defaults.el # 增强内置功能
init-keybindings.el     # 快捷键绑定
init-org.el             # Org 模式相关的全部设定
custome.el              # 存放使用编辑器接口产生的配置信息
</code></pre><p>下面为将配置文件进行模块化后的目录结构，</p>
<pre><code>├── init.el
└── lisp
    ├── custom.el
    ├── init-better-defaults.el
    ├── init-helper.el
    ├── init-keybindings.el
    ├── init-packages.el
    ├── init-ui.el
    └── init-org.el
</code></pre><p>使用模块化配置就可以让我们在之后的配置中迅速的定位与更改配置内容，让整个过程变得<br>更有条理也更加高效。</p>
<p>和之前一样 <code>init.el</code> 是配置文件的入口，现在它便成为了所有模块配置文件的入口，所<br>以要使用这些模块时，我们需要在其中引用需要加载的模块。下面以 <code>init-packages.el</code><br>（此配置为添加插件的模块） 为例，详细说明如何模块化以及应用的方法。</p>
<p>下面是在模块化配置之前，我们所使用的配置文件 <code>~/.emacs.d/init.el</code> 的样子，我们将<br>所有的配置代码都放置在了同一个文件中（如下所示）</p>
<p>下面为 <code>~/.emacs.d/init.el</code> 文件的内容</p>
<pre><code>;;  __        __             __   ___
;; |__)  /\  /  ` |__/  /\  / _` |__
;; |    /~~\ \__, |  \ /~~\ \__&gt; |___
;;                      __   ___        ___      ___
;; |\/|  /\  |\ |  /\  / _` |__   |\/| |__  |\ |  |
;; |  | /~~\ | \| /~~\ \__&gt; |___  |  | |___ | \|  |
(when (&gt;= emacs-major-version 24)
    (require &apos;package)
    (package-initialize)
    (setq package-archives &apos;((&quot;gnu&quot;   . &quot;http://elpa.emacs-china.org/gnu/&quot;)
                         (&quot;melpa&quot; . &quot;http://elpa.emacs-china.org/melpa/&quot;))))

;; cl - Common Lisp Extension
(require &apos;cl)

;; Add Packages
(defvar my/packages &apos;(
               ;; --- Auto-completion ---
               company
               ;; --- Better Editor ---
               smooth-scrolling
               hungry-delete
               swiper
               counsel
               smartparens
               ;; --- Major Mode ---
               js2-mode
               markdown-mode
               ;; --- Minor Mode ---
               ;; Quick Note Taking
               deft
               ;; JavaScript REPL
               nodejs-repl
               ;; Find OS X Executable Helper Package
;; ...
</code></pre><p>之前为了更好的区分不同的区域我使用的方法是使用 ASCII Art 然后再以关键字来做搜索<br>跳转，但是这样再编辑工程中依旧十分缓慢和麻烦。于是我们现在要将配置文件全部模块化，<br>把不同部分的配置代码放置在不同的配置文件中，并在入口文件（ <code>~/.emacs.d/init.el</code><br>）中依次引用不用的模块。</p>
<p>下面为 <code>~/.emacs.d/lisp/init-packages.el</code> 模块中的代码</p>
<pre><code>;;  __        __             __   ___
;; |__)  /\  /  ` |__/  /\  / _` |__
;; |    /~~\ \__, |  \ /~~\ \__&gt; |___
;;                      __   ___        ___      ___
;; |\/|  /\  |\ |  /\  / _` |__   |\/| |__  |\ |  |
;; |  | /~~\ | \| /~~\ \__&gt; |___  |  | |___ | \|  |
(when (&gt;= emacs-major-version 24)
    (require &apos;package)
    (package-initialize)
    (setq package-archives &apos;((&quot;gnu&quot;   . &quot;http://elpa.emacs-china.org/gnu/&quot;)
                         (&quot;melpa&quot; . &quot;http://elpa.emacs-china.org/melpa/&quot;))))

;; cl - Common Lisp Extension
(require &apos;cl)

;; Add Packages
(defvar my/packages &apos;(
               ;; --- Auto-completion ---
               company
               ;; --- Better Editor ---
               smooth-scrolling
               hungry-delete
               swiper
               counsel
               smartparens
               popwin
               ;; --- Major Mode ---
               js2-mode
               markdown-mode

;; ...

;; 文件末尾
(provide &apos;init-packages)
</code></pre><p>下面为 <code>~/.emacs.d/init.el</code> 入口文件中的代码</p>
<pre><code>(package-initialize)

(add-to-list &apos;load-path &quot;~/.emacs.d/lisp/&quot;)

;; Package Management
;; -----------------------------------------------------------------
(require &apos;init-packages)
</code></pre><p>模块化要做的其实非常简单，我们要做的其实就是把某一个更改编辑器某定部分（例如，插<br>件管理，显示层，快捷键绑定等）的配置代码写入一个独立的文件中并在末尾为其添加<br><code>(provide &#39;modul-name)</code> (这里我们的模块名为 <code>init-packages</code> )使其可以在入口文件<br>中被调用，然后再在入口文件中将其引用既可。</p>
<p>这里需要注意的是，我们需要在入口文件中添加 <code>(add-to-list &#39;load-path
&quot;~/.emacs.d/lisp/&quot;)</code> 这可以让 Emacs 找到需要加载的模块所处的位置。</p>
<p>更多模块化的配置文件可以在<a href="https://github.com/zilongshanren/Learning-Emacs/tree/day3" target="_blank" rel="external">这里</a>找到。</p>
<p><a id="org9b503cc"></a></p>
<h2 id="Major-与-Minor-Mode-详解"><a href="#Major-与-Minor-Mode-详解" class="headerlink" title="Major 与 Minor Mode 详解"></a>Major 与 Minor Mode 详解</h2><p>在这一节我们将详细介绍 Major Mode 与 Minor Mode 去区别。每一个文件类型都对应一个<br>Major Mode，它提供语法高亮以及缩进等基本的编辑支持功能，然后而 Minor Mode 则提供<br>其余的增强性的功能（例如 <code>linum-mode</code> ）。</p>
<p>在 Emacs 中，Major Mode 又分为三种，</p>
<ul>
<li><code>text-mode</code> ，用于编辑文本文件</li>
<li><code>special-mode</code> ，特殊模式（很少见）</li>
<li><code>prog-mode</code> ，所有的编程语言的父模式</li>
</ul>
<p>在每一个模式（mode）中它的名称与各个变量还有函数都是有特定的命名规则，比如所有的<br>模式都被命名为 <code>ModeName-mode</code> ，里面所设置的快捷键则为 <code>ModeName-mode-key-map</code><br>，而所有的钩子则会被命名为 <code>ModeName-mode-hook</code> 。</p>
<p>注明：为了保持阅读的完整性，部分第三天的关于默认编辑器优化的内容被移至第四天。</p>
<p><a id="org9d0053b"></a></p>
<h1 id="第四天：配置文件模块化（下）以及使用优化"><a href="#第四天：配置文件模块化（下）以及使用优化" class="headerlink" title="第四天：配置文件模块化（下）以及使用优化"></a>第四天：配置文件模块化（下）以及使用优化</h1><p>视频地址如下</p>
<ul>
<li><a href="http://v.youku.com/v_show/id_XMTUzMDAwMDYwMA%3D%3D.html" target="_blank" rel="external">优酷视频</a></li>
<li><a href="http://pan.baidu.com/s/1o8QWrHK" target="_blank" rel="external">百度网盘</a></li>
<li><a href="https://youtu.be/IhCOO0R83G8" target="_blank" rel="external">YouTube</a></li>
</ul>
<p><a id="orgfdc7949"></a></p>
<h2 id="配置文件模块化（下）"><a href="#配置文件模块化（下）" class="headerlink" title="配置文件模块化（下）"></a>配置文件模块化（下）</h2><p>在这一部分我们首先需要知道的是什么是 <code>features</code> 。在 Emacs 中每一个 <code>feature</code> 都<br>是一个 Elisp 符号，用于代表一个 Lisp 插件（Package）。</p>
<p>当一个插件调用 <code>(provide &#39;symbol_name)</code> 函数时，Emacs 就会将这个符号加入到<br><code>features</code> 的列表中去。你可以在<a href="http://ergoemacs.org/emacs/elisp_feature_name.html" target="_blank" rel="external">这里</a>读到更多关于 feature 的内容。</p>
<p>接着我们需要弄明白的是 <code>load-file</code> , <code>load</code> , <code>require</code> , <code>autoload</code> 之间的区别。<br>（他们之间区别的链接已经再前面贴过了，你也可以在<a href="http://ergoemacs.org/emacs/elisp_library_system.html" target="_blank" rel="external">这里</a>找到之前同样的链接）</p>
<p>简单来说， <code>load-file</code> 用于打开某一个指定的文件，用于当你不想让 Emacs 来去决定加<br>载某个配置文件时（ <code>.el</code> 或者 <code>.elc</code> 文件）。</p>
<p><code>load</code> 搜索 <code>load-path</code> 中的路径并打开第一个所找到的匹配文件名的文件。此方法用于<br>你预先不知道文件路径的时候。</p>
<p><code>require</code> 加载还未被加载的插件。首先它会查看变量 <code>features</code> 中是否存在所要加载的<br>符号如果不存在则使用上面提到的 <code>load</code> 将其载入。（有点类似于其他编程语言中的<br><code>import</code> ）</p>
<p><code>autoload</code> 用于仅在函数调用时加载文件，使用此方法可以大大节省编辑器的启动时间。</p>
<p><a id="orgd68fa7c"></a></p>
<h2 id="更好的默认设置"><a href="#更好的默认设置" class="headerlink" title="更好的默认设置"></a>更好的默认设置</h2><p>在这一节我们会配置我们的编辑器使其有更好的使用体验。整个过程就如同搭积木一般，将<br>更好的体验建立在已有的功能基础之上。这样的优化使整个过程变得更高效，也更有趣。</p>
<p>下面的代码可以是 Emacs 自动加载外部修改过的文件。</p>
<pre><code>(global-auto-revert-mode 1)
</code></pre><p>使用下面的代码可以关闭自己生产的保存文件（之前我们已经关闭过了 Emacs 自动生产的<br>备份文件了，现在是关闭自动保存文件）。</p>
<pre><code>(setq auto-save-default nil)
</code></pre><p>如果你发现你在使用中发现了那些编辑行为与你预期的不相符时，你可以通过搜索引擎去寻<br>找解决方案然后将其加入你的配置中并打造一个真正属于你的神器！</p>
<p><code>popwin</code> 插件可以自动将光标移动到，新创建的窗口中。使用下面的代码将其启用，</p>
<pre><code>(require &apos;popwin)
(popwin-mode 1)
</code></pre><p>也许你并不喜欢听到错误时的“哔哔”的警告提示音，使用下面的代码你可以关闭 Emacs 中的警告音，</p>
<pre><code>(setq ring-bell-function &apos;ignore)
</code></pre><p>每一次当 Emacs 需要与你确认某个命令时需要输入 <code>(yes or no)</code> 比较麻烦，所有我们可<br>以使用下面的代码，设置一个别名将其简化为只输入 <code>(y or n)</code> 。</p>
<pre><code>(fset &apos;yes-or-no-p &apos;y-or-n-p)
</code></pre><p><a id="org196a7c0"></a></p>
<h3 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h3><p><code>indent-region</code> 可以帮我们重新缩进所选区域的代码，但是每一次都选中十分麻烦。使用<br>下面的代码可以一次重新缩进全部缓冲区的代码。（之后也会介绍更好用的，代码格式美化<br>的插件）</p>
<pre><code>(defun indent-buffer()
  (interactive)
  (indent-region (point-min) (point-max)))

(defun indent-region-or-buffer()
  (interactive)
  (save-excursion
    (if (region-active-p)
        (progn
          (indent-region (region-beginning) (region-end))
          (message &quot;Indent selected region.&quot;))
      (progn
        (indent-buffer)
        (message &quot;Indent buffer.&quot;)))))
</code></pre><p>然后再将其用下面的代码将其绑定为快捷键，第一个 <code>\</code> 用于将紧跟的 <code>\</code> 进行逃脱（escape）。</p>
<pre><code>(global-set-key (kbd &quot;C-M-\\&quot;) &apos;indent-region-or-buffer)
</code></pre><p><a id="org869832b"></a></p>
<h3 id="缩写补全"><a href="#缩写补全" class="headerlink" title="缩写补全"></a>缩写补全</h3><p>使用下面的代码我们可以开启 <code>abbrev</code> 模式并定义一个缩写表，每当我们输入下面的缩写<br>并以空格结束时，Emacs 就会将其自动展开成为我们所需要的字符串。</p>
<pre><code>(setq-default abbrev-mode t)
(define-abbrev-table &apos;global-abbrev-table &apos;(
                                            ;; Shifu
                                            (&quot;8zl&quot; &quot;zilongshanren&quot;)
                                            ;; Tudi
                                            (&quot;8lxy&quot; &quot;lixinyang&quot;)
                                           ))
</code></pre><p>上面的缩写前使用的 <code>8</code> 也类似于命名空间的作用，使其不会与我们所常用的字符串冲突。</p>
<p><a id="org06e0376"></a></p>
<h3 id="Hippie-补全"><a href="#Hippie-补全" class="headerlink" title="Hippie 补全"></a>Hippie 补全</h3><p>Company 有时候补全功能并不是非常理想，这时就可以使用 Hippie Expand 来完成补全。<br>Company Mode 补全效果不理想的原因是在不同的区域中会使用不同的后端函数来完成补全，<br>但是当后端补全函数不能被激活时，则补全就不会被激活。</p>
<p>我们可以将下面的代码加入到我们的配置文件中，来增强 Hippie Expand 的功能，</p>
<pre><code>(setq hippie-expand-try-function-list &apos;(try-expand-debbrev
                                        try-expand-debbrev-all-buffers
                                        try-expand-debbrev-from-kill
                                        try-complete-file-name-partially
                                        try-complete-file-name
                                        try-expand-all-abbrevs
                                        try-expand-list
                                        try-expand-line
                                        try-complete-lisp-symbol-partially
                                        try-complete-lisp-symbol))
</code></pre><p>然后将其绑定为快捷键，使我们可以更方便的使用它。</p>
<pre><code>(global-set-key (kbd &quot;s-/&quot;) &apos;hippie-expand)
</code></pre><p><a id="orgeaf2737"></a></p>
<h2 id="Dired-Mode"><a href="#Dired-Mode" class="headerlink" title="Dired Mode"></a>Dired Mode</h2><p>Dired Mode 是一个强大的模式它能让我们完成和文件管理相关的所有操作。</p>
<p>使用 <code>C-x d</code> 就可以进入 Dired Mode，这个模式类似于图形界面系统中的资源管理器。你<br>可以在其中查看文件和目录的详细信息，对他们进行各种操作，甚至复制粘贴缓冲区中的内<br>容。下面是一些常用的操作（下面的所有键均需在 Dired Mode 下使用），</p>
<ul>
<li><code>+</code> 创建目录</li>
<li><code>g</code> 刷新目录</li>
<li><code>C</code> 拷贝</li>
<li><code>D</code> 删除</li>
<li><code>R</code> 重命名</li>
<li><code>d</code> 标记删除</li>
<li><code>u</code> 取消标记</li>
<li><code>x</code> 执行所有的标记</li>
</ul>
<p>这里有几点可以优化的地方。第一是删除目录的时候 Emacs 会询问是否递归删除或拷贝，<br>这也有些麻烦我们可以用下面的配置将其设定为默认递归删除目录（出于安全原因的考虑，<br>也许你需要保持此行为。所有文中的配置请务必按需配置）。</p>
<pre><code>(setq dired-recursive-deletes &apos;always)
(setq dired-recursive-copies &apos;always)
</code></pre><p>第二是，每一次你进入一个回车进入一个新的目录中是，一个新的缓冲区就会被建立。这使<br>得我们的缓冲区列表中充满了大量没有实际意义的记录。我们可以使用下面的代码，让<br>Emacs 重用唯一的一个缓冲区作为 Dired Mode 显示专用缓冲区。</p>
<pre><code>(put &apos;dired-find-alternate-file &apos;disabled nil)

;; 主动加载 Dired Mode
;; (require &apos;dired)
;; (defined-key dired-mode-map (kbd &quot;RET&quot;) &apos;dired-find-alternate-file)

;; 延迟加载
(with-eval-after-load &apos;dired
    (define-key dired-mode-map (kbd &quot;RET&quot;) &apos;dired-find-alternate-file))
</code></pre><p>使用延迟加载可以使编辑器加载速度有所提升。</p>
<p>启用 <code>dired-x</code> 可以让每一次进入 Dired 模式时，使用新的快捷键 <code>C-x C-j</code> 就可以进<br>入当前文件夹的所在的路径。</p>
<pre><code>(require &apos;dired-x)
</code></pre><p>使用 <code>(setq dired-dwin-target 1)</code> 则可以使当一个窗口（frame）中存在两个分屏<br>（window）时，将另一个分屏自动设置成拷贝地址的目标。</p>
<p>最后如果你是 Mac OS X 的用户，可以安装 <code>reveal-in-osx-finder</code> 这个插件（你可以在<br><a href="https://melpa.org/#/reveal-in-osx-finder" target="_blank" rel="external">这里</a>找到它），它可以将任意文件直接在 Finder 中打开。你想安装这个插件，将其添加至<br>第二天的插件列表中即可，下次启动 Emacs 时，它就会自动帮你完成下载。</p>
<p><a id="orgc24092e"></a></p>
<h2 id="Org-mode-管理-Emacs-配置"><a href="#Org-mode-管理-Emacs-配置" class="headerlink" title="Org-mode 管理 Emacs 配置"></a>Org-mode 管理 Emacs 配置</h2><p>Org-mode 下的文学编程将颠覆你对于 Emacs 的看法。因为我们也可以使用 Org 来管理<br>Emacs 的配置文件（笔者和他的师傅其实更倾向于模块管理配置文件）。</p>
<p>你需要将下面的代码放入配置入口文件（ <code>init.el</code> ）中，</p>
<pre><code>(package-initialize)

(require &apos;org-install)
(require &apos;ob-tangle)
(org-babel-load-file (expand-file-name &quot;org-file-name.org&quot; user-emacs-directory))
</code></pre><p>之后我们需要做的仅仅只是将所有的配置文件放入 Org 模式中的代码块即可，并使用目录<br>结构来表述你的配置文件再把它保存在与入口文件相同的目录中即可（文件名为<br><code>org-file-name.org</code> ）。Emacs 会提取其中的配置并使其生效。这样做的好处是可以使自<br>己和他人更直观的，理解你的配置文件或者代码。</p>
<p><a id="orgc5c41fd"></a></p>
<h1 id="第五天：打造前端开发神器"><a href="#第五天：打造前端开发神器" class="headerlink" title="第五天：打造前端开发神器"></a>第五天：打造前端开发神器</h1><p>视频地址如下</p>
<ul>
<li><a href="http://pan.baidu.com/s/1slOOWSd" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTU0NjMyNDg5Ng%3D%3D.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/Tjh5cKAw1Ks" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>照例我们先修复一些现在存在的小问题。首先是自动配对的小问题，在 Emacs Lisp 中我们<br>有时候只需要一个 <code>&#39;</code> 但是 Emacs 很好心的帮我们做了补全，但这并不是我们需要的。我<br>们可以通过下面的代码来让使 Emacs Lisp 在 Emacs 中的编辑变得更方便（可以将其添加<br>至 <code>init-default.el</code> 配置文件中）。</p>
<pre><code>(sp-local-pair &apos;emacs-lisp-mode &quot;&apos;&quot; nil :actions nil)
(sp-local-pair &apos;lisp-interaction-mode &quot;&apos;&quot; nil :actions nil)

;; 也可以把上面两句合起来
(sp-local-pair &apos;(emacs-lisp-mode lisp-interaction-mode) &quot;&apos;&quot; nil :actions nil)
</code></pre><p>在添加配置代码后重启 Emacs 使其生效。当然这个方法你也可以运用在其他的各个 Major<br>Mode 中，如果你不想 Emacs 对某些符号进行类似的自动匹配补全。</p>
<p><code>show-paren-mode</code> 可以使鼠标在括号上是高亮其所匹配的另一半括号，然而我们想要光标<br>在括号内时就高亮包含内容的两个括号，使用下面的代码就可以做到这一点。</p>
<pre><code>(define-advice show-paren-function (:around (fn) fix-show-paren-function)
  &quot;Highlight enclosing parens.&quot;
  (cond ((looking-at-p &quot;\\s(&quot;) (funcall fn))
        (t (save-excursion
             (ignore-errors (backward-up-list))
             (funcall fn)))))
</code></pre><p>Lisp 的宏（Macro）类似于 C++ 中的模板，并可以生产新的代码（你可以在<a href="http://stackoverflow.com/questions/267862/what-makes-lisp-macros-so-special" target="_blank" rel="external">这里</a>找到更多<br>关于宏的讨论）。使用它，我们可以增强某个函数的功能而不去更改这个函数的代码。</p>
<p>还有一个小问题就是解决在不同系统中的换行符，例如在 DOS 系统下的 <code>\r(^M)</code> 换行符，<br>这让我们有时候在 Unix 系统中很是头疼，因为它的存在会使版本控制误以为整行的代码都<br>被修改过而造成不必要的麻烦。（你可以在<a href="http://unix.stackexchange.com/questions/32001/what-is-m-and-how-do-i-get-rid-of-it" target="_blank" rel="external">这里</a>找到更多关于 <code>\r(^M)</code> 的信息）</p>
<p>我们用两种方式来处理这个问题，隐藏这个换行符或者将其删除。首先下面是隐藏的方法，</p>
<pre><code>(defun hidden-dos-eol ()
  &quot;Do not show ^M in files containing mixed UNIX and DOS line endings.&quot;
  (interactive)
  (unless buffer-display-table
    (setq buffer-display-table (make-display-table)))
  (aset buffer-display-table ?\^M []))
</code></pre><p>使用下面的代码则可以定义函数将此换行符删除，</p>
<pre><code>(defun remove-dos-eol ()
  &quot;Replace DOS eolns CR LF with Unix eolns CR&quot;
  (interactive)
  (goto-char (point-min))
  (while (search-forward &quot;\r&quot; nil t) (replace-match &quot;&quot;)))
</code></pre><p><a id="orgcccff8e"></a></p>
<h2 id="web-mode"><a href="#web-mode" class="headerlink" title="web-mode"></a>web-mode</h2><p>Emacs 自带的 HTML Mode 使用起来并不是那么的方便，而 web-mode 则是一个非常常用也<br>很强大的用于编辑前端代码的 Major Mode（你可以在<a href="https://github.com/fxbois/web-mode" target="_blank" rel="external">这里</a>找到更多关于它的信息）。</p>
<p>首先我们需要安装它，照例我们需要将其添加至我们的插件列表中去。</p>
<pre><code>(defvar xinyang/packages &apos;(
                           ;; 你其他的插件在这里
                           web-mode
                           ) &quot;Default packages&quot;)
</code></pre><p>在安装完成后我们就可以开始配置它了，首先我们需要做的是将所有的 <code>*.html</code> 文件都使<br>用 web-mode 来打开。</p>
<pre><code>(setq auto-mode-alist
      (append
       &apos;((&quot;\\.js\\&apos;&quot; . js2-mode))
       &apos;((&quot;\\.html\\&apos;&quot; . web-mode))
       auto-mode-alist))
</code></pre><p>这样所有的 HTML 代码在 Emacs 中就会之间启用 web-mode 而非默认的 HTML Mode 了。你<br>可以阅读它的<a href="http://web-mode.org/" target="_blank" rel="external">文档</a>来学习更多 web-mode 详细的使用方法。</p>
<p>例如使用 <code>M-;</code> 就可以注释当前行代码或选中行的代码。</p>
<p>接下来我们来做更多细节的配置，首先是缩减的大小的设置。因为 web-mode 支持在 HTML<br>文件中存在多语言，所以我们可以对不同的语言的缩减做出设置。下面的代码用于设置初始<br>的代码缩进，</p>
<pre><code>(defun my-web-mode-indent-setup ()
  (setq web-mode-markup-indent-offset 2) ; web-mode, html tag in html file
  (setq web-mode-css-indent-offset 2)    ; web-mode, css in html file
  (setq web-mode-code-indent-offset 2)   ; web-mode, js code in html file
  )
(add-hook &apos;web-mode-hook &apos;my-web-mode-indent-setup)
</code></pre><p>下面的函数可以用于在两个空格和四个空格之间进行切换，</p>
<pre><code>(defun my-toggle-web-indent ()
  (interactive)
  ;; web development
  (if (or (eq major-mode &apos;js-mode) (eq major-mode &apos;js2-mode))
      (progn
        (setq js-indent-level (if (= js-indent-level 2) 4 2))
        (setq js2-basic-offset (if (= js2-basic-offset 2) 4 2))))

  (if (eq major-mode &apos;web-mode)
      (progn (setq web-mode-markup-indent-offset (if (= web-mode-markup-indent-offset 2) 4 2))
             (setq web-mode-css-indent-offset (if (= web-mode-css-indent-offset 2) 4 2))
             (setq web-mode-code-indent-offset (if (= web-mode-code-indent-offset 2) 4 2))))
  (if (eq major-mode &apos;css-mode)
      (setq css-indent-offset (if (= css-indent-offset 2) 4 2)))

  (setq indent-tabs-mode nil))

(global-set-key (kbd &quot;C-c t i&quot;) &apos;my-toggle-web-indent)
</code></pre><p><a id="orga582e4b"></a></p>
<h2 id="js2-refactor"><a href="#js2-refactor" class="headerlink" title="js2-refactor"></a>js2-refactor</h2><p>js2-refactor 是一个用于重构 JavaScript 的插件，它是一个 Minor Mode，你可以在<br><a href="https://github.com/magnars/js2-refactor.el" target="_blank" rel="external">GitHub</a> 找到更多关于这个插件的信息。</p>
<p>我们使用刚刚所提到的方法来安装 js2-refactor 插件。</p>
<p>在安装完成后，添加一个钩子（Hook）：</p>
<pre><code>(add-hook &apos;js2-mode-hook #&apos;js2-refactor-mode)
(js2r-add-keybindings-with-prefix &quot;C-c C-m&quot;)
</code></pre><p>我们可以使用 <code>C-c C-m</code> 然后输入功能前缀，例如 <code>em</code> 是 extract-method 的前缀。更<br>多的功能和使用方法也可以在上面给出的链接中找到，所有的前缀也可以在<a href="https://github.com/magnars/js2-refactor.el#refactorings" target="_blank" rel="external">这里</a>找到。</p>
<p><a id="org059d427"></a></p>
<h2 id="优化-occur-与-imenu"><a href="#优化-occur-与-imenu" class="headerlink" title="优化 occur 与 imenu"></a>优化 occur 与 imenu</h2><p>下面的代码用于配置 Occur Mode 使其默认搜索当前被选中的或者在光标下的字符串：</p>
<pre><code>(defun occur-dwim ()
  &quot;Call `occur&apos; with a sane default.&quot;
  (interactive)
  (push (if (region-active-p)
            (buffer-substring-no-properties
             (region-beginning)
             (region-end))
          (let ((sym (thing-at-point &apos;symbol)))
            (when (stringp sym)
              (regexp-quote sym))))
        regexp-history)
  (call-interactively &apos;occur))
(global-set-key (kbd &quot;M-s o&quot;) &apos;occur-dwim)
</code></pre><p><code>dwim</code> 是按我说的做的缩写（Do what I mean）。</p>
<p>Occur 可以用于显示变量或函数的定义，我们可以通过 popwin 的 customize-group 将定<br>义显示设置为右边而不是默认的底部（ <code>customize-group &gt; popwin &gt; Popup Window
Position</code> 设置为 right），也可以在这里对其宽度进行调节。</p>
<p>Occur 与普通的搜索模式不同的是，它可以使用 Occur-Edit Mode (在弹出的窗口中按 <code>e</code><br>进入编辑模式) 对搜索到的结果进行之间的编辑。</p>
<p>imenu 可以显示当前所有缓冲区的列表，下面的配置可以让其拥有更精确的跳转，</p>
<pre><code>(defun js2-imenu-make-index ()
      (interactive)
      (save-excursion
        ;; (setq imenu-generic-expression &apos;((nil &quot;describe\\(\&quot;\\(.+\\)\&quot;&quot; 1)))
        (imenu--generic-function &apos;((&quot;describe&quot; &quot;\\s-*describe\\s-*(\\s-*[\&quot;&apos;]\\(.+\\)[\&quot;&apos;]\\s-*,.*&quot; 1)
                                   (&quot;it&quot; &quot;\\s-*it\\s-*(\\s-*[\&quot;&apos;]\\(.+\\)[\&quot;&apos;]\\s-*,.*&quot; 1)
                                   (&quot;test&quot; &quot;\\s-*test\\s-*(\\s-*[\&quot;&apos;]\\(.+\\)[\&quot;&apos;]\\s-*,.*&quot; 1)
                                   (&quot;before&quot; &quot;\\s-*before\\s-*(\\s-*[\&quot;&apos;]\\(.+\\)[\&quot;&apos;]\\s-*,.*&quot; 1)
                                   (&quot;after&quot; &quot;\\s-*after\\s-*(\\s-*[\&quot;&apos;]\\(.+\\)[\&quot;&apos;]\\s-*,.*&quot; 1)
                                   (&quot;Function&quot; &quot;function[ \t]+\\([a-zA-Z0-9_$.]+\\)[ \t]*(&quot; 1)
                                   (&quot;Function&quot; &quot;^[ \t]*\\([a-zA-Z0-9_$.]+\\)[ \t]*=[ \t]*function[ \t]*(&quot; 1)
                                   (&quot;Function&quot; &quot;^var[ \t]*\\([a-zA-Z0-9_$.]+\\)[ \t]*=[ \t]*function[ \t]*(&quot; 1)
                                   (&quot;Function&quot; &quot;^[ \t]*\\([a-zA-Z0-9_$.]+\\)[ \t]*()[ \t]*{&quot; 1)
                                   (&quot;Function&quot; &quot;^[ \t]*\\([a-zA-Z0-9_$.]+\\)[ \t]*:[ \t]*function[ \t]*(&quot; 1)
                                   (&quot;Task&quot; &quot;[. \t]task([ \t]*[&apos;\&quot;]\\([^&apos;\&quot;]+\\)&quot; 1)))))
(add-hook &apos;js2-mode-hook
              (lambda ()
                (setq imenu-create-index-function &apos;js2-imenu-make-index)))

(global-set-key (kbd &quot;M-s i&quot;) &apos;counsel-imenu)
</code></pre><p><a id="org22cfd37"></a></p>
<h2 id="expand-region"><a href="#expand-region" class="headerlink" title="expand-region"></a>expand-region</h2><p>使用同样的方法将 expand-region 添加至我们的插件列表中，重启 Emacs 安装插件。</p>
<p>再为其绑定一个快捷键，</p>
<pre><code>(global-set-key (kbd &quot;C-=&quot;) &apos;er/expand-region)
</code></pre><p>使用这个插件可以使我们更方便的选中一个区域。（更多使用方法和文档可以在<a href="https://github.com/magnars/expand-region.el" target="_blank" rel="external">这里</a>找到）</p>
<p><a id="orgfb338f0"></a></p>
<h2 id="iedit"><a href="#iedit" class="headerlink" title="iedit"></a>iedit</h2><p>iedit 是一个可以同时编辑多个区域的插件，它类似 Sublime Text 中的多光标编辑。它的 GitHub 仓库在<a href="https://github.com/victorhge/iedit" target="_blank" rel="external">这里</a>。</p>
<p>我们将其绑定快捷键以便更快捷的使用这个模式（ <code>C-;</code> 为默认快捷键），</p>
<pre><code>(global-set-key (kbd &quot;M-s e&quot;) &apos;iedit-mode)
</code></pre><p>我们可以使用 Customized-group 来更改其高亮的背景色，将 <code>highlight</code> 改为 <code>region</code> 。</p>
<p><a id="orgac10fea"></a></p>
<h2 id="Org-导出"><a href="#Org-导出" class="headerlink" title="Org 导出"></a>Org 导出</h2><p>使用 <code>C-c C-e</code> 可以将 Org-mode 文档导出为你需要的格式，例如 HTML 或者 PDF 文件。<br>你现在看到的这本教程就是由 Org-mode 所导出生成的。</p>
<p><a id="org0c79e1c"></a></p>
<h1 id="第六天：代码片段与语法检查器"><a href="#第六天：代码片段与语法检查器" class="headerlink" title="第六天：代码片段与语法检查器"></a>第六天：代码片段与语法检查器</h1><p>视频地址如下</p>
<ul>
<li><a href="http://pan.baidu.com/s/1miLBw5E" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTU0NjYwNzQ3Mg%3D%3D.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://www.youtube.com/watch?v%3DWIzWxTc1KUI&amp;featur" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>在开始前我们需要注意的是之前模块化的配置文件 <code>init-keybindings.el</code> 应该放在所有<br>调用模块的最后面，因为也许在设置快捷键时某些函数还未被加载。</p>
<p>我们可以使用下面的配置来在 Company-mode 中使用 <code>C-n</code> 与 <code>C-p</code> 来选择补全项，</p>
<pre><code>(with-eval-after-load &apos;company
  (define-key company-active-map (kbd &quot;M-n&quot;) nil)
  (define-key company-active-map (kbd &quot;M-p&quot;) nil)
  (define-key company-active-map (kbd &quot;C-n&quot;) #&apos;company-select-next)
  (define-key company-active-map (kbd &quot;C-p&quot;) #&apos;company-select-previous))
</code></pre><p><a id="org02ac8b2"></a></p>
<h2 id="Org-mode-进阶使用"><a href="#Org-mode-进阶使用" class="headerlink" title="Org-mode 进阶使用"></a>Org-mode 进阶使用</h2><p>在学习代码片段和语法检查器（Linter）之前，我们先来学习一下如何使用 Org-mode 来做<br>学习笔记和安排工作时间。我们用下面的配置代码来设置一个模板（其中设置了待办事项的<br>优先级还有触发键），</p>
<pre><code>(setq org-capture-templates
      &apos;((&quot;t&quot; &quot;Todo&quot; entry (file+headline &quot;~/.emacs.d/gtd.org&quot; &quot;工作安排&quot;)
         &quot;* TODO [#B] %?\n  %i\n&quot;
         :empty-lines 1)))
</code></pre><p>我们也可以为其绑定一个快捷键，</p>
<pre><code>(global-set-key (kbd &quot;C-c r&quot;) &apos;org-capture)
</code></pre><p>这个功能除了可以记录待办事项还有其他许许多多的功能例如获取将当前浏览器中的<br>URL（下面的例子只在 Mac OS X 平台有效）。</p>
<pre><code>(defun YOUR_NAME/retrieve-chrome-current-tab-url()
  &quot;Get the URL of the active tab of the first window&quot;
  (interactive)
      (let ((result (do-applescript
                     (concat
                      &quot;set frontmostApplication to path to frontmost application\n&quot;
                      &quot;tell application \&quot;Google Chrome\&quot;\n&quot;
                      &quot; set theUrl to get URL of active tab of first window\n&quot;
                      &quot; set theResult to (get theUrl) \n&quot;
                      &quot;end tell\n&quot;
                      &quot;activate application (frontmostApplication as text)\n&quot;
                      &quot;set links to {}\n&quot;
                      &quot;copy theResult to the end of links\n&quot;
                      &quot;return links as string\n&quot;))))
        (format &quot;%s&quot; (s-chop-suffix &quot;\&quot;&quot; (s-chop-prefix &quot;\&quot;&quot; result)))))
</code></pre><p>更多有关 Org-capture 的内容可以在<a href="http://orgmode.org/manual/Capture.html" target="_blank" rel="external">这里</a>找到。</p>
<p>Org-pomodoro 是一个番茄时间工作法的插件（更多关于这个工作法的信息可以在<a href="https://en.wikipedia.org/wiki/Pomodoro_Technique" target="_blank" rel="external">这里</a>找到）。<br>它的 GitHub 地址在<a href="https://github.com/lolownia/org-pomodoro" target="_blank" rel="external">这里</a>。在 <code>(require &#39;org-pomodoro)</code> 后可以通过 Customize-group<br>来对其进行设置，包括不同休息种类的时长。</p>
<p>因为每次保存中文的时候都需要选择解码，我们可以使用下面的配置将文本解码设置默认为 UTF-8，</p>
<pre><code>(set-language-environment &quot;UTF-8&quot;)
</code></pre><p>当 org-mode 不能生效时，我们需要将与 Org 相关的配置放置于 <code>with-eval-after-load</code> 中，</p>
<pre><code>(with-eval-after-load &apos;org
  ;; Org 模式相关设定
  )
</code></pre><p><a id="orgd315801"></a></p>
<h2 id="批量修改文件名"><a href="#批量修改文件名" class="headerlink" title="批量修改文件名"></a>批量修改文件名</h2><p><code>C-x C-q</code> 就可以直接在 Dired Mode 中进行编辑，使用之前学的 iedit-mode 和区域选择<br>就可以直接对多个文件进行重命名编辑了。</p>
<p><a id="orgd19f267"></a></p>
<h2 id="搜索与替换"><a href="#搜索与替换" class="headerlink" title="搜索与替换"></a>搜索与替换</h2><p>全局搜索在我们的编辑工作中是不可缺少的，今天我们介绍的是 ag。它是非常快速的命令<br>行搜索工具，它是 Linux 的所有搜索工具中最快的。</p>
<pre><code>ag &gt; pt &gt; ack &gt; grep
</code></pre><p>在使用 ag 前我们需要进行安装，下面是 Mac OS X 与 Ubuntu 下的安装方法，</p>
<pre><code># Mac OS X 通过 Homebrew 安装
brew install the_silver_searcher

# Ubuntu 下安装
apt-get install silversearcher-ag

# Windows 下通过 msys2 安装（确保在 path 中）
pacman -S mingw-w64-i686-ag # 32 位电脑
pacman -S mingw-w64-x86_64-ag # 64 位电脑
</code></pre><p>安装好 ag 后我们就可以安装 helm-ag 插件了。（它的 GitHub 仓库地址在<a href="https://github.com/syohex/emacs-helm-ag" target="_blank" rel="external">这里</a>）在安装<br>完成后可以为其设置快捷键，</p>
<pre><code>(global-set-key (kbd &quot;C-c p s&quot;) &apos;helm-do-ag-project-root)
</code></pre><p>使用这个插件我们同样可以在缓冲区对搜索到的结果进行直接的修改，这样就可以做到快速<br>的搜索与替换。</p>
<p><a id="org3b3755a"></a></p>
<h2 id="语法检查器（Linter）"><a href="#语法检查器（Linter）" class="headerlink" title="语法检查器（Linter）"></a>语法检查器（Linter）</h2><p>语法检查器可以在开发动态语言（Interpreted/Dynamic Programming Language）时极大的<br>提高你的开发效率，它会实时的检查你的代码并将句法错误（Syntax Error）与静态语义<br>（Static Semantic Error）错误进行高亮与提示。</p>
<p>我们在这里使用的例子是 JavaScript 的语法检查器 eslint 它的安装方法可以在<a href="https://github.com/eslint/eslint" target="_blank" rel="external">这里</a>找到。</p>
<p>在安装好语法检查器后就可以安装 flycheck 的插件了，它的 GitHub 的地址在<a href="https://github.com/flycheck/flycheck" target="_blank" rel="external">这里</a>。</p>
<p>使用下面的代码可以将 flycheck-mode 在特定模式下激活（下面的例子就是只有在打开<br>JavaScript 时才会激活语法检查器），</p>
<pre><code>(add-hook &apos;js2-mode-hook &apos;flycheck-mode)
</code></pre><p>使用 <code>flycheck-verify-setup</code> 可以进行语法检查器的选择。</p>
<p>eslint 检查器的配置也可以使用项目目录下的 <code>.eslintrc</code> 来进行配置，更多配置方法可<br>以在<a href="http://eslint.org/docs/user-guide/configuring" target="_blank" rel="external">这里</a>找到。</p>
<p><a id="orgf80e49f"></a></p>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p><code>yasnippet</code> 是一个代码块补全的插件（<a href="https://github.com/capitaomorte/yasnippet" target="_blank" rel="external">GitHub</a> 地址）。使用下面的配置文件将其在所有<br>的编程语言的模式中激活。</p>
<pre><code>(yas-reload-all)
(add-hook &apos;prog-mode-hook #&apos;yas-minor-mode)
</code></pre><p>自定义代码块的方法可以在上面提供的链接中找到。</p>
<p><a id="org4b803a9"></a></p>
<h3 id="auto-yasnippet"><a href="#auto-yasnippet" class="headerlink" title="auto-yasnippet"></a>auto-yasnippet</h3><p><a href="https://github.com/abo-abo/auto-yasnippet" target="_blank" rel="external">auto-yasnippet</a> 也是一个非常好用代码块补全插件。安装并未其设置快捷键，</p>
<pre><code>(global-set-key (kbd &quot;H-w&quot;) #&apos;aya-create)
(global-set-key (kbd &quot;H-y&quot;) #&apos;aya-expand)
</code></pre><p>简单的使用方法就是使用 <code>~</code> 来定义模板，然后调用 <code>aya-create</code> 再使用 <code>aya-expand</code> 来使用模板。</p>
<p><a id="orgb3a7381"></a></p>
<h1 id="第七天：Evil-模式"><a href="#第七天：Evil-模式" class="headerlink" title="第七天：Evil 模式"></a>第七天：Evil 模式</h1><p>视频地址如下，</p>
<ul>
<li><a href="http://pan.baidu.com/s/1dEIlXID" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTU1NTk4MzUyNA%3D%3D.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/evnnz2jvteQ" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>开始之前我们先将 <code>C-w</code> 来使其可以向后删除一个单词，这样就可以与 Shell 中的快捷键操作同步。</p>
<pre><code>(global-set-key (kbd &quot;C-w&quot;) &apos;backward-kill-word)
</code></pre><p>如果你不是 Vim 的用户，你可以选择跳过这一天的内容。但是我们强烈建议你花一些时间<br>来学习基本的 Vim 操作，即使 Emacs 是你的最爱 Vim 的快捷键也在一定程度会增加你的<br>编辑效率。基础的 Vim 操作可以在<a href="http://www.openvim.com/" target="_blank" rel="external">这里</a>学会。</p>
<p>Evil 模式中的 State 就相当与 Vim 中的模式，常用的模式有下面几种（后面对于了相应<br>的 Emacs 中的 State），</p>
<ul>
<li>Normal Mode -&gt; Normal State</li>
<li>Insert Mode -&gt; Insert State</li>
<li>Visual Mode -&gt; Visual State</li>
<li>Motion Mode -&gt; Motion State</li>
</ul>
<p>还有一个 Emacs 中的特殊状态是 Emacs State。</p>
<p><a id="orge0ad04b"></a></p>
<h2 id="Evil-的安装"><a href="#Evil-的安装" class="headerlink" title="Evil 的安装"></a>Evil 的安装</h2><p>照例我们需要将 Evil 插件添加至我们的插件列表中来完成安装。在重启 Emacs 完成安装<br>后可以添加下面的代码将其激活。</p>
<pre><code>(evil-mode 1)
</code></pre><p>在激活 Evil 模式后就可以，在 Emacs 中使用 Vim 的快捷键了。有一点需要注意 <code>C-u</code><br>在 Emacs 中有特殊的功所（Universal args）以能我们可以通过使用 <code>customize-group</code><br>来对 Evil 模式进行修改，将 <code>Evil Want C U Scroll</code> 设置为开启。</p>
<p>下面的代码可以将 <code>insert state map</code> 中的快捷键清空，使其可以回退（Fallback）到<br>Emacs State 中，这样我们之前的 Emacs State 里面定义的 <code>C-w</code> 等快捷键就不会被<br><code>evil insert minor mode state</code> 所覆盖，</p>
<pre><code>(setcdr evil-insert-state-map nil)
(define-key evil-insert-state-map [escape] &apos;evil-normal-state)
</code></pre><p>这样你就可以使用 Evil 来在 Emacs 中完成百分之八十作用的快捷键操作了。</p>
<p>完整的 Evil Mode 的 PDF 版本的操作指南可以在<a href="https://bytebucket.org/lyro/evil/raw/default/doc/evil.pdf" target="_blank" rel="external">这里</a>找到，建议从 Vim 转 Emacs 的用户<br>多次阅读来完整的掌握这个模式的使用方法。</p>
<p><a id="org564b3ef"></a></p>
<h2 id="Evil-模式插件"><a href="#Evil-模式插件" class="headerlink" title="Evil 模式插件"></a>Evil 模式插件</h2><p><a id="org1d14471"></a></p>
<h3 id="Leader-Key"><a href="#Leader-Key" class="headerlink" title="Leader Key"></a>Leader Key</h3><p>在 Emacs 中使用 Leader Key 可以通过 <a href="https://github.com/cofi/evil-leader" target="_blank" rel="external">evil-leader</a> 来实现。你需要做的就是在安装后将其激活即可。</p>
<p><strong>提示</strong>: 根据<a href="https://github.com/cofi/evil-leader" target="_blank" rel="external">cofi/evil-leader</a> 的说明，你应该在激活 evil-mode 之前就激活 global-evil-leader-mode，否则 evil-leader 在几个初始缓冲区(scratch, Message,&#x2026;)上将不生效。</p>
<pre><code>(global-evil-leader-mode)
</code></pre><p>Leader Key 可以通过 customize-group 来进行设置（Evil Leader/Leader）。因为之后我<br>们会转移至 Spacemacs 所以我们可以将其设置为空格键 <code>SPC</code> 。</p>
<p>在通过下面的配置来设置简单的结合 Leader Key 快捷键组合（我们使用不同的键讲不同的<br>功能分组，例如我们使用 <code>f</code> 键来做关于文件的操作，使用 <code>b</code> 键来做关于缓冲区<br>（Buffer）的操作），</p>
<pre><code>(evil-leader/set-key
  &quot;ff&quot; &apos;find-file
  &quot;bb&quot; &apos;switch-to-buffer
  &quot;0&quot;  &apos;select-window-0
  &quot;1&quot;  &apos;select-window-1
  &quot;2&quot;  &apos;select-window-2
  &quot;3&quot;  &apos;select-window-3
  &quot;w/&quot; &apos;split-window-right
  &quot;w-&quot; &apos;split-window-below
  &quot;:&quot;  &apos;counsel-M-x
  &quot;wM&quot; &apos;delete-other-windows
  )
</code></pre><p>注意上面窗口跳转相关的设置需要 window-numbering 安装后方可生效。</p>
<p><a id="orga686ee7"></a></p>
<h3 id="Window-numbering"><a href="#Window-numbering" class="headerlink" title="Window-numbering"></a>Window-numbering</h3><p>这个插件可以让我们快速的使用 Leader Key 与数字键的组合来在多个窗口之间进行跳转。<br>它的 GitHub 地址可以在<a href="https://github.com/nschum/window-numbering.el" target="_blank" rel="external">这里</a>找到。</p>
<p>下载安装后通过下面的代码可以将其激活，</p>
<pre><code>(window-numbering-mode 1)
</code></pre><p><a id="org104ac0e"></a></p>
<h3 id="Evil-Surround"><a href="#Evil-Surround" class="headerlink" title="Evil-Surround"></a>Evil-Surround</h3><p><a href="https://github.com/timcharper/evil-surround" target="_blank" rel="external">Evil-surround</a> 是一个 Vim 上非常常用的插件改写的，使用它可以快速的将选中区域进行<br>匹配的操作，例如选中区域两边同时进行添加或修改括号，引号等操作。</p>
<p>下载安装后使用下面的代码将其激活，</p>
<pre><code>(require &apos;evil-surround)
(global-evil-surround-mode)
</code></pre><p>简单的使用方法就是在选中所选区域后，使用 <code>S(</code> 来将选中区域包括在括号之中。如果想<br>将括号改变成 <code>&quot;</code> 可以在选中后使用 <code>cs(&quot;</code></p>
<p><a id="org9dc2dbf"></a></p>
<h3 id="Evil-nerd-commenter"><a href="#Evil-nerd-commenter" class="headerlink" title="Evil-nerd-commenter"></a>Evil-nerd-commenter</h3><p>这是一个快速添加与取消注释的插件，它的 GitHub 地址在<a href="https://github.com/redguardtoo/evil-nerd-commenter" target="_blank" rel="external">这里</a>。</p>
<p>使用下面代码可以将其激活，</p>
<pre><code>(evilnc-default-hotkeys)
</code></pre><p>使用下面的代码将其与 Evil 模式进行绑定，这里我们选择使用 <code>,/</code> 作为快捷键。</p>
<pre><code>(define-key evil-normal-state-map (kbd &quot;,/&quot;) &apos;evilnc-comment-or-uncomment-lines)
(define-key evil-visual-state-map (kbd &quot;,/&quot;) &apos;evilnc-comment-or-uncomment-lines)
</code></pre><p><a id="org8b2c336"></a></p>
<h3 id="Which-key"><a href="#Which-key" class="headerlink" title="Which-key"></a>Which-key</h3><p><a href="https://github.com/justbur/emacs-which-key" target="_blank" rel="external">which-key</a> 可以显示当前组合键下所有可以使用的全部组合键的选项。使用这个插件可以很<br>好的解决快捷键太多的问题，我们无需在记忆任何快捷键，而是根据自己的需求使用不同分<br>组的快捷键后再在其中去需找自己需要的功能。</p>
<p>在下载后可以使用下面的代码进行激活，</p>
<pre><code>(which-key-mode 1)
</code></pre><p><a id="orgb455361"></a></p>
<h2 id="Org-Mode-中的搜索"><a href="#Org-Mode-中的搜索" class="headerlink" title="Org Mode 中的搜索"></a>Org Mode 中的搜索</h2><p><code>C-c a</code> 中可以根据提示使用 <code>s</code> 来进行关键字所搜。使用 <code>t</code> 则可以进行代办事项的搜索。</p>
<p><a id="org9f0276f"></a></p>
<h1 id="第八天：Cask-介绍与实践"><a href="#第八天：Cask-介绍与实践" class="headerlink" title="第八天：Cask 介绍与实践"></a>第八天：Cask 介绍与实践</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1o83r1vc" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTU3MzEyNDkxNg==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/B7jx8kJIbnY" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>什么是 Cask:</p>
<p>Cask 是一个 Emacs Lisp 的项目管理工具.</p>
<p><a id="org11f095e"></a></p>
<h2 id="Cask-的安装"><a href="#Cask-的安装" class="headerlink" title="Cask 的安装"></a>Cask 的安装</h2><p>Cask 的地址: <a href="https://github.com/cask/cask" target="_blank" rel="external">Cask</a></p>
<p>可以使用如下命令安装 Cask:</p>
<pre><code>curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python
</code></pre><p>安装过程中 Cask 将会进行 Bootstrap, 安装一些包到~/.emacs.d 目录中.</p>
<p>安装完成之后需要将 Cask 的可执行文件目录加入到 PATH 中.</p>
<p>可以看到, Cask 的安装过程在 ~/.emacs.d 中新建了一个 .Cask 目录.</p>
<p>安装 Pallet: Pallet 是一个基于 Cask 的包管理工具, 可以使用 Emacs 的包安装方式安装.</p>
<p>然后使用以下代码启用 Pallet:</p>
<pre><code>(pallet-mode) 
(pallet-init)    ; 在.emacs.d 中生成一个 Cask 文件, 写入源与现有包
(pallet-install) ; 将 elpa 中的 package 拷贝到.Cask/&lt;you version&gt;/elpa 目录中
</code></pre><p>然后在配置文件中加入以下代码(在其他包加载之前) :</p>
<pre><code>(require &apos;cask &quot;&lt;path-to-cask&gt;/cask.el&quot;)
(cask-initialize)    ; 类似于 package-initialize
(require &apos;pallet)
(pallet-mode t)      ; 激活 pallet, 在安装包时将 Cask 文件写入相应信息
</code></pre><p>具体使用方式见文档: <a href="https://github.com/rdallasgray/pallet" target="_blank" rel="external">Pallet</a></p>
<p><a id="orgb0ac29c"></a></p>
<h2 id="为何使用-Cask"><a href="#为何使用-Cask" class="headerlink" title="为何使用 Cask"></a>为何使用 Cask</h2><ul>
<li>使用 Cask 文件保存包的信息, 可以通过 <strong>Cask install</strong> 自动安装</li>
<li>当有多个版本的 Emacs 时, 将各版本的包单独存放</li>
</ul>
<p><a id="org98cd21d"></a></p>
<h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><p><a id="org90fc7fa"></a></p>
<h3 id="Emacs24-5-时不能安装-let-alist"><a href="#Emacs24-5-时不能安装-let-alist" class="headerlink" title="Emacs24.5 时不能安装 let-alist"></a>Emacs24.5 时不能安装 <strong>let-alist</strong></h3><p>解决方案: 将 Gnu 的源加入源列表中, 示例代码如下(加入 Cask 文件)</p>
<pre><code>(source &quot;gnu&quot; &quot;http://elpa.zilongshanren.com/gnu/&quot;)
</code></pre><p><a id="orgbb42be1"></a></p>
<h3 id="在-Emacs24-5-中没有定义-define-advice"><a href="#在-Emacs24-5-中没有定义-define-advice" class="headerlink" title="在 Emacs24.5 中没有定义 define-advice"></a>在 Emacs24.5 中没有定义 define-advice</h3><p>define-advice 是一个 Emacs25 中加入的宏, 在 Emacs24 中不能使用, 可以使用<br><strong>defadvice</strong> 代替:</p>
<pre><code>(defadvice show-paren-function (around fix-show-paren-function activate)
  (cond ((looking-at-p &quot;\\s(&quot;) ad-do-it)
    (t (save-excursion
         (ignore-errors (backward-up-list))
         ad-do-it)))
  )
</code></pre><p>而且使用 defadvice 相比 define-advice 还有一个优点:</p>
<p>使用 define-advice 定义的代码, 当在 Normal 模式时光标两边的括号不会高亮, 而使用<br>defadvice 可以.</p>
<p><a id="org2696956"></a></p>
<h1 id="第九天：Macro-与-Use-package"><a href="#第九天：Macro-与-Use-package" class="headerlink" title="第九天：Macro 与 Use-package"></a>第九天：Macro 与 Use-package</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1c1Gnkcw" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTU4MDU2NjE3Ng==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/AnHP4rNiKSE" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>这次主要介绍 Emacs Lisp 中的宏(Macro)以及 Use-package 插件.</p>
<p><a id="orgee1cc43"></a></p>
<h2 id="Macro"><a href="#Macro" class="headerlink" title="Macro"></a>Macro</h2><p><a id="orgd8856e4"></a></p>
<h3 id="什么是-Macro"><a href="#什么是-Macro" class="headerlink" title="什么是 Macro"></a>什么是 Macro</h3><p>宏是一种可以生成代码的代码. 类比与 C 语言中的宏以及 C++中的模板. 先看一个简单的例子:</p>
<pre><code>(defmacro inc (var)
  (list &apos;setq var (list &apos;1+ var)))

(setq my-var 1)
(setq my-var (+ 1 my-var))

(macroexpand &apos;(inc my-var))
</code></pre><p>以上这个宏的作用是将变量的值+1. 执行以上代码之后, <strong>my-var</strong> 的结果为 2.</p>
<p>可以使用 macroexpand 获得宏展开的结果, 如以上代码结果为:</p>
<pre><code>(setq my-var (1+ my-var))
</code></pre><p>我们也可以使用函数来实现相同的功能, 但 Macro 与函数有以下两个区别:</p>
<ol>
<li>宏的参数并不会被马上求值, 解释器会先展开宏, 宏展开之后解释器才会执行宏展开的<br>结果; 而函数的参数会马上求值</li>
<li>宏的执行结果是一个表达式, 该表达式会立即被解释器执行; 而函数的结果是一个值</li>
</ol>
<p><a id="org2b6f15f"></a></p>
<h3 id="backquote"><a href="#backquote" class="headerlink" title="backquote"></a>backquote</h3><p>backquote 是指反引号(`), 即键盘上数字 1 左边的键.</p>
<p>当在 Emacs 输入 backquote 时会插入两个反引号, 可以使用以下代码关闭这个功能:</p>
<pre><code>(sp-local-pair &apos;emacs-lisp-mode &quot;`&quot; nil :actions nil)
</code></pre><p>先看以下例子来体会 backquote 的作用:</p>
<pre><code>(defun my-print (number)
  (message &quot;This is a number: %d&quot; number))

(my-print 2)               ; 1. output= This is a number: 2
(my-print (+ 2 3))         ; 2. output= This is a number: 5

(quote (+ 1 1))
;; return a list= (+ 1 1)

(defmacro my-print-2 (number)
  `(message &quot;This is a number: %d&quot; ,number))

(my-print-2 2)             ; 3. output= This is a number: 2
(my-print-2 (+ 2 3))       ; 4. output= This is a number: 5

(setq my-var 2)
(inc my-var)

(defmacro inc2 (var1 var2)
  (list &apos;progn (list &apos;inc var1) (list &apos;inc var2)))

(macroexpand &apos;(inc2 my-var my-var))
(macroexpand-all &apos;(inc2 my-var my-var))
</code></pre><p>quote 的作用是返回后面的表达式, 不对表达式进行求值. 所以以下代码:</p>
<pre><code>(quote (+ 1 1))
;; return a list= (+ 1 1)
</code></pre><p>并没有对表达式 <strong>(+ 1 1)</strong> 进行求值返回 2, 而是返回一个 list.</p>
<p>backquote 的作用与 quote 相似, 同样不对后面的表达式求值, 但是当 backquote 在宏中<br>与逗号(,)一起使用时, 用逗号修饰的变量将进行求值.</p>
<p>例如以下代码:</p>
<pre><code>(defmacro my-print-2 (number)
  `(message &quot;This is a number: %d&quot; ,number))

(pp (macroexpand &apos;(my-print-2 (+ 2 3))))
(my-print-2 (+ 2 3))
</code></pre><p>当输出 message 且 number 不带逗号时, <strong>my-print-2</strong> 的执行将提示错误. 因为宏不对参<br>数进行求值, 所以以上宏展开相当于:</p>
<pre><code>(message &quot;This is a number:&quot; number)
</code></pre><p>因为我们没有定义 number 变量, 所以执行出错.</p>
<p>而如果加入逗号, 则在宏展开时会对变量 <strong>number</strong> 进行求值, 展开结果为:</p>
<pre><code>(message &quot;This is a number: %d&quot; (+ 2 3))
</code></pre><p>在调试宏的过程中, 可以使用 <strong>macroexpand</strong> 和 <strong>macroexpand-all</strong> 获取宏展开的结果.</p>
<p>关于 backquote 的更多讨论, 可以见以下地址: <a href="https://emacs-china.org/t/lisp/357" target="_blank" rel="external">lisp 中的`与，是怎么用的？</a></p>
<p><a id="org0c70c67"></a></p>
<h3 id="为什么使用宏"><a href="#为什么使用宏" class="headerlink" title="为什么使用宏"></a>为什么使用宏</h3><p>使用宏可以减少重复的代码, 以下是一个使用宏来定义函数的例子:</p>
<pre><code>(defun prelude-search (query-url prompt)
  &quot;Open the search url constructed with the QUERY-URL.
PROMPT sets the `read-string prompt.&quot;
  (browse-url
   (concat query-url
           (url-hexify-string
            (if mark-active
                (buffer-substring (region-beginning) (region-end))
              (read-string prompt))))))

(defmacro prelude-install-search-engine (search-engine-name search-engine-url search-engine-prompt)                   ; #1
  &quot;Given some information regarding a search engine, install the interactive command to search through them&quot;   
  `(defun ,(intern (format &quot;prelude-%s&quot; search-engine-name)) ()                                                       ; #2
       ,(format &quot;Search %s with a query or region if any.&quot; search-engine-name)                                        ; #3
       (interactive)
       (prelude-search ,search-engine-url ,search-engine-prompt)))                                                    ; #4

(prelude-install-search-engine &quot;google&quot;     &quot;http://www.google.com/search?q=&quot;              &quot;Google: &quot;)                ; #5
(prelude-install-search-engine &quot;youtube&quot;    &quot;http://www.youtube.com/results?search_query=&quot; &quot;Search YouTube: &quot;)
(prelude-install-search-engine &quot;github&quot;     &quot;https://github.com/search?q=&quot;                 &quot;Search GitHub: &quot;)
(prelude-install-search-engine &quot;duckduckgo&quot; &quot;https://duckduckgo.com/?t=lm&amp;q=&quot;              &quot;Search DuckDuckGo: &quot;)
</code></pre><p>下面对以上代码进行讲解:</p>
<p>第#1 行, 通过 <strong>prelude-install-search-engine</strong> 定义了一个需要 3 个参数的宏, 这个<br>宏的作用是生成一个函数.</p>
<p>第#2 行, 通过 <strong>intern</strong> 生成一个符号作为函数名, 名称为　*prelude-xxx* , 其中 xxx<br>为第一个参数的值.</p>
<p>第#3 行, 生成了这个函数的描述.</p>
<p>第#4 行, 调用 <strong>prelude-search</strong> 函数进行搜索处理.</p>
<p>第#5 行, 调用这个宏定义了一个名为　*prelude-google* 的函数.</p>
<p>从以上代码可以知道, 我们利用宏生成了４个名称不同的函数, 避免了手动编写函数的问题<br>(因为这４个函数的代码非常相似, 根据 DRY 原则应该尽量避免做这种重复工作).</p>
<p>关于宏的更多内容, 可以阅读 <strong>Paul Graham</strong> 的著作　<a href="http://www.paulgraham.com/onlisp.html" target="_blank" rel="external">《On Lisp》</a></p>
<pre><code>prelude-duckduckgo
</code></pre><p><a id="orgee11da2"></a></p>
<h2 id="Use-package"><a href="#Use-package" class="headerlink" title="Use-package"></a>Use-package</h2><p><a id="orgd43ba31"></a></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Use-package 是一个宏, 它能让你将一个包的 <strong>require</strong> 和它的相关的初始化等配置组织<br>在一起, 避免对同一个包的配置代码散落在不同的文件中.</p>
<p>Use-package 的更多信息参见以下地址: <a href="https://github.com/jwiegley/use-package" target="_blank" rel="external">Use-package</a></p>
<p><a id="org0b48881"></a></p>
<h3 id="一些简单的用法"><a href="#一些简单的用法" class="headerlink" title="一些简单的用法"></a>一些简单的用法</h3><ul>
<li><p>更安全的 require</p>
<p>在 Emacs 中, 当我们要引入一个包时, 通常会使用以下代码:</p>
<pre><code>(require &apos;package-name)
</code></pre><p>但是当 <strong>package-name</strong> 不在 <strong>load-path</strong> 中时, 以上代码会抛出错误. 使用<br><strong>Use-package</strong> 可以避免:</p>
<pre><code>(use-package package-name)
</code></pre><p>以上代码展开的结果如下:</p>
<pre><code>(if
    (not
     (require &apos;package-name nil &apos;t))
    (ignore
     (message
      (format &quot;Cannot load %s&quot; &apos;package-name))))
</code></pre><p>可以看到, <strong>Use-package</strong> 使用 <strong>ignore</strong> 来避免抛出错误, 这样当某个包不存在时,<br><strong>eamcs</strong> 也能够正常启动.</p>
</li>
<li><p>将配置集中</p>
<p>当我们引入某个包时, 有可能需要定义一些与这个包相关的变量, 使用 <strong>Use-package</strong> 实<br>现这个需求如下:</p>
<pre><code>(use-package package-name
  :init
  (setq my-var1 &quot;xxx&quot;)
  :config
  (progn
    (setq my-var2 &quot;xxx&quot;)
    (setq my-var3 &quot;xxx&quot;)
    )
  )
</code></pre><p>在上例中, <strong>init</strong> 后的代码在包的 require 之前执行, 如果这段代码出错则跳过包的 require.</p>
<p><strong>config</strong> 后的代码在包的 require 之后执行.</p>
<p><strong>init</strong> 与 <strong>config</strong> 之后只能接单个表达式语句, 如果需要执行多个语句, 可以用 <strong>progn</strong> .</p>
</li>
<li><p>autoload</p>
<p>使用 require 时会引入这个包, 但是当你的包很多时会影响启动速度. 而使用 autoload<br>则可以在真正需要这个包时再 require, 提高启动速度, 避免无谓的 require.</p>
<p>使用 <strong>Use-package</strong> 可以轻松的实现这个功能:</p>
<pre><code>(use-package package-name
  :commands
  (global-company-mode)
  :defer t
  )
</code></pre><p>使用 <strong>commands</strong> 可以让 package 延迟加载, 如以上代码会首先判断 package 的符号是否<br>存在, 如果存在则在 <strong>package-name</strong> 的路径下加载. <strong>defer</strong> 也可以让 <strong>package-name</strong><br>进行延迟加载.</p>
</li>
<li><p>键绑定</p>
<p>在之前的代码中, 如果我们需要绑定一个键, 需要使用 <strong>global-key-bind</strong> 或<br><strong>define-key</strong> 实现, 而使用*Use-package* 实现更简单:</p>
<pre><code>(use-package color-moccur
  :commands (isearch-moccur isearch-all)
  :bind ((&quot;M-s O&quot; . moccur)
         :map isearch-mode-map
         (&quot;M-o&quot; . isearch-moccur)
         (&quot;M-O&quot; . isearch-moccur-all))
  :init
  (setq isearch-lazy-highlight t)
  :config
  (use-package moccur-edit))
</code></pre></li>
</ul>
<p><a id="orgc4af53d"></a></p>
<h3 id="为什么使用-Use-package"><a href="#为什么使用-Use-package" class="headerlink" title="为什么使用 Use-package"></a>为什么使用 Use-package</h3><ol>
<li>Use-package 能让相关的配置更为集中, 避免配置分散带来的维护困难</li>
<li>Use-package 有完善的错误处理, 使配置代码更为健壮</li>
<li>Spacemacs 也大量使用了 Use-package</li>
</ol>
<p><a id="org1bc6686"></a></p>
<h1 id="第十天-Company-mode-与-auto-completion"><a href="#第十天-Company-mode-与-auto-completion" class="headerlink" title="第十天: Company-mode 与 auto-completion"></a>第十天: Company-mode 与 auto-completion</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1hsyfnXq" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTYwMzc0NDg0OA==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/wgam0sXuMdU" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>内容概要:</p>
<ol>
<li>给出 Cask 和 Use-package 的简单示例</li>
<li>详细介绍 Company-mode 的工作原理, 各种 backend 及其用法</li>
</ol>
<p>扩展阅读:</p>
<ol>
<li><a href="http://sixty-north.com/blog/writing-the-simplest-emacs-company-mode-backend" target="_blank" rel="external">编写一个简单的 comopany backend</a></li>
<li><a href="https://www.emacswiki.org/emacs/CompanyMode" target="_blank" rel="external">Company Mode Emacs wiki</a></li>
</ol>
<p><a id="org7d4cda3"></a></p>
<h2 id="升级-Package-之后有-BUG-怎么办"><a href="#升级-Package-之后有-BUG-怎么办" class="headerlink" title="升级 Package 之后有 BUG 怎么办"></a>升级 Package 之后有 BUG 怎么办</h2><p>有些时候我们将一个 Package 升级到最新的版本(例如 github 上最新的 commit), 而该版本可能会存在一些 BUG, 这就会导致我们的配置不能使用.</p>
<p>如果我们使用 stable 版本的 Package(例如使用 github 上最新的 release), 就可以尽量地减少因为升级包之后的 BUG 导致配置不可用的情况.</p>
<p>另一种解决方式是使用 Cask 进行包管理, 举例如下:</p>
<p>首先我们添加一个包, 例如我们编辑 Cask 文件, 添加 monokai-theme :</p>
<pre><code>(depends-on &quot;monokai-theme&quot;
            :git &quot;https://github.com/oneKelvinSmith/monokai-emacs/releases&quot;
            :ref &quot;02c5f5d&quot;)
</code></pre><p>然后启动 emacs, 但是出现了 BUG.<br>这时我们可以直接将 ref 的值修改为最新的 commit, Cask 即会更新这个包, 而不用等待 melpa 对包进行更新.</p>
<p><a id="org30609e4"></a></p>
<h2 id="Use-package-的更多用法"><a href="#Use-package-的更多用法" class="headerlink" title="Use-package 的更多用法"></a>Use-package 的更多用法</h2><p>如果我们启用 <strong>exec-path-from-shell</strong> , 在 emacs 启动时可能会提示 <strong>PATH</strong> 变量重复定义, 解决方案如下:</p>
<pre><code>(use-package exec-path-from-shell
  :ensure t
  :if (and (eq system-type &apos;darwin) (display-graphic-p))
  :config
  (progn
    (when (string-match-p &quot;/zsh$&quot; (getenv &quot;SHELL&quot;))
      ;; Use a non-interactive login shell.  A login shell, because my
      ;; environment variables are mostly set in `.zprofile&apos;.
      (setq exec-path-from-shell-arguments &apos;(&quot;-l&quot;)))

    (exec-path-from-shell-initialize)
    )
  )

;; (use-package monokai-theme
;; :ensure t)
</code></pre><p>其中 if 子句可以确定启用 Package 的条件, 在 config 子句中向 <strong>exec-path-from-shell-arguments</strong> 即可消除这个警告.</p>
<p>ensure 子句来确保 Package 被安装. 如果要使用 stable 版, 则添加以下子句:</p>
<pre><code>:pin melpa-stable
</code></pre><p><a id="org9b55859"></a></p>
<h2 id="Company-mode-的工作原理"><a href="#Company-mode-的工作原理" class="headerlink" title="Company-mode 的工作原理"></a>Company-mode 的工作原理</h2><p>Company-mode 需要配合后端使用, 所有的 backend 都保存在 <strong>company-backends</strong> 这个变量中, 例如在我的环境中该变量值如下:</p>
<pre><code>(company-capf
 (company-dabbrev-code company-gtags company-etags company-keywords)
 company-files
 company-dabbrev
 )
</code></pre><p>*company-backends*变量的值是一个列表, 其中的每一项都是一个后端或 Group Backend.</p>
<p>Company-mode 会依次调用该变量中的 backend, 并判断该 backend 是否合适当前 Buffer, 直到找到一个合适的补全后端.</p>
<p>在进行补全项选择的时候, 我们也可以在 mode-line 中看到是使用的哪一个后端.</p>
<ol>
<li>company-dabbrev: 将当前打开的所有 buffer 中的关键字作为补全显示(默认不使用 scratch buffer).</li>
<li>company-files: 补全路径.</li>
</ol>
<p>如果在补全过程中取消了补全, 也可以使用命令再次开启补全. 例如 <strong>company-files</strong> 补全方式就可以使用 company-files 函数开启.</p>
<p>在输入英文时可以使用 company-ispell 进行输入提示.</p>
<p><a id="org3d77d90"></a></p>
<h2 id="为什么有时-Python-的补全-不工作"><a href="#为什么有时-Python-的补全-不工作" class="headerlink" title="为什么有时 Python 的补全 不工作"></a>为什么有时 Python 的补全 不工作</h2><p>有时在编写 Python 代码的时候补全不能工作, 这时我们可以先查看 <strong>company-backends</strong> 的值, 查看是否需要安装 <strong>company-anaconda</strong> 用于补全.</p>
<p>在 Mac 系统中, 如果 anaconda-mode 的安装过程出现错误, 可以参照以下解决方案: <a href="https://emacs-china.org/t/mac-python-anaconda-mode/207" target="_blank" rel="external">Mac 上面编辑 python 的时候安装 anaconda-mode 出错</a></p>
<p>然后确保在 <strong>company-backends</strong> 中有 <strong>company-anaconda</strong> 这个后端即可. 可以使用如下代码:</p>
<pre><code>(add-hook &apos;python-mode-hook
          (lambda ()
            (set (make-local-variable &apos;company-backends) &apos;(company-anaconda))))
</code></pre><p>以上代码在 python-mode 被激活时设置 <strong>company-backends</strong> 的变量值为 (company-anaconda), 则在编辑 python 代码时就可以使用 anaconda-mode 进行补全.</p>
<p>在 emacs 中有两种补全方式:</p>
<ol>
<li>如 company-files 等, 根据关键字等进行补全, 只需要 emacs 自己进行一些处理即可得到补全数据;</li>
<li>如 company-anaconda 等, 需要使用客户端-服务端模式, 补全后端需要服务端的配合才能得到补全数据.</li>
</ol>
<p>在进行编程时, 一般使用第二种补全后端, 例如 编写 python 代码使用 company-anaconda, 编写 C/C++代码使用 company-ycmd, 编写 javascript 代码使用 company-tern.</p>
<p>上述示例代码开启 company-anaconda 时有一个缺点, 比如当我们在 python 的注释时没法使用补全, 因为补全后端只有 company-anaconda, 在注释时不工作. 我们可以将 dabbrev 加入后端列表:</p>
<pre><code>(add-hook &apos;python-mode-hook
          (lambda ()
            (set (make-local-variable &apos;company-backends) &apos;(company-anaconda company-dabbrev))))
</code></pre><p>当 company-anaconda 不合适时使用 company-dabbrev 进行补全, 即可满足上述需求.</p>
<p><a id="orgc8d9855"></a></p>
<h2 id="Group-Backend"><a href="#Group-Backend" class="headerlink" title="Group Backend"></a>Group Backend</h2><p>company-dabbrev-code: 类似于 company-dabbrev, 但是 dabbrev 对代码和注释都进行补全, dabbrev-code 只补全代码.</p>
<p>假设我们的配置代码如下:</p>
<pre><code>(add-hook &apos;python-mode-hook
          (lambda ()
            (set (make-local-variable &apos;company-backends) &apos;((company-anaconda company-dabbrev-code)
                                                           company-dabbrev)))
          )
</code></pre><p>如果我们在注释中出现了 xxx 这个字符串, 在编写 python 代码时 xxx 不会出现在补全选项中. 因为在此时会先匹配到 company-anaconda, 并不会进入 company-dabbrev.<br>而因为 company-anaconda 是一个 Group Backend, 所以 company-dabbrev-code 的补全数据会出现在补全列表中.</p>
<p><a id="org4cd182c"></a></p>
<h2 id="怎样写一个简单的补全后端"><a href="#怎样写一个简单的补全后端" class="headerlink" title="怎样写一个简单的补全后端"></a>怎样写一个简单的补全后端</h2><p>因为视频时间关系, 大家可以去阅读以下文章:</p>
<p><a href="http://sixty-north.com/blog/writing-the-simplest-emacs-company-mode-backend" target="_blank" rel="external">Writing the Simplest Emacs company-mode Backend</a></p>
<p>实现方式简单介绍如下:</p>
<ol>
<li>定义一个补全数据列表</li>
<li>定义一个补全函数, 返回对应输入的补全数据</li>
</ol>
<p>更多的内容可以查看该文档, 同时在网页右侧的链接中有更多的详细内容.</p>
<p><a id="orgf400691"></a></p>
<h1 id="第十一天-Spacemacs-简介及安装"><a href="#第十一天-Spacemacs-简介及安装" class="headerlink" title="第十一天: Spacemacs 简介及安装"></a>第十一天: Spacemacs 简介及安装</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1eRTHBLC" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTYxMzYyNjc4MA==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/etLqMM5nmqI" target="_blank" rel="external">Youtube</a></li>
</ul>
<p>从今天的内容开始介绍 Spacemacs. 地址: <a href="https://github.com/syl20bnr/spacemacs" target="_blank" rel="external">Spacemacs</a></p>
<p>今天的内容包括:</p>
<ol>
<li>如何安装 Spacemacs</li>
<li>一些简单的配置, 以及 package 管理</li>
<li>管理自己的配置</li>
</ol>
<p><a id="org8e616e8"></a></p>
<h2 id="安装-Spacemacs"><a href="#安装-Spacemacs" class="headerlink" title="安装 Spacemacs"></a>安装 Spacemacs</h2><p>安装 Spacemacs 非常简单, 只需要将 github 上的仓库克隆即可, 即执行以下命令(如有必要可以先备份以前的配置):</p>
<pre><code>cd ~
mv .emacs.d .emacs.d.bak
mv .emacs .emacs.bak
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
</code></pre><p>在克隆完成后直接运行 Emacs.<br>在第一次使用 Spacemacs 时需要下载一些 Package, 然后在 Bootstrap 完成之后你需要进行如下一些配置:</p>
<ol>
<li>使用哪种编辑方式, 包括 vim 方式(默认) 以及 emacs 方式.</li>
<li>使用哪种 Spacemacs distribution. 包括标准版(默认)以及基础版. 区别在于标准版包含非常多的功能, 而基础版只包含核心功能.</li>
</ol>
<p>在完成以上两个配置之后, 就会在 HOME 目录生成一个 ~/.spacemacs 配置文件.<br>然后 Spacemacs 会进行进一步的初始化, 下载更多的需要的 Package.<br>如果你需要使用 <a href="http://elpa.emacs-china.org/" target="_blank" rel="external">emacs-china</a> 的配置源, 此时可以终止 emacs, 然后在~/.spacemacs 中的 dotspacemacs/user-init 函数中加入以下代码:</p>
<pre><code>(setq configuration-layer--elpa-archives
      &apos;((&quot;melpa-cn&quot; . &quot;http://elpa.zilongshanren.com/melpa/&quot;)
        (&quot;org-cn&quot;   . &quot;http://elpa.zilongshanren.com/org/&quot;)
        (&quot;gnu-cn&quot;   . &quot;http://elpa.zilongshanren.com/gnu/&quot;)))
</code></pre><p>重新启动 emacs, 等待 Spacemacs 完成安装即可.</p>
<p>如果你需要更方便的管理你自己的配置, 可以创建 ~/.spacemacs.d 目录, 然后将 ~/.spacemacs 文件移动到该目录中并重命名为 init.el.</p>
<p>在 Spacemacs 中的操作方式如下:</p>
<ol>
<li>按下 <strong>SPC f j</strong> 打开 dired 目录</li>
<li>按下按键 + , 创建 ~/.spacemacs.d 目录</li>
<li>将光标移动到 .spacemacs 文件上, 按下 R, 将该文件移动到 .spacemacs.d 目录中</li>
<li>进入 .spacemacs.d 目录, 将光标移动到 .spacemacs 文件上, 按下 R, 将该文件重命名为 init.el</li>
<li>按下 qq 退出 dired</li>
</ol>
<p>然后启动 emacs 即可.</p>
<p>使用这种方式管理配置, 你可以将自己的配置集中到 ~/.spacemacs.d 目录中, 更容易进行统一管理. 你也可以将自己的配置 push 到 github 上.</p>
<p><a id="org786c10c"></a></p>
<h2 id="添加内置的-layer"><a href="#添加内置的-layer" class="headerlink" title="添加内置的 layer"></a>添加内置的 layer</h2><p>在安装完成 Spacemacs 之后, 按下 <strong>SPC f e d</strong> 打开 ~/.spacemacs 文件, 修改 <strong>dotspacemacs-configuration-layers</strong> 变量的值,<br>将 auto-completion, better-defaults, emacs-lisp, git, markdown, org, spell-checking, syntax-checking 等 layer 加入列表.</p>
<p>然后退出 emacs 再重启, 或者按下 <strong>SPC f e R</strong> 安装需要的 package.</p>
<p><a id="org2625293"></a></p>
<h2 id="一些简单的配置"><a href="#一些简单的配置" class="headerlink" title="一些简单的配置"></a>一些简单的配置</h2><p><a id="org4b2e64d"></a></p>
<h3 id="启动时全屏显示"><a href="#启动时全屏显示" class="headerlink" title="启动时全屏显示"></a>启动时全屏显示</h3><p>在 dotspacemacs/init 函数中, 将 dotspacemacs-fullscreen-at-startup 变量设置为 t 即可. 代码如下:</p>
<pre><code>;; If non nil the frame is maximized when Emacs starts up.
;; Takes effect only if `dotspacemacs-fullscreen-at-startup&apos; is nil.
;; (default nil) (Emacs 24.4+ only)
dotspacemacs-maximized-at-startup t
</code></pre><p><a id="orgbe06964"></a></p>
<h3 id="ivy-layer"><a href="#ivy-layer" class="headerlink" title="ivy layer"></a>ivy layer</h3><p>将 ivy 加入 <strong>dotspacemacs-configuration-layers</strong> 列表中. 按下 <strong>CTRL s</strong> 使用 swiper 可以进行搜索.</p>
<p><a id="org08caf77"></a></p>
<h3 id="查看-layer-下的-文档信息"><a href="#查看-layer-下的-文档信息" class="headerlink" title="查看 layer 下的 文档信息"></a>查看 layer 下的 文档信息</h3><p>按下 <strong>SPC h SPC</strong> 即会弹出一个信息窗口, 可以从窗口中选择具体的 layer 或者其他信息进行查看.</p>
<p><a id="org68755ed"></a></p>
<h3 id="删除安装的-package"><a href="#删除安装的-package" class="headerlink" title="删除安装的 package"></a>删除安装的 package</h3><p>只需要将需要删除的 package 名称加入到 <strong>dotspacemacs-excluded-packages</strong> 变量中, 在下一次启动 emacs 时即会删除该 package.<br>示例代码如下:</p>
<pre><code>;; A list of packages and/or extensions that will not be install and loaded.
dotspacemacs-excluded-packages &apos;(vi-tilde-fringe)
</code></pre><p><a id="orgff4594e"></a></p>
<h3 id="安装-package"><a href="#安装-package" class="headerlink" title="安装 package"></a>安装 package</h3><p>在 Spacemacs 中安装 package 时最好不要使用 <strong>package-install</strong>, 因为这样安装的 package 会在下一次启动时被删除.</p>
<p>Spacemacs 提供了一个方式, 你只需将需要安装的 package 加入到 <strong>dotspacemacs-additional-package</strong> 变量中即可,<br>示例代码如下:</p>
<pre><code>;; List of additional packages that will be installed without being
;; wrapped in a layer. If you need some configuration for these
;; packages, then consider creating a layer. You can also put the
;; configuration in `dotspacemacs/user-config&apos;.
dotspacemacs-additional-packages &apos;(youdao-dictionary)
</code></pre><p><a id="org35fee55"></a></p>
<h3 id="配置-customize-group"><a href="#配置-customize-group" class="headerlink" title="配置 customize-group"></a>配置 customize-group</h3><p>如果使用 customize-group 对配置进行了修改, 你可以以下代码将生成的 <strong>custom.el</strong> 配置文件纳入 ~/.spacemacs.d 目录中进行统一管理:</p>
<pre><code>(setq custom-file (expand-file-name &quot;custom.el&quot; dotspacemacs-directory))
(load custom-file &apos;no-error &apos;no-message)
</code></pre><p><a id="orgbf75d92"></a></p>
<h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>只需修改 <strong>dotspacemacs-themes</strong> 变量的值, 将主题加入列表即可. 在列表中靠前的主题会优先使用.<br>示例代码如下:</p>
<pre><code>;; List of themes, the first of the list is loaded when spacemacs starts.
;; Press &lt;SPC&gt; T n to cycle to the next theme in the list (works great
;; with 2 themes variants, one dark and one light)
dotspacemacs-themes &apos;(
                      monokai
                      ;; spacemacs-dark
                      ;; spacemacs-light
                      ;; solarized-light
                      solarized-dark
                      ;; leuven
                      ;; monokai
                      ;; zenburn
                      )
</code></pre><p><a id="orgd5f1894"></a></p>
<h1 id="第十二天-创建你的第一个-Spacemacs-Layer"><a href="#第十二天-创建你的第一个-Spacemacs-Layer" class="headerlink" title="第十二天: 创建你的第一个 Spacemacs Layer"></a>第十二天: 创建你的第一个 Spacemacs Layer</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1mi1vZTI" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTYyODgxNjU0OA==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/qQqpWWjub6A" target="_blank" rel="external">YouTube</a></li>
</ul>
<p>主要内容:</p>
<ol>
<li>如何更新 Spacemacs, 同步官方 develop 分支及注意事项</li>
<li>Layer 的 variables 变量及使用方法</li>
<li>如何创建自己的 Layer</li>
<li>如何定制 modeline</li>
<li>evlified state</li>
</ol>
<p><a id="orgc209da2"></a></p>
<h2 id="如何更新-Spacemacs"><a href="#如何更新-Spacemacs" class="headerlink" title="如何更新 Spacemacs"></a>如何更新 Spacemacs</h2><p>可以通过 git 的方式来更新代码, 假设我们使用的是 develop 分支:</p>
<pre><code>git checkout develop
git fetch upstream
git merge upstream/develop
</code></pre><p>一般来说, 如果你不熟悉 emacs 并且你的 Spacemacs 配置能够正常工作, 则不需要频繁的更新代码, 以避免更新之后配置不能使用.</p>
<p><a id="orgaa8a861"></a></p>
<h2 id="variables-变量"><a href="#variables-变量" class="headerlink" title="variables 变量"></a>variables 变量</h2><p>每一个 layer 都可以配置一些变量, 可以通过 <strong>SPC h SPC</strong> 然后输入 layer 名称, 点击对应的选项即可打开该 layer 的 README.org 文件.<br>然后按下 SPC f j 进入 dired 模式, 选择 config.el 文件打开, 该文件中即定义了该 layer 的变量.</p>
<p>例如 better-default layer 的变量如下:</p>
<pre><code>(defvar better-defaults-move-to-beginning-of-code-first t
  &quot;when t, first stroke of C-a will move the cursor to the beginning of code.
When nil, first stroke will go to the beginning of line.
Subsequent strokes will toggle between beginning of line and beginning of code.&quot;)

(defvar better-defaults-move-to-end-of-code-first nil
  &quot;when t, first stroke of C-e will move the cursor to the end of code (before comments).
When nil, first stroke will go to the end of line (after comments).
Subsequent strokes will toggle between end of line and end of code.&quot;)
</code></pre><p>要配置使用这些变量, 可以在启用 layer 时使用如下的代码:</p>
<pre><code>(better-defaults :variables
                 better-defaults-move-to-end-of-code-first t)
</code></pre><p><a id="org6ead49b"></a></p>
<h2 id="定制-modeline"><a href="#定制-modeline" class="headerlink" title="定制 modeline"></a>定制 modeline</h2><p>在 emacs25.1 中, 该版本的 modeline 和以前版本不同, 可以通过如下方式将 modeline 修改为以前的显示形状:</p>
<p>在 dotspacemacs/user-config 中加入如下代码:</p>
<pre><code>(setq ns-use-srgb-colorspace nil)
</code></pre><p><a id="orgb9f8f67"></a></p>
<h2 id="创建自己的-layer"><a href="#创建自己的-layer" class="headerlink" title="创建自己的 layer"></a>创建自己的 layer</h2><p>假设我们需要创建一个 layer, 名叫 zilongshanren, 并且在 layer 下包含一个名叫 youdao-dictionary 的 package.</p>
<p>首先利用 spacemacs 提供的函数创建 layer. 按下 M-x 并且输入 configuration-layer/create-layer, 然后选择路径 ~/.spacemacs.d,<br>确定创建 README, 然后我们就可以看到 layer 创建成功.</p>
<p>每一个 layer 的结构如下:</p>
<pre><code>[layer_name]
  |__ [local]
  | |__ [package 1]
  | |     ...
  | |__ [package n]
  |-- layers.el
  |__ packages.el
  |__ funcs.el
  |__ config.el
  |__ keybindings.el

[] = directory
</code></pre><p>即每一个 layer 目录下都可以包含 layers.el, packages.el 等文件, 以及一个名叫 local 的目录.</p>
<p>每一个文件的内容描述如下:</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><br><br><br><colgroup><br><col class="org-left"><br><br><col class="org-left"><br></colgroup><br><thead><br><tr><br><th scope="col" class="org-left">文件名</th><br><th scope="col" class="org-left">用处</th><br></tr><br></thead><br><br><tbody><br><tr><br><td class="org-left">layers.el</td><br><td class="org-left">申明一些额外的 layer 依赖</td><br></tr><br><br><br><tr><br><td class="org-left">packages.el</td><br><td class="org-left">一些 layer 使用到的 package 以及相关配置函数</td><br></tr><br><br><br><tr><br><td class="org-left">funcs.el</td><br><td class="org-left">定义一些 layer 层次的函数, 即全局函数</td><br></tr><br><br><br><tr><br><td class="org-left">config.el</td><br><td class="org-left">layer 的配置, 此处定义的配置可以在 .spacemacs 中申明 layer 时进行配置, 也可以定义 emacs 的默认配置</td><br></tr><br><br><br><tr><br><td class="org-left">keybindings.el</td><br><td class="org-left">快捷键配置</td><br></tr><br></tbody><br></table>

<p>现在我们可以把 youdao-dictionary 加入到 layer 中, 编辑 packages.el:</p>
<pre><code>;; 添加 package
(defconst zilongshanren-packages
  &apos;(youdao-dictionary)
  )

;; 初始化 package
;; 可以使用 , d m 快捷键, 然后按下 e 展开宏
(defun zilongshanren/init-youdao-dictionary ()
  (use-package youdao-dictionary
    :defer t
    :init
    (spacemacs/set-leader-keys &quot;oy&quot; &apos;youdao-dictionary-search-at-point+)
    )
  )
</code></pre><p>编辑 config.el 文件:</p>
<pre><code>;; 开启行号显示
(global-linum-mode t)

;; 定义快捷键
(global-set-key (kbd &quot;M-s o&quot;) &apos;occur-dwim)

;; 将 occur 的 buffer 中的光标移动方式修改为 HJKL
(evilified-state-evilify-map occur-mode-map
  :mode occur-mode)
</code></pre><p>编辑 keybindings.el 文件:</p>
<pre><code>;; dwin = do what i mean.
(defun occur-dwim ()
  &quot;Call `occur&apos; with a sane default.&quot;
  (interactive)
  (push (if (region-active-p)
            (buffer-substring-no-properties
             (region-beginning)
             (region-end))
          (let ((sym (thing-at-point &apos;symbol)))
            (when (stringp sym)
              (regexp-quote sym))))
        regexp-history)
  (call-interactively &apos;occur))
</code></pre><p>然后将 zilongshanren 加到 <strong>dotspacemacs-configuration-layers</strong> 变量中, 即可让 layer 配置生效.</p>
<p><a id="orge89fffe"></a></p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>spacemacs 的文档保存在 doc 目录下, 包含有 CONVENTIONS.org, DOCUMENTATION.org 等文档文件, 建议大家多多阅读.</p>
<p><a id="org87c1aae"></a></p>
<h1 id="第十三天-定制你的-Layer"><a href="#第十三天-定制你的-Layer" class="headerlink" title="第十三天: 定制你的 Layer"></a>第十三天: 定制你的 Layer</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1kVroHCj" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTYyOTcyNjk0NA==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/RMofkN3IcKE" target="_blank" rel="external">Youtube</a></li>
</ul>
<p>主要内容:</p>
<ol>
<li>修复上一期视频中 occur-mode 启动的问题</li>
<li>修复 ivy0.8 导致的问题, 同时简单探讨了一下今后如何避免和处理类似的问题</li>
<li>介绍 post-init 和 pre-init 的用法, 介绍了如何定制 spacemacs 的 company-mode</li>
<li>介绍 layers.el 文件, 演示该文件的作用</li>
<li>介绍 layer 的 package 的 location 变量, 演示了如何从 github 获取并安装 package 的方法</li>
</ol>
<p><a id="orgc978b4e"></a></p>
<h2 id="修复上一期视频中的配置问题"><a href="#修复上一期视频中的配置问题" class="headerlink" title="修复上一期视频中的配置问题"></a>修复上一期视频中的配置问题</h2><p>在之前的配置代码中, 如果我们启动 emacs 会出现以下错误:</p>
<pre><code>Symbol&apos;s function definition is void: evilified-state-evilify-map
</code></pre><p>这是因为这个符号在 config.el 中使用的时候还是空的, 我们可以通过以下方式修复, 编辑 config.el 文件, 将以下代码移动到 dotspacemacs/user-config 函数中:</p>
<pre><code>(evilified-state-evilify-map occur-mode-map
  :mode occur-mode)
</code></pre><p><a id="orgebd1104"></a></p>
<h2 id="修复-ivy0-8-的问题"><a href="#修复-ivy0-8-的问题" class="headerlink" title="修复 ivy0.8 的问题"></a>修复 ivy0.8 的问题</h2><p>在 ivy 升级到0.8版本时, 对其中一个API的返回值进行了修改:</p>
<pre><code>(let (res)
  (ivy-with
   &apos;(ivy-read &quot;test: &quot;
              &apos;((&quot;one&quot; . 1) (&quot;three&quot; . 3))
              :action (lambda (x) (setq res x)))
   &quot;t C-m&quot;)
  res)
;; =&gt;
;; (&quot;three&quot; . 3)
</code></pre><p>在之前的版本中, 这个函数的返回值是 3, 在0.8版本中被修改为了一个列表. 如果要修复这个问题, 我们需要在使用返回值的时候加上 cdr, 具体的修改可以查看<a href="https://github.com/syl20bnr/spacemacs/pull/6478" target="_blank" rel="external">fix break API changes for ivy 0.8</a>.</p>
<p><a id="orgbe2ad06"></a></p>
<h2 id="post-init-和-pre-init"><a href="#post-init-和-pre-init" class="headerlink" title="post-init 和 pre-init"></a>post-init 和 pre-init</h2><p>有一些 mode 已经安装, 例如 company-mode 已经被 auto-completion layer 安装, 如果这时我们还想对该 mode 进行一些定制, 那么我们可以这样处理:</p>
<ol>
<li><p>在我们的 layer 中添加这个包</p>
<p>;; 添加 package<br>(defconst zilongshanren-packages<br>  ‘(youdao-dictionary</p>
<pre><code>company  ; 添加 company package
)
</code></pre><p>  )</p>
</li>
<li><p>然后定义一个 post-init 函数</p>
<p>;; 定制 company-mode<br>(defun zilongshanren/post-init-company ()<br>  (setq company-minimum-prefix-length 1)<br>  )</p>
</li>
</ol>
<p>然后重启 emacs 即可以看到定制的效果.</p>
<p>对于 package 的三个函数: pre-init, init, post-init, spacemacs是按照这个顺序来依次调用的.</p>
<p><a id="org20e46c5"></a></p>
<h2 id="location"><a href="#location" class="headerlink" title="location"></a>location</h2><p>在安装 package 时, 我们如果只输入 package 的名字, 那么默认是从 melpa 下载安装的. 如果我们想自定义 package 的安装地址, 那么我们就可以使用 location 变量.</p>
<p><a id="orgfa0c305"></a></p>
<h3 id="自带-package"><a href="#自带-package" class="headerlink" title="自带 package"></a>自带 package</h3><p>例如我们使用一个自带的 occur package:</p>
<pre><code>;; 自定义 package 安装地址
(defconst zilongshanren-packages
  &apos;(youdao-dictionary
    (occur-mode :location built-in)
    )
  )

;; 初始化 occur mode
(defun zilongshanren/init-occur-mode ()
  (evilified-state-evilify-map occur-mode-map
    :mode occur-mmode)
  )
</code></pre><p><a id="org913e852"></a></p>
<h3 id="从-github-安装"><a href="#从-github-安装" class="headerlink" title="从 github 安装"></a>从 github 安装</h3><p>例如我们从 github 安装 gulpjs package:</p>
<pre><code>;; 自定义 package 安装地址
(defconst zilongshanren-packages
  &apos;(youdao-dictionary
    (occur-mode :location built-in)
    (gulpjs :location (recipe :fetcher github :repo &quot;zilongshanren/emacs-gulpjs&quot;))
    )
  )

(defun zilongshanren/init-gulpjs ()
  (use-package gulpjs
    :init)
  )
</code></pre><p>在 emacs 启动时就会从 github 上下载 guiljs package 并安装到本地.</p>
<p><a id="org2f374c9"></a></p>
<h2 id="layers-el"><a href="#layers-el" class="headerlink" title="layers.el"></a>layers.el</h2><p>如果我们需要对某些 layer 中的 package 配置进行大量的重写, 那么我们可以移除这个 layer 的某个 package. 我们可以通过 layers.el 来实现这一点, 例如移除 chinese layer 的 youdao-dictionary package:</p>
<pre><code>(configuration-layer/remove-layer &apos;youdao-dictionary)
</code></pre><p>然后我们可以在自己的 layer 中添加这个 package, 然后对它进行定制.<br>在这种情况下, spacemacs 不会在 chinese layer 中加载 youdao-dictionary 这个 package, 而是在我们的 layer 中加载这个 package, 以实现对 spacemacs 内置的package 的定制.</p>
<p><a id="orga1f8ac7"></a></p>
<h1 id="第十四天-文件和-Buffer-操作"><a href="#第十四天-文件和-Buffer-操作" class="headerlink" title="第十四天: 文件和 Buffer 操作"></a>第十四天: 文件和 Buffer 操作</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1slMRuot" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTY0NjUwMTM5Mg==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://youtu.be/85g3defJP6M" target="_blank" rel="external">Youtube</a></li>
</ul>
<p>主要内容:</p>
<ol>
<li>我的配置和 spacemacs配置的一些不同点</li>
<li>文件相关操作</li>
<li>Buffer 相关操作</li>
<li>Dired</li>
</ol>
<p><a id="org4d6fe04"></a></p>
<h2 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h2><p>从今天的视频开始, 将使用 <a href="https://github.com/zilongshanren/spacemacs-private" target="_blank" rel="external">子龙山人的配置</a> 来讲解视频. 这份配置对 spacemacs 的定制有两个不同点:</p>
<ul>
<li>没有使用官方的 modeline, 而是采用自己定制的</li>
<li>排除掉了大量的作者认为对他没有作用的 package, 因为这些 package 确实不经常使用, 反而可能导致一些 BUG 或者导致 spacemacs 启动或使用过程中变慢</li>
</ul>
<p><a id="org383a09c"></a></p>
<h2 id="文件相关操作"><a href="#文件相关操作" class="headerlink" title="文件相关操作"></a>文件相关操作</h2><ol>
<li><p>SPC p f</p>
<p>在当前的项目中查找文件, 类似于 vim 中的 Ctrl-p. 在作者的配置中, 该快捷键被绑定到了以下函数:</p>
<pre><code>(defun zilongshanren/open-file-with-projectile-or-counsel-git ()
  (interactive)
  (if (zilongshanren/vcs-project-root)
      (counsel-git)
    (if (projectile-project-p)
        (projectile-find-file)
      (ido-find-file))))
</code></pre><p>该函数会针对不同的项目类型使用不同的查找方式:</p>
<ul>
<li>如果是 git 项目, 那么使用 counsel-git 来查找文件, 不使用 projectile 的原因是 counsel-git 更快</li>
<li>如果是 projectile 项目, 即在项目的根目录中存在 .projectile 文件, 那么使用 projectile-find-file 来查找文件</li>
<li>否则使用 ido-fine-file 来查找文件</li>
</ul>
</li>
<li><p>SPC f f</p>
<p>从当前目录开始查找文件. 在作者的配置中同时启用了 ivy-layer 和 helm-layer, 默认使用的是 helm 来查找文件.</p>
</li>
<li><p>SPC f L</p>
<p>使用 helm-locate 来在当前系统中查找文件.</p>
</li>
<li><p>SPC f l</p>
<p>查找文件并使用 literal 的方式来打开文件, 使用 literal 方式打开的文件不会附加编码信息, 例如 utf-8 编码中可能存在的 BOM 头信息, 使用 literal 模式即可以看到 BOM头.</p>
</li>
<li><p>SPC f h</p>
<p>查找文件并使用二进制的方式来打开文件, 可以使用 C-c C-c 回到之前的模式.</p>
</li>
<li><p>SPC f o</p>
<p>使用外部程序打开文件.</p>
</li>
<li><p>SPC f E</p>
<p>使用 sudo 来编辑文件, 当某些文件是只读的时候可以采用这种方式来编辑文件.</p>
</li>
<li><p>SPC f D</p>
<p>删除当前的文件和 buffer.</p>
</li>
<li><p>SPC f j</p>
<p>以当前文件的目录打开 dired buffer.</p>
</li>
<li><p>SPC f r</p>
<p>使用 ivy 打开最近文件列表.</p>
</li>
<li><p>SPC f R</p>
<p>重命名当前文件.</p>
</li>
<li><p>SPC f v</p>
<p>添加 local variables, 可以通过这个功能给项目做一些特殊的设置.<br>例如按下 SPC f v, 然后选择 add-dir-local-variable, 选择 org-mode, 再选择org-highlight-links 变量, 此时 emacs 会在当前文件的目录下生成一个 .dir-locals.el 文件, 内容如下:</p>
<pre><code>;;; Directory Local Variables
;;; For more information see (info &quot;(emacs) Directory Variables&quot;)

((org-mode
  (org-highlight-links)))
</code></pre><p>这个文件中的代码会在当前目录下的所有文件 buffer 中生效.</p>
</li>
<li><p>SPC f y</p>
<p>拷贝当前文件的全路径.</p>
</li>
<li><p>SPC f a d</p>
<p>列出最近访问的目录, 使用命令行工具 fasd 实现.</p>
</li>
<li><p>SPC f C d/u</p>
<p>将当前文件的编码转换为 DOS/UNIX 编码.</p>
</li>
<li><p>SPC f e d</p>
<p>打开 .spacemacs 或 .spacemacs.d/init.el 文件.</p>
</li>
<li><p>SPC f e i</p>
<p>打开 .emacs 或 .emacs.d/init.el 文件.</p>
</li>
<li><p>SPC f e l</p>
<p>打开系统中已经安装的 el 文件.</p>
</li>
<li><p>SPC f c</p>
<p>复制文件.</p>
</li>
<li><p>SPC f b</p>
<p>打开标签.</p>
</li>
<li><p>SPC f s/S</p>
<p>保存当前 buffer 或 所有 buffer.</p>
</li>
</ol>
<p><a id="org32b660b"></a></p>
<h2 id="buffer-相关操作"><a href="#buffer-相关操作" class="headerlink" title="buffer 相关操作"></a>buffer 相关操作</h2><ol>
<li><p>SPC b .</p>
<p>打开 Buffer Selection Transient State, 在该模式下可以进行更多的操作, 由 hydra 提供.</p>
</li>
<li><p>SPC b b</p>
<p>切换到已经打开的 buffer.</p>
</li>
<li><p>SPC b d</p>
<p>关闭一个 buffer.</p>
</li>
<li><p>SPC b f</p>
<p>在 finder 中打开当前文件, 只在 Mac系统下生效.</p>
</li>
<li><p>SPC b B/i</p>
<p>以类似 Dired Mode 的形式打开 buffer 列表, 在这个列表中可以执行和 Dired Mode 类似的操作.</p>
</li>
<li><p>SPC b h</p>
<p>进入 \*spacemacs\* buffer.</p>
</li>
<li><p>SPC b k</p>
<p>使用正则表达式来删除 buffer.</p>
</li>
<li><p>SPC b N</p>
<p>新建一个 buffer.</p>
</li>
<li><p>SPC b m</p>
<p>删除除当前 buffer 外的所有 buffer.</p>
</li>
<li><p>SPC b R</p>
<p>使用 emacs 自动备份的文件恢复文件.</p>
</li>
<li><p>SPC b s</p>
<p>跳转到 scratch buffer.</p>
</li>
<li><p>SPC b w</p>
<p>关闭/打开 buffer 的 read-only.</p>
</li>
<li><p>SPC b Y</p>
<p>复制整个 buffer 的内容.</p>
</li>
<li><p>SPC b P</p>
<p>将剪切板的内容粘贴到整个 buffer.</p>
</li>
<li><p>SPC <tab></tab></p>
<p>在当前 buffer 和上一个打开的 buffer 中进行切换.</p>
</li>
</ol>
<p><a id="org0098104"></a></p>
<h2 id="Dired"><a href="#Dired" class="headerlink" title="Dired"></a>Dired</h2><p>在第四天的内容中已经讲解过 Dired Mode 的操作, 具体可以查看 <a href="https://book.emacs-china.org/#orgheadline22" target="_blank" rel="external">Dired Mode</a>.</p>
<p><a id="orgcb67752"></a></p>
<h1 id="第十五天-layout-windows-和-project-相关"><a href="#第十五天-layout-windows-和-project-相关" class="headerlink" title="第十五天: layout, windows 和 project 相关"></a>第十五天: layout, windows 和 project 相关</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1miMvDji" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTY0NzUxOTI2NA==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://www.youtube.com/watch?v=vt7FQO9HpBU&amp;list=PL-61yFRAEMlXDnsm3VHfrAm4oT6vVylRG&amp;index=8" target="_blank" rel="external">Youtube</a></li>
</ul>
<p>主要内容:</p>
<ol>
<li>Layout 相关操作</li>
<li>Window 相关操作</li>
<li>project 相关操作</li>
</ol>
<p><a id="org8be11d8"></a></p>
<h2 id="Layout-相关操作"><a href="#Layout-相关操作" class="headerlink" title="Layout 相关操作"></a>Layout 相关操作</h2><ol>
<li><p>SPC l L</p>
<p>加载 layout 文件</p>
</li>
<li><p>SPC l l</p>
<p>在 layout 之间切换</p>
</li>
<li><p>SPC l s</p>
<p>将 layout 保存到文件</p>
</li>
<li><p>SPC l <tab></tab></p>
<p>在当前 layout 和上一个 layout 之间切换</p>
</li>
<li><p>SPC l o</p>
<p>配置 layout</p>
</li>
<li><p>SPC l R</p>
<p>重命名 layout</p>
</li>
<li><p>SPC l ?</p>
<p>显示更多的与 layout 相关的命令</p>
</li>
</ol>
<p><a id="orgeb89e22"></a></p>
<h2 id="Window-相关操作"><a href="#Window-相关操作" class="headerlink" title="Window 相关操作"></a>Window 相关操作</h2><ol>
<li><p>SPC w -</p>
<p>上下拆分窗口</p>
</li>
<li><p>SPC w /</p>
<p>左右拆分窗口</p>
</li>
<li><p>SPC w .</p>
<p>显示更多的与 window micro state 的相关的命令</p>
</li>
<li><p>SPC w 2/3</p>
<p>左右显示 2/3 个窗口</p>
</li>
<li><p>SPC w =</p>
<p>将窗口均等分</p>
</li>
<li><p>SPC w b</p>
<p>切换到 minibuffer</p>
</li>
<li><p>SPC w d</p>
<p>删除当前窗口</p>
</li>
<li><p>SPC w h/j/k/l</p>
<p>向 左/下/上/右 移动窗口</p>
</li>
<li><p>SPC w m</p>
<p>最大化显示当前窗口</p>
</li>
<li><p>SPC W H/J/K/L</p>
<p>将当前窗口向 左/下/上/右 移动</p>
</li>
<li><p>SPC w u/U</p>
<p>取消/重置上次操作</p>
</li>
<li><p>SPC w o</p>
<p>切换到其他 frame</p>
</li>
<li><p>SPC w F</p>
<p>创建一个新的 frame</p>
</li>
<li><p>SPC w 1/2/3/4</p>
<p>切换到对应的编号的窗口</p>
</li>
<li><p>SPC w w</p>
<p>依次切换到其他窗口</p>
</li>
<li><p>SPC w W</p>
<p>使用字母标识需要跳转的窗口, 并按下字母进行跳转</p>
</li>
<li><p>SPC t g</p>
<p>将当前显示的窗口与其他窗口进行黄金分割显示</p>
</li>
<li><p>SPC t -</p>
<p>开启/关闭 将光标始终显示在中心行</p>
</li>
</ol>
<p><a id="org0bd2176"></a></p>
<h2 id="project-相关操作"><a href="#project-相关操作" class="headerlink" title="project 相关操作"></a>project 相关操作</h2><ol>
<li><p>SPC p f</p>
<p>在当前 project 中查找并打开文件</p>
</li>
<li><p>SPC p b</p>
<p>在当前 project 中查找打开的 buffer</p>
</li>
<li><p>SPC p p</p>
<p>切换到其他的 project</p>
</li>
<li><p>SPC p l</p>
<p>切换到其他的 project 并创建一个新的 layout</p>
</li>
<li><p>find-file-in-project</p>
<p>这是一个插件, 支持全平台. 目前绑定在 SUPER f 快捷键上.</p>
</li>
</ol>
<p><a id="orgbbaa39c"></a></p>
<h2 id="更多内容"><a href="#更多内容" class="headerlink" title="更多内容"></a>更多内容</h2><p>对 Spacemacs 中的快捷键操作就介绍到这里, 更多的快捷键介绍可以到 <a href="https://www.youtube.com/playlist?list=PLrJ2YN5y27KLhd3yNs2dR8_inqtEiEweE" target="_blank" rel="external">Spacemacs ABC</a> 去查看.</p>
<p><a id="orgc3b50c4"></a></p>
<h1 id="第十六天-使用-ctags-和-company-etags"><a href="#第十六天-使用-ctags-和-company-etags" class="headerlink" title="第十六天: 使用 ctags 和 company-etags"></a>第十六天: 使用 ctags 和 company-etags</h1><p>视频地址如下:</p>
<ul>
<li><a href="http://pan.baidu.com/s/1hr4CYBq" target="_blank" rel="external">百度网盘</a></li>
<li><a href="http://v.youku.com/v_show/id_XMTY1Njc1MjUxNg==.html" target="_blank" rel="external">优酷</a></li>
<li><a href="https://www.youtube.com/watch?v=afWk8DBOY68" target="_blank" rel="external">Youtube</a></li>
</ul>
<p>主要内容:</p>
<p>这期视频主要介绍 ctags 和 company-mode 的使用.</p>
<p><a id="orgbe8e1c7"></a></p>
<h2 id="为什么使用-ctags"><a href="#为什么使用-ctags" class="headerlink" title="为什么使用 ctags"></a>为什么使用 ctags</h2><p>ctags 是一个开源的, 可以方便的对大型代码库进行索引的软件, 在使用 ctags 生成 tag 之后就可以非常方便的在这些 tag 中进行跳转.<br>因为有些编程语言, 例如 javascript 或者 lua, 它们不能进行精确的语义补全, 在有 ctags 进行索引补全的情况下也可以方便编写代码.</p>
<p>在之前也介绍过 term-mode, 也可以做到一些语义补全. 但是它也有一些缺点:</p>
<ol>
<li>配置方式复杂, 对于比较大的项目的配置比较有难度</li>
<li>有些时候不能得到想要的补全结果</li>
</ol>
<p>之前作者使用 YCMD 来对 C/C++ 代码进行补全, 但是它不太稳定, 现在已经切换为 ctags 来进行补全, 对于调试和 profile 会使用 IDE 进行操作.</p>
<p><a id="orgafde45b"></a></p>
<h2 id="如何配置-ctags"><a href="#如何配置-ctags" class="headerlink" title="如何配置 ctags"></a>如何配置 ctags</h2><p>首先新建一个 testJs-ctags 目录, 然后在该目录下新建 a.js 以及 b.js 两个文件:</p>
<pre><code>mkdir testJs-ctags
cd testJs-ctags
touch a.js
touch b.js
</code></pre><p>然后编辑 a.js 的内容如下:</p>
<pre><code>var func1 = function () {
    console.log(&quot;func1&quot;);
};

var func2 = function () {
};
</code></pre><p>然后在 b.js 中的补全中可以显示处 func1 和 func2 的补全提示的. 为了更方便的讲解之后的内容, 我们可以查看使用的补全的后端: 输入 M-x, diminish-undo, 选择 company-mode, 这样在 modeline 就可以看到 company-mode 的具体信息.</p>
<p>再次输入 fun 等待弹出补全提示, 在补全选项中上下移动, 可以看到使用的补全后端包括 dabbrev-code 和 etags 等, 如果我们关闭 a.js 的 buffer, 就不会出现 func1 和 func2 的补全选项.</p>
<p>在之前的操作中, 我们并没有生成 ctags, 为什么也能使用 ctags 补全呢? 我们可以使用 SPC h d v, 然后输出 tags-table-list 来查看该变量的值, 当前的值是指向作者 cocos目录下的 TAGS 文件.<br>使用以下代码清空该值:</p>
<pre><code>(setq-default tags-table-list nil)
</code></pre><p>然后再次尝试补全, 这时就不会使用 ctags 补全了.</p>
<p>那么如何生成 ctags 补全的文件呢? 使用以下命令即可:</p>
<pre><code>cd testJs-ctags
ctags -e a.js
# 针对目录
# ctags -eR foldername
</code></pre><p>company-etags 在进行补全的时候, 会从变量 tags-table-list 值的文件列表中去查找 tags, 而且 tags 是不区分语言的.</p>
<p>如果需要手动加载 TAGS 文件, 那么可以调用 visit-tags-table 命令. 而在打开一个文件时, ctags 会从文件所在的目录进行查找, 一直到根目录, 加载所找到的 TAGS 文件.</p>
<p><a id="org6e89a36"></a></p>
<h2 id="如何高效的使用-ctags"><a href="#如何高效的使用-ctags" class="headerlink" title="如何高效的使用 ctags"></a>如何高效的使用 ctags</h2><p><a id="org8794417"></a></p>
<h3 id="自动重新生成-TAGS-文件"><a href="#自动重新生成-TAGS-文件" class="headerlink" title="自动重新生成 TAGS 文件"></a>自动重新生成 TAGS 文件</h3><p>在使用 ctags 的过程中, 如果文件的内容被改变, 那么需要重新生成 TAGS 文件, 以便 ctags 的补全结果更精确. 作者实现了一个函数来自动加载必须的 TAGS 文件:</p>
<pre><code>(defun my-setup-develop-environment ()
  (interactive)
  (when (my-project-name-contains-substring &quot;guanghui&quot;)
    (cond
     ((my-project-name-contains-substring &quot;cocos2d-x&quot;)
      ;; C++ project don&apos;t need html tags
      (setq tags-table-list (list (my-create-tags-if-needed &quot;~/cocos2d-x/cocos&quot;))))
     ((my-project-name-contains-substring &quot;Github/fireball&quot;)
      (message &quot;load tags for fireball engine repo...&quot;)
      ;; html project donot need C++ tags
      (setq tags-table-list (list (my-create-tags-if-needed &quot;~/Github/fireball/engine/cocos2d&quot;)))))))
</code></pre><p>有另外一个工具函数, 当保存文件时会自动的重新生成 TAGS:</p>
<pre><code>(defun my-auto-update-tags-when-save (prefix)
  (interactive &quot;P&quot;)
  (cond
   ((not my-tags-updated-time)
    (setq my-tags-updated-time (current-time)))

   ((and (not prefix)
         (&lt; (- (float-time (current-time)) (float-time my-tags-updated-time)) 300))
    ;; &lt; 300 seconds
    (message &quot;no need to update the tags&quot;)
    )
   (t
    (setq my-tags-updated-time (current-time))
    (my-update-tags)
    (message &quot;updated tags after %d seconds.&quot; (- (float-time (current-time)) (float-time my-tags-updated-time))))))
</code></pre><p>可以将 my-auto-udpate-tags-when-save 函数加入 after-save-hook 中, 或者绑定到快捷键上.</p>
<p><a id="orgd708a2d"></a></p>
<h3 id="配置规则来生成更多的-TAGS"><a href="#配置规则来生成更多的-TAGS" class="headerlink" title="配置规则来生成更多的 TAGS"></a>配置规则来生成更多的 TAGS</h3><p>ctags 自身也有一个配置文件, 可以在该文件中定义规则来更好的生成 TAGS, 一个配置文件的示例如下:</p>
<pre><code>--exclude=*.svn*
--exclude=*.git*
--exclude=*tmp*
--exclude=.#*
--tag-relative=yes
--recurse=yes

--langdef=js

--regex-js=/[ \t.]([A-Z][A-Z0-9._$]+)[ \t]*[=:][ \t]*([0-9&quot;&apos;\[\{]|null)/\1/n,constant/

--langdef=css
--langmap=css:.css
--regex-css=/^[ \t]*\.([A-Za-z0-9_-]+)/.\1/c,class,classes/
</code></pre><p>在配置文件中可以使用 &#x2013;exclude 来忽略文件或路径, 使用 &#x2013;langdef 来定义哪些文件属于 js 文件, 使用 &#x2013;regex-js 来定义 TAGS 生成时的匹配规则.<br>这些匹配规则中可以使用正则表达式来提取内容生成 TAGS.</p>
<p><a id="org2d1e771"></a></p>
<h3 id="使用-etags-select-来浏览项目"><a href="#使用-etags-select-来浏览项目" class="headerlink" title="使用 etags-select 来浏览项目"></a>使用 etags-select 来浏览项目</h3><p>在有 TAGS 之后, 可以使用 ctags 来方便的浏览文件内容.<br>例如在某个函数名上点击 [, g], 然后选择 etags-select-find-tag-at-point, 这时会把所有相关的内容列出到 buffer 中, 然后可以选择想要跳转的位置跳转过去.</p>
<p><a id="orgd18a4d2"></a></p>
<h2 id="最后的思考"><a href="#最后的思考" class="headerlink" title="最后的思考"></a>最后的思考</h2><p>company-etags 不能对所有的 mode 进行补全, 例如在 org-mode 中默认是不使用 company-etags 的.<br>因为在 company-etags.el 文件中有如下的代码:</p>
<pre><code>(defvar company-etags-modes &apos;(prog-mode c-mode objc-mode c++-mode java-mode
                                        jde-mode pascal-mode perl-mode python-mode))
</code></pre><p>在该变量中定义了可以使用 company-etags 的 mode, 将 org-mode 加入该变量的值中即可在 org-mode 使用 company-etags 进行补全.</p>
<p>ctags 支持上百种语言, 学会使用 ctags 能够提交效率.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; class=&quot;headerlink&quot; title=&quot;Table of Contents&quot;&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;&lt;p&gt;&lt;code&gt;转载自子
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Atom无法安装插件的解决方案</title>
    <link href="http://kingle.online/2018/04/16/Atom%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://kingle.online/2018/04/16/Atom无法安装插件的解决方案/</id>
    <published>2018-04-15T17:20:30.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知 Atom安装插件经常失败，全局SS也没什么用。终于找到了两个可靠的方法，分享一下。</p>
<h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p>以Linter为例，到<a href="https://atom.io/packages" target="_blank" rel="external">Atom官方插件库</a>中搜索出Linter，点击<a href="https://atom.io/packages/linter" target="_blank" rel="external">插件详情页</a>中的Repo，进入该插件的<a href="https://github.com/steelbrain/linter" target="_blank" rel="external">Github仓库</a>，clone该项目到你的Atom插件目录（Win： C:\Users\你的用户名.atom\packages，Mac： ~/.atom/packages），然后cd到该插件目录下，执行 npm install，安装完成。</p>
<p>这也是网上比较常见的手动安装插件的做法，但是实际安装完后经常出现再次打开Atom时崩溃的现象，建议尝试第二种方式。</p>
<h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>切换到Atom安装目录下（Win： <code>C:\Users\你的用户名\.atom</code>，Mac： <code>~/.atom</code>），编辑<code>.atomrc</code>文件（如果没有就新建一个）。<br>将该文件内容改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">registry = https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">strict-ssl = <span class="literal">false</span></div><div class="line">http_proxy = socks5://127.0.0.1:1080</div><div class="line">https_proxy = socks5://127.0.0.1:1080</div></pre></td></tr></table></figure></p>
<p>将http_proxy和https_proxy修改为你自己的代理。<br>然后再去Atom中正常安装（File-Setting-Install）即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知 Atom安装插件经常失败，全局SS也没什么用。终于找到了两个可靠的方法，分享一下。&lt;/p&gt;
&lt;h2 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; class=&quot;headerlink&quot; title=&quot;第一种&quot;&gt;&lt;/a&gt;第一种&lt;/h2&gt;&lt;p&gt;以Linter为例，到&lt;
    
    </summary>
    
    
      <category term="atom" scheme="http://kingle.online/tags/atom/"/>
    
      <category term="插件" scheme="http://kingle.online/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式教程</title>
    <link href="http://kingle.online/2018/03/30/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%95%99%E7%A8%8B/"/>
    <id>http://kingle.online/2018/03/30/正则表达式教程/</id>
    <published>2018-03-30T15:00:18.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见匹配模式"><a href="#常见匹配模式" class="headerlink" title="常见匹配模式"></a>常见匹配模式</h2><table>
<thead>
<tr>
<th>模式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>\w</td>
<td>匹配字母数字及下划线</td>
</tr>
<tr>
<td>\W</td>
<td>匹配非字母数字下划线</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任意空白字符，等价于 [\t\n\r\f].</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意非空字符</td>
</tr>
<tr>
<td>\d</td>
<td>匹配任意数字，等价于 [0-9]</td>
</tr>
<tr>
<td>\D</td>
<td>匹配任意非数字</td>
</tr>
<tr>
<td>\A</td>
<td>匹配字符串开始</td>
</tr>
<tr>
<td>\Z</td>
<td>匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串</td>
</tr>
<tr>
<td>\z</td>
<td>匹配字符串结束</td>
</tr>
<tr>
<td>\G</td>
<td>匹配最后匹配完成的位置</td>
</tr>
<tr>
<td>\n</td>
<td>匹配一个换行符</td>
</tr>
<tr>
<td>\t</td>
<td>匹配一个制表符</td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串的开头</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的末尾。</td>
</tr>
<tr>
<td>.</td>
<td>匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</td>
</tr>
<tr>
<td>[…]</td>
<td>用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’</td>
</tr>
<tr>
<td>[^…]</td>
<td>不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</td>
</tr>
<tr>
<td>*</td>
<td>匹配0个或多个的表达式。</td>
</tr>
<tr>
<td>+</td>
<td>匹配1个或多个的表达式。</td>
</tr>
<tr>
<td>?</td>
<td>匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td>
</tr>
<tr>
<td>{n}</td>
<td>精确匹配n个前面表达式。</td>
</tr>
<tr>
<td>{n, m}</td>
<td>匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td>
</tr>
<tr>
<td>a&#124;b</td>
<td>匹配a或b</td>
</tr>
<tr>
<td>( )</td>
<td>匹配括号内的表达式，也表示一个组</td>
</tr>
</tbody>
</table>
<h2 id="re-match"><a href="#re-match" class="headerlink" title="re.match"></a>re.match</h2><p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。<br>re.match(pattern, string, flags=0)</p>
<h3 id="最常规的匹配"><a href="#最常规的匹配" class="headerlink" title="最常规的匹配"></a>最常规的匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></div><div class="line">print(len(content))</div><div class="line">result = re.match(<span class="string">'^Hello\s\d\d\d\s\d&#123;4&#125;\s\w&#123;10&#125;.*Demo$'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group())</div><div class="line">print(result.span())</div></pre></td></tr></table></figure>
<pre><code>41
&lt;_sre.SRE_Match object; span=(0, 41), match=&apos;Hello 123 4567 World_This is a Regex Demo&apos;&gt;
Hello 123 4567 World_This is a Regex Demo
(0, 41)
</code></pre><h3 id="泛匹配"><a href="#泛匹配" class="headerlink" title="泛匹配"></a>泛匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></div><div class="line">result = re.match(<span class="string">'^Hello.*Demo$'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group())</div><div class="line">print(result.span())</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 41), match=&apos;Hello 123 4567 World_This is a Regex Demo&apos;&gt;
Hello 123 4567 World_This is a Regex Demo
(0, 41)
</code></pre><h3 id="匹配目标"><a href="#匹配目标" class="headerlink" title="匹配目标"></a>匹配目标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></div><div class="line">result = re.match(<span class="string">'^Hello\s(\d+)\sWorld.*Demo$'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group(<span class="number">1</span>))</div><div class="line">print(result.span())</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&apos;Hello 1234567 World_This is a Regex Demo&apos;&gt;
1234567
(0, 40)
</code></pre><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></div><div class="line">result = re.match(<span class="string">'^He.*(\d+).*Demo$'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group(<span class="number">1</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&apos;Hello 1234567 World_This is a Regex Demo&apos;&gt;
7
</code></pre><h3 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></div><div class="line">result = re.match(<span class="string">'^He.*?(\d+).*Demo$'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group(<span class="number">1</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&apos;Hello 1234567 World_This is a Regex Demo&apos;&gt;
1234567
</code></pre><h3 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'''Hello 1234567 World_This</span></div><div class="line">is a Regex Demo</div><div class="line">'''</div><div class="line">result = re.match(<span class="string">'^He.*?(\d+).*?Demo$'</span>, content, re.S)</div><div class="line">print(result.group(<span class="number">1</span>))</div></pre></td></tr></table></figure>
<pre><code>1234567
</code></pre><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'price is $5.00'</span></div><div class="line">result = re.match(<span class="string">'price is $5.00'</span>, content)</div><div class="line">print(result)</div></pre></td></tr></table></figure>
<pre><code>None
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'price is $5.00'</span></div><div class="line">result = re.match(<span class="string">'price is \$5\.00'</span>, content)</div><div class="line">print(result)</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;price is $5.00&apos;&gt;
</code></pre><p>总结：尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re.S</p>
<h2 id="re-search"><a href="#re-search" class="headerlink" title="re.search"></a>re.search</h2><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></div><div class="line">result = re.match(<span class="string">'Hello.*?(\d+).*?Demo'</span>, content)</div><div class="line">print(result)</div></pre></td></tr></table></figure>
<pre><code>None
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></div><div class="line">result = re.search(<span class="string">'Hello.*?(\d+).*?Demo'</span>, content)</div><div class="line">print(result)</div><div class="line">print(result.group(<span class="number">1</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(13, 53), match=&apos;Hello 1234567 World_This is a Regex Demo&apos;&gt;
1234567
</code></pre><p>总结：为匹配方便，能用search就不用match</p>
<h3 id="匹配演练"><a href="#匹配演练" class="headerlink" title="匹配演练"></a>匹配演练</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;&lt;i class="fa fa-user"&gt;&lt;/i&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">result = re.search(<span class="string">'&lt;li.*?active.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</div><div class="line"><span class="keyword">if</span> result:</div><div class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</div></pre></td></tr></table></figure>
<pre><code>齐秦 往事随风
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">result = re.search(<span class="string">'&lt;li.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</div><div class="line"><span class="keyword">if</span> result:</div><div class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</div></pre></td></tr></table></figure>
<pre><code>任贤齐 沧海一声笑
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">result = re.search(<span class="string">'&lt;li.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html)</div><div class="line"><span class="keyword">if</span> result:</div><div class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</div></pre></td></tr></table></figure>
<pre><code>beyond 光辉岁月
</code></pre><h2 id="re-findall"><a href="#re-findall" class="headerlink" title="re.findall"></a>re.findall</h2><p>搜索字符串，以列表形式返回全部能匹配的子串。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">results = re.findall(<span class="string">'&lt;li.*?href="(.*?)".*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</div><div class="line">print(results)</div><div class="line">print(type(results))</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</div><div class="line">    print(result)</div><div class="line">    print(result[<span class="number">0</span>], result[<span class="number">1</span>], result[<span class="number">2</span>])</div></pre></td></tr></table></figure>
<pre><code>[(&apos;/2.mp3&apos;, &apos;任贤齐&apos;, &apos;沧海一声笑&apos;), (&apos;/3.mp3&apos;, &apos;齐秦&apos;, &apos;往事随风&apos;), (&apos;/4.mp3&apos;, &apos;beyond&apos;, &apos;光辉岁月&apos;), (&apos;/5.mp3&apos;, &apos;陈慧琳&apos;, &apos;记事本&apos;), (&apos;/6.mp3&apos;, &apos;邓丽君&apos;, &apos;但愿人长久&apos;)]
&lt;class &apos;list&apos;&gt;
(&apos;/2.mp3&apos;, &apos;任贤齐&apos;, &apos;沧海一声笑&apos;)
/2.mp3 任贤齐 沧海一声笑
(&apos;/3.mp3&apos;, &apos;齐秦&apos;, &apos;往事随风&apos;)
/3.mp3 齐秦 往事随风
(&apos;/4.mp3&apos;, &apos;beyond&apos;, &apos;光辉岁月&apos;)
/4.mp3 beyond 光辉岁月
(&apos;/5.mp3&apos;, &apos;陈慧琳&apos;, &apos;记事本&apos;)
/5.mp3 陈慧琳 记事本
(&apos;/6.mp3&apos;, &apos;邓丽君&apos;, &apos;但愿人长久&apos;)
/6.mp3 邓丽君 但愿人长久
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">results = re.findall(<span class="string">'&lt;li.*?&gt;\s*?(&lt;a.*?&gt;)?(\w+)(&lt;/a&gt;)?\s*?&lt;/li&gt;'</span>, html, re.S)</div><div class="line">print(results)</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</div><div class="line">    print(result[<span class="number">1</span>])</div></pre></td></tr></table></figure>
<pre><code>[(&apos;&apos;, &apos;一路上有你&apos;, &apos;&apos;), (&apos;&lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;&apos;, &apos;沧海一声笑&apos;, &apos;&lt;/a&gt;&apos;), (&apos;&lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;&apos;, &apos;往事随风&apos;, &apos;&lt;/a&gt;&apos;), (&apos;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;&apos;, &apos;光辉岁月&apos;, &apos;&lt;/a&gt;&apos;), (&apos;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;&apos;, &apos;记事本&apos;, &apos;&lt;/a&gt;&apos;), (&apos;&lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;&apos;, &apos;但愿人长久&apos;, &apos;&lt;/a&gt;&apos;)]
一路上有你
沧海一声笑
往事随风
光辉岁月
记事本
但愿人长久
</code></pre><h3 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub"></a>re.sub</h3><p>替换字符串中每一个匹配的子串后返回替换后的字符串。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></div><div class="line">content = re.sub(<span class="string">'\d+'</span>, <span class="string">''</span>, content)</div><div class="line">print(content)</div></pre></td></tr></table></figure>
<pre><code>Extra stings Hello  World_This is a Regex Demo Extra stings
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></div><div class="line">content = re.sub(<span class="string">'\d+'</span>, <span class="string">'Replacement'</span>, content)</div><div class="line">print(content)</div></pre></td></tr></table></figure>
<pre><code>Extra stings Hello Replacement World_This is a Regex Demo Extra stings
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></div><div class="line">content = re.sub(<span class="string">'(\d+)'</span>, <span class="string">r'\1 8910'</span>, content)</div><div class="line">print(content)</div></pre></td></tr></table></figure>
<pre><code>Extra stings Hello 1234567 8910 World_This is a Regex Demo Extra stings
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></div><div class="line">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</div><div class="line">    &lt;p class="introduction"&gt;</div><div class="line">        经典老歌列表</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;ul id="list" class="list-group"&gt;</div><div class="line">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</div><div class="line">        &lt;li data-view="7"&gt;</div><div class="line">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="4" class="active"&gt;</div><div class="line">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</div><div class="line">        &lt;li data-view="5"&gt;</div><div class="line">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</div><div class="line">        &lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;'''</div><div class="line">html = re.sub(<span class="string">'&lt;a.*?&gt;|&lt;/a&gt;'</span>, <span class="string">''</span>, html)</div><div class="line">print(html)</div><div class="line">results = re.findall(<span class="string">'&lt;li.*?&gt;(.*?)&lt;/li&gt;'</span>, html, re.S)</div><div class="line">print(results)</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</div><div class="line">    print(result.strip())</div></pre></td></tr></table></figure>
<pre><code>&lt;div id=&quot;songs-list&quot;&gt;
    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;
    &lt;p class=&quot;introduction&quot;&gt;
        经典老歌列表
    &lt;/p&gt;
    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;
        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;
        &lt;li data-view=&quot;7&quot;&gt;
            沧海一声笑
        &lt;/li&gt;
        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;
            往事随风
        &lt;/li&gt;
        &lt;li data-view=&quot;6&quot;&gt;光辉岁月&lt;/li&gt;
        &lt;li data-view=&quot;5&quot;&gt;记事本&lt;/li&gt;
        &lt;li data-view=&quot;5&quot;&gt;
            但愿人长久
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
[&apos;一路上有你&apos;, &apos;\n            沧海一声笑\n        &apos;, &apos;\n            往事随风\n        &apos;, &apos;光辉岁月&apos;, &apos;记事本&apos;, &apos;\n            但愿人长久\n        &apos;]
一路上有你
沧海一声笑
往事随风
光辉岁月
记事本
但愿人长久
</code></pre><h2 id="re-compile"><a href="#re-compile" class="headerlink" title="re.compile"></a>re.compile</h2><p>将正则字符串编译成正则表达式对象</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">将一个正则表达式串编译成正则对象，以便于复用该匹配模式</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">content = <span class="string">'''Hello 1234567 World_This</span></div><div class="line">is a Regex Demo'''</div><div class="line">pattern = re.compile(<span class="string">'Hello.*Demo'</span>, re.S)</div><div class="line">result = re.match(pattern, content)</div><div class="line"><span class="comment">#result = re.match('Hello.*Demo', content, re.S)</span></div><div class="line">print(result)</div></pre></td></tr></table></figure>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&apos;Hello 1234567 World_This\nis a Regex Demo&apos;&gt;
</code></pre><h2 id="实战练习"><a href="#实战练习" class="headerlink" title="实战练习"></a>实战练习</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">content = requests.get(<span class="string">'https://book.douban.com/'</span>).text</div><div class="line">pattern = re.compile(<span class="string">'&lt;li.*?cover.*?href="(.*?)".*?title="(.*?)".*?more-meta.*?author"&gt;(.*?)&lt;/span&gt;.*?year"&gt;(.*?)&lt;/span&gt;.*?&lt;/li&gt;'</span>, re.S)</div><div class="line">results = re.findall(pattern, content)</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</div><div class="line">    url, name, author, date = result</div><div class="line">    author = re.sub(<span class="string">'\s'</span>, <span class="string">''</span>, author)</div><div class="line">    date = re.sub(<span class="string">'\s'</span>, <span class="string">''</span>, date)</div><div class="line">    print(url, name, author, date)</div></pre></td></tr></table></figure>
<pre><code>https://book.douban.com/subject/26925834/?icn=index-editionrecommend 别走出这一步 [英]S.J.沃森 2017-1
https://book.douban.com/subject/26953532/?icn=index-editionrecommend 白先勇细说红楼梦 白先勇 2017-2-1
https://book.douban.com/subject/26959159/?icn=index-editionrecommend 岁月凶猛 冯仑 2017-2
https://book.douban.com/subject/26949210/?icn=index-editionrecommend 如果没有今天，明天会不会有昨天？ [瑞士]伊夫·博萨尔特（YvesBossart） 2017-1
https://book.douban.com/subject/27001447/?icn=index-editionrecommend 人类这100年 阿夏 2017-2
https://book.douban.com/subject/26864566/?icn=index-latestbook-subject 眼泪的化学 [澳]彼得·凯里 2017-2
https://book.douban.com/subject/26991064/?icn=index-latestbook-subject 青年斯大林 [英]西蒙·蒙蒂菲奥里 2017-3
https://book.douban.com/subject/26938056/?icn=index-latestbook-subject 带艾伯特回家 [美]霍默·希卡姆 2017-3
https://book.douban.com/subject/26954757/?icn=index-latestbook-subject 乳房 [美]弗洛伦斯·威廉姆斯 2017-2
https://book.douban.com/subject/26956479/?icn=index-latestbook-subject 草原动物园 马伯庸 2017-3
https://book.douban.com/subject/26956018/?icn=index-latestbook-subject 贩卖音乐 [美]大卫·伊斯曼 2017-3-1
https://book.douban.com/subject/26703649/?icn=index-latestbook-subject 被占的宅子 [阿根廷]胡利奥·科塔萨尔 2017-3
https://book.douban.com/subject/26578402/?icn=index-latestbook-subject 信仰与观看 [法]罗兰·雷希特(RolandRecht) 2017-2-17
https://book.douban.com/subject/26939171/?icn=index-latestbook-subject 妹妹的坟墓 [美]罗伯特·杜格尼(RobertDugoni) 2017-3-1
https://book.douban.com/subject/26972465/?icn=index-latestbook-subject 全栈市场人 Lydia 2017-2-1
https://book.douban.com/subject/26986928/?icn=index-latestbook-subject 终极X战警2 [英]马克·米勒&amp;nbsp;/&amp;nbsp;[美]亚当·库伯特 2017-3-15
https://book.douban.com/subject/26948144/?icn=index-latestbook-subject 格调（修订第3版） [美]保罗·福塞尔（PaulFussell） 2017-2
https://book.douban.com/subject/26945792/?icn=index-latestbook-subject 原谅石 [美]洛里·斯皮尔曼 2017-2
https://book.douban.com/subject/26974207/?icn=index-latestbook-subject 庇护二世闻见录 [意]皮科洛米尼 2017-2
https://book.douban.com/subject/26983143/?icn=index-latestbook-subject 遇见野兔的那一年 [芬]阿托·帕西林纳 2017-3-1
https://book.douban.com/subject/26976429/?icn=index-latestbook-subject 鲍勃·迪伦：诗人之歌 [法]让-多米尼克·布里埃 2017-4
https://book.douban.com/subject/26962860/?icn=index-latestbook-subject 牙医谋杀案 [英]阿加莎·克里斯蒂 2017-3
https://book.douban.com/subject/26923022/?icn=index-latestbook-subject 石挥谈艺录：把生命交给舞台 石挥 2017-2
https://book.douban.com/subject/26897190/?icn=index-latestbook-subject 理想 [美]安·兰德 2017-2
https://book.douban.com/subject/26985981/?icn=index-latestbook-subject 青苔不会消失 袁凌 2017-4
https://book.douban.com/subject/26984949/?icn=index-latestbook-subject 地下铁道 [美]科尔森·怀特黑德（ColsonWhitehead） 2017-3
https://book.douban.com/subject/26944012/?icn=index-latestbook-subject 极简进步史 [英]罗纳德·赖特 2017-4-1
https://book.douban.com/subject/26969002/?icn=index-latestbook-subject 驻马店伤心故事集 郑在欢 2017-2
https://book.douban.com/subject/26854223/?icn=index-latestbook-subject 致薇拉 [美]弗拉基米尔·纳博科夫 2017-3
https://book.douban.com/subject/26841616/?icn=index-latestbook-subject 北方档案 [法]玛格丽特·尤瑟纳尔 2017-2
https://book.douban.com/subject/26980391/?icn=index-latestbook-subject 食帖15：便当灵感集 林江 2017-2
https://book.douban.com/subject/26958882/?icn=index-latestbook-subject 生火 [法]克里斯多夫·夏布特（ChristopheChabouté）编绘 2017-3
https://book.douban.com/subject/26989163/?icn=index-latestbook-subject 文明之光（第四册） 吴军 2017-3-1
https://book.douban.com/subject/26878906/?icn=index-latestbook-subject 公牛山 [美]布赖恩·帕诺威奇 2017-2
https://book.douban.com/subject/26989534/?icn=index-latestbook-subject 几乎消失的偷闲艺术 [加拿大]达尼·拉费里埃 2017-4
https://book.douban.com/subject/26939973/?icn=index-latestbook-subject 散步去 [日]谷口治郎 2017-3
https://book.douban.com/subject/26865333/?icn=index-latestbook-subject 中国1945 [美]理查德·伯恩斯坦(RichardBernstein) 2017-3-1
https://book.douban.com/subject/26989242/?icn=index-latestbook-subject 有匪2：离恨楼 Priest 2017-3
https://book.douban.com/subject/26985790/?icn=index-latestbook-subject 女人、火与危险事物 [美]乔治·莱考夫 2017-3
https://book.douban.com/subject/26972277/?icn=index-latestbook-subject 寻找时间的人 [爱尔兰]凯特·汤普森 2017-3
https://www.douban.com/note/610758170/ 白先勇细说红楼梦【全二册】 白先勇 2017-2-1
https://read.douban.com/ebook/31540864/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 奇爱博士 [英]彼得·乔治 2016-8-1
https://read.douban.com/ebook/31433872/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 在时光中盛开的女子 李筱懿 2017-3
https://read.douban.com/ebook/31178635/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 如何高效记忆（原书第2版） [美]肯尼思•希格比（KennethL.Higbee） 2017-3-5
https://read.douban.com/ebook/31358183/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 愿无岁月可回头 回忆专用小马甲 2016-9
https://read.douban.com/ebook/31341636/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 走神的艺术与科学 [新西兰]迈克尔·C.科尔巴里斯 2017-3-1
https://read.douban.com/ebook/27621094/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 神秘的量子生命 [英]吉姆•艾尔－哈利利/约翰乔•麦克法登 2016-8
https://read.douban.com/ebook/31221966/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 寻找时间的人 [爱尔兰]凯特·汤普森 2017-3
https://read.douban.com/ebook/31481323/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 山之四季 [日]高村光太郎 2017-1
https://read.douban.com/ebook/31154855/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 东北游记 [美]迈克尔·麦尔 2017-1
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常见匹配模式&quot;&gt;&lt;a href=&quot;#常见匹配模式&quot; class=&quot;headerlink&quot; title=&quot;常见匹配模式&quot;&gt;&lt;/a&gt;常见匹配模式&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thea
    
    </summary>
    
    
      <category term="regex" scheme="http://kingle.online/tags/regex/"/>
    
      <category term="正则表达式" scheme="http://kingle.online/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>BeautifulSoup库详解</title>
    <link href="http://kingle.online/2018/03/25/BeautifulSoup%E5%BA%93%E8%AF%A6%E8%A7%A3/"/>
    <id>http://kingle.online/2018/03/25/BeautifulSoup库详解/</id>
    <published>2018-03-24T17:24:05.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h1><h2 id="解析库"><a href="#解析库" class="headerlink" title="解析库"></a>解析库</h2><table>
<thead>
<tr>
<th>解析器</th>
<th>使用方法</th>
<th>优势</th>
<th>劣势</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python标准库</td>
<td>BeautifulSoup(markup, “html.parser”)</td>
<td>Python的内置标准库、执行速度适中 、文档容错能力强</td>
<td>Python 2.7.3 or 3.2.2)前的版本中文容错能力差</td>
</tr>
<tr>
<td>lxml HTML 解析器</td>
<td>BeautifulSoup(markup, “lxml”)</td>
<td>速度快、文档容错能力强</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>lxml XML 解析器</td>
<td>BeautifulSoup(markup, “xml”)</td>
<td>速度快、唯一支持XML的解析器</td>
<td>需要安装C语言库</td>
</tr>
<tr>
<td>html5lib</td>
<td>BeautifulSoup(markup, “html5lib”)</td>
<td>最好的容错性、以浏览器的方式解析文档、生成HTML5格式的文档</td>
<td>速度慢、不依赖外部扩展</td>
</tr>
</tbody>
</table>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.prettify())</div><div class="line">print(soup.title.string)</div></pre></td></tr></table></figure>
<pre><code>&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;
   The Dormouse&apos;s story
  &lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;
   &lt;b&gt;
    The Dormouse&apos;s story
   &lt;/b&gt;
  &lt;/p&gt;
  &lt;p class=&quot;story&quot;&gt;
   Once upon a time there were three little sisters; and their names were
   &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
    &lt;!-- Elsie --&gt;
   &lt;/a&gt;
   ,
   &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;
    Lacie
   &lt;/a&gt;
   and
   &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;
    Tillie
   &lt;/a&gt;
   ;
and they lived at the bottom of a well.
  &lt;/p&gt;
  &lt;p class=&quot;story&quot;&gt;
   ...
  &lt;/p&gt;
 &lt;/body&gt;
&lt;/html&gt;
The Dormouse&apos;s story
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><h3 id="选择元素"><a href="#选择元素" class="headerlink" title="选择元素"></a>选择元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.title)</div><div class="line">print(type(soup.title))</div><div class="line">print(soup.head)</div><div class="line">print(soup.p)</div></pre></td></tr></table></figure>
<pre><code>&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;
&lt;class &apos;bs4.element.Tag&apos;&gt;
&lt;head&gt;&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;&lt;/head&gt;
&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;
</code></pre><h3 id="获取名称"><a href="#获取名称" class="headerlink" title="获取名称"></a>获取名称</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.title.name)</div></pre></td></tr></table></figure>
<pre><code>title
</code></pre><h3 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.p.attrs[<span class="string">'name'</span>])</div><div class="line">print(soup.p[<span class="string">'name'</span>])</div></pre></td></tr></table></figure>
<pre><code>dromouse
dromouse
</code></pre><h3 id="获取内容"><a href="#获取内容" class="headerlink" title="获取内容"></a>获取内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p clss="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.p.string)</div></pre></td></tr></table></figure>
<pre><code>The Dormouse&apos;s story
</code></pre><h3 id="嵌套选择"><a href="#嵌套选择" class="headerlink" title="嵌套选择"></a>嵌套选择</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</div><div class="line">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</div><div class="line">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</div><div class="line">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</div><div class="line">and they lived at the bottom of a well.&lt;/p&gt;</div><div class="line">&lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.head.title.string)</div></pre></td></tr></table></figure>
<pre><code>The Dormouse&apos;s story
</code></pre><h3 id="子节点和子孙节点"><a href="#子节点和子孙节点" class="headerlink" title="子节点和子孙节点"></a>子节点和子孙节点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.p.contents)</div></pre></td></tr></table></figure>
<pre><code>[&apos;\n            Once upon a time there were three little sisters; and their names were\n            &apos;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;, &apos;\n&apos;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;, &apos; \n            and\n            &apos;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;, &apos;\n            and they lived at the bottom of a well.\n        &apos;]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.p.children)</div><div class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> enumerate(soup.p.children):</div><div class="line">    print(i, child)</div></pre></td></tr></table></figure>
<pre><code>&lt;list_iterator object at 0x1064f7dd8&gt;
0 
            Once upon a time there were three little sisters; and their names were

1 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
2 

3 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;
4  
            and

5 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
6 
            and they lived at the bottom of a well.
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.p.descendants)</div><div class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> enumerate(soup.p.descendants):</div><div class="line">    print(i, child)</div></pre></td></tr></table></figure>
<pre><code>&lt;generator object descendants at 0x10650e678&gt;
0 
            Once upon a time there were three little sisters; and their names were

1 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
2 

3 &lt;span&gt;Elsie&lt;/span&gt;
4 Elsie
5 

6 

7 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;
8 Lacie
9  
            and

10 &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
11 Tillie
12 
            and they lived at the bottom of a well.
</code></pre><h3 id="父节点和祖先节点"><a href="#父节点和祖先节点" class="headerlink" title="父节点和祖先节点"></a>父节点和祖先节点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.a.parent)</div></pre></td></tr></table></figure>
<pre><code>&lt;p class=&quot;story&quot;&gt;
            Once upon a time there were three little sisters; and their names were
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; 
            and
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
            and they lived at the bottom of a well.
        &lt;/p&gt;
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(list(enumerate(soup.a.parents)))</div></pre></td></tr></table></figure>
<pre><code>[(0, &lt;p class=&quot;story&quot;&gt;
            Once upon a time there were three little sisters; and their names were
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; 
            and
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
            and they lived at the bottom of a well.
        &lt;/p&gt;), (1, &lt;body&gt;
&lt;p class=&quot;story&quot;&gt;
            Once upon a time there were three little sisters; and their names were
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; 
            and
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
            and they lived at the bottom of a well.
        &lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;
&lt;/body&gt;), (2, &lt;html&gt;
&lt;head&gt;
&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p class=&quot;story&quot;&gt;
            Once upon a time there were three little sisters; and their names were
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; 
            and
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
            and they lived at the bottom of a well.
        &lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;), (3, &lt;html&gt;
&lt;head&gt;
&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p class=&quot;story&quot;&gt;
            Once upon a time there were three little sisters; and their names were
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;
&lt;span&gt;Elsie&lt;/span&gt;
&lt;/a&gt;
&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; 
            and
            &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;
            and they lived at the bottom of a well.
        &lt;/p&gt;
&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;)]
</code></pre><h3 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html = <span class="string">"""</span></div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;p class="story"&gt;</div><div class="line">            Once upon a time there were three little sisters; and their names were</div><div class="line">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;</div><div class="line">                &lt;span&gt;Elsie&lt;/span&gt;</div><div class="line">            &lt;/a&gt;</div><div class="line">            &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </div><div class="line">            and</div><div class="line">            &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;</div><div class="line">            and they lived at the bottom of a well.</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p class="story"&gt;...&lt;/p&gt;</div><div class="line">"""</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(list(enumerate(soup.a.next_siblings)))</div><div class="line">print(list(enumerate(soup.a.previous_siblings)))</div></pre></td></tr></table></figure>
<pre><code>[(0, &apos;\n&apos;), (1, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;), (2, &apos; \n            and\n            &apos;), (3, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;), (4, &apos;\n            and they lived at the bottom of a well.\n        &apos;)]
[(0, &apos;\n            Once upon a time there were three little sisters; and their names were\n            &apos;)]
</code></pre><h2 id="标准选择器"><a href="#标准选择器" class="headerlink" title="标准选择器"></a>标准选择器</h2><h3 id="find-all-name-attrs-recursive-text-kwargs"><a href="#find-all-name-attrs-recursive-text-kwargs" class="headerlink" title="find_all( name , attrs , recursive , text , **kwargs )"></a>find_all( name , attrs , recursive , text , **kwargs )</h3><p>可根据标签名、属性、内容查找文档</p>
<h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.find_all(<span class="string">'ul'</span>))</div><div class="line">print(type(soup.find_all(<span class="string">'ul'</span>)[<span class="number">0</span>]))</div></pre></td></tr></table></figure>
<pre><code>[&lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;
&lt;/ul&gt;, &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;/ul&gt;]
&lt;class &apos;bs4.element.Tag&apos;&gt;
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(<span class="string">'ul'</span>):</div><div class="line">    print(ul.find_all(<span class="string">'li'</span>))</div></pre></td></tr></table></figure>
<pre><code>[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;]
[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;]
</code></pre><h4 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1" name="elements"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.find_all(attrs=&#123;<span class="string">'id'</span>: <span class="string">'list-1'</span>&#125;))</div><div class="line">print(soup.find_all(attrs=&#123;<span class="string">'name'</span>: <span class="string">'elements'</span>&#125;))</div></pre></td></tr></table></figure>
<pre><code>[&lt;ul class=&quot;list&quot; id=&quot;list-1&quot; name=&quot;elements&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;
&lt;/ul&gt;]
[&lt;ul class=&quot;list&quot; id=&quot;list-1&quot; name=&quot;elements&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;
&lt;/ul&gt;]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.find_all(id=<span class="string">'list-1'</span>))</div><div class="line">print(soup.find_all(class_=<span class="string">'element'</span>))</div></pre></td></tr></table></figure>
<pre><code>[&lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;
&lt;/ul&gt;]
[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;]
</code></pre><h4 id="text"><a href="#text" class="headerlink" title="text"></a>text</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.find_all(text=<span class="string">'Foo'</span>))</div></pre></td></tr></table></figure>
<pre><code>[&apos;Foo&apos;, &apos;Foo&apos;]
</code></pre><h3 id="find-name-attrs-recursive-text-kwargs"><a href="#find-name-attrs-recursive-text-kwargs" class="headerlink" title="find( name , attrs , recursive , text , **kwargs )"></a>find( name , attrs , recursive , text , **kwargs )</h3><p>find返回单个元素，find_all返回所有元素</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.find(<span class="string">'ul'</span>))</div><div class="line">print(type(soup.find(<span class="string">'ul'</span>)))</div><div class="line">print(soup.find(<span class="string">'page'</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;
&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;
&lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;
&lt;/ul&gt;
&lt;class &apos;bs4.element.Tag&apos;&gt;
None
</code></pre><h3 id="find-parents-find-parent"><a href="#find-parents-find-parent" class="headerlink" title="find_parents()  find_parent()"></a>find_parents()  find_parent()</h3><p>find_parents()返回所有祖先节点，find_parent()返回直接父节点。</p>
<h3 id="find-next-siblings-find-next-sibling"><a href="#find-next-siblings-find-next-sibling" class="headerlink" title="find_next_siblings()  find_next_sibling()"></a>find_next_siblings()  find_next_sibling()</h3><p>find_next_siblings()返回后面所有兄弟节点，find_next_sibling()返回后面第一个兄弟节点。</p>
<h3 id="find-previous-siblings-find-previous-sibling"><a href="#find-previous-siblings-find-previous-sibling" class="headerlink" title="find_previous_siblings()  find_previous_sibling()"></a>find_previous_siblings()  find_previous_sibling()</h3><p>find_previous_siblings()返回前面所有兄弟节点，find_previous_sibling()返回前面第一个兄弟节点。</p>
<h3 id="find-all-next-find-next"><a href="#find-all-next-find-next" class="headerlink" title="find_all_next()  find_next()"></a>find_all_next()  find_next()</h3><p>find_all_next()返回节点后所有符合条件的节点, find_next()返回第一个符合条件的节点</p>
<h3 id="find-all-previous-和-find-previous"><a href="#find-all-previous-和-find-previous" class="headerlink" title="find_all_previous() 和 find_previous()"></a>find_all_previous() 和 find_previous()</h3><p>find_all_previous()返回节点后所有符合条件的节点, find_previous()返回第一个符合条件的节点</p>
<h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p>通过select()直接传入CSS选择器即可完成选择</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">print(soup.select(<span class="string">'.panel .panel-heading'</span>))</div><div class="line">print(soup.select(<span class="string">'ul li'</span>))</div><div class="line">print(soup.select(<span class="string">'#list-2 .element'</span>))</div><div class="line">print(type(soup.select(<span class="string">'ul'</span>)[<span class="number">0</span>]))</div></pre></td></tr></table></figure>
<pre><code>[&lt;div class=&quot;panel-heading&quot;&gt;
&lt;h4&gt;Hello&lt;/h4&gt;
&lt;/div&gt;]
[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;]
[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;]
&lt;class &apos;bs4.element.Tag&apos;&gt;
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">'ul'</span>):</div><div class="line">    print(ul.select(<span class="string">'li'</span>))</div></pre></td></tr></table></figure>
<pre><code>[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;]
[&lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;, &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;]
</code></pre><h3 id="获取属性-1"><a href="#获取属性-1" class="headerlink" title="获取属性"></a>获取属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">'ul'</span>):</div><div class="line">    print(ul[<span class="string">'id'</span>])</div><div class="line">    print(ul.attrs[<span class="string">'id'</span>])</div></pre></td></tr></table></figure>
<pre><code>list-1
list-1
list-2
list-2
</code></pre><h3 id="获取内容-1"><a href="#获取内容-1" class="headerlink" title="获取内容"></a>获取内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">html=<span class="string">'''</span></div><div class="line">&lt;div class="panel"&gt;</div><div class="line">    &lt;div class="panel-heading"&gt;</div><div class="line">        &lt;h4&gt;Hello&lt;/h4&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class="panel-body"&gt;</div><div class="line">        &lt;ul class="list" id="list-1"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Jay&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">        &lt;ul class="list list-small" id="list-2"&gt;</div><div class="line">            &lt;li class="element"&gt;Foo&lt;/li&gt;</div><div class="line">            &lt;li class="element"&gt;Bar&lt;/li&gt;</div><div class="line">        &lt;/ul&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">'''</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line"><span class="keyword">for</span> li <span class="keyword">in</span> soup.select(<span class="string">'li'</span>):</div><div class="line">    print(li.get_text())</div></pre></td></tr></table></figure>
<pre><code>Foo
Bar
Jay
Foo
Bar
</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>推荐使用lxml解析库，必要时使用html.parser</li>
<li>标签选择筛选功能弱但是速度快</li>
<li>建议使用find()、find_all() 查询匹配单个结果或者多个结果</li>
<li>如果对CSS选择器熟悉建议使用select()</li>
<li>记住常用的获取属性和文本值的方法</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;BeautifulSoup&quot;&gt;&lt;a href=&quot;#BeautifulSoup&quot; class=&quot;headerlink&quot; title=&quot;BeautifulSoup&quot;&gt;&lt;/a&gt;BeautifulSoup&lt;/h1&gt;&lt;h2 id=&quot;解析库&quot;&gt;&lt;a href=&quot;#解析库&quot; c
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="BeautifulSoup" scheme="http://kingle.online/tags/BeautifulSoup/"/>
    
  </entry>
  
  <entry>
    <title>python进阶与强化note3</title>
    <link href="http://kingle.online/2018/03/18/python%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%BC%BA%E5%8C%96note3/"/>
    <id>http://kingle.online/2018/03/18/python进阶与强化note3/</id>
    <published>2018-03-18T15:19:40.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="note3"><a href="#note3" class="headerlink" title="note3"></a>note3</h1><h2 id="拆分字符串"><a href="#拆分字符串" class="headerlink" title="拆分字符串"></a>拆分字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 普通拆分，可以使用map函数</span></div><div class="line">s = <span class="string">'ab;cd|efg|hi,jkl|mn\topq;rst,uvw\txyz'</span></div><div class="line">res = s.split(<span class="string">';'</span>)</div><div class="line">t = []</div><div class="line"><span class="comment"># 将res中的每一项用|分隔符，分割之后，添加到t列表中去</span></div><div class="line">map(<span class="keyword">lambda</span> x: t.extend(x.split(<span class="string">'|'</span>)), res)</div><div class="line"></div><div class="line"><span class="comment">#总结为一个函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mySplit</span><span class="params">(s, ds)</span>:</span></div><div class="line">    res = [s]</div><div class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> ds:</div><div class="line">        t = []</div><div class="line">        map(<span class="keyword">lambda</span> x: t.extend(x.split(d)), res)</div><div class="line">        res = t</div><div class="line">    <span class="keyword">return</span> [x <span class="keyword">for</span> x <span class="keyword">in</span> res <span class="keyword">if</span> x]</div><div class="line"></div><div class="line">s = <span class="string">'ab;cd|efg|hi,jkl|mn\topq;rst,uvw\txyz'</span></div><div class="line">mySplit(s, <span class="string">';|,\t'</span>)</div></pre></td></tr></table></figure>
<p>直接使用正则表达式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="comment"># 速度慢一些</span></div><div class="line">re.split(<span class="string">r'[,;\t|]+'</span>, s)</div></pre></td></tr></table></figure></p>
<h2 id="如何判断字符串是否以a开头或结尾"><a href="#如何判断字符串是否以a开头或结尾" class="headerlink" title="如何判断字符串是否以a开头或结尾"></a>如何判断字符串是否以a开头或结尾</h2><p><code>使用s.endswith()和s.startswith()</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os, stat</div><div class="line"><span class="comment">#os.listdir('.')</span></div><div class="line">l = [name <span class="keyword">for</span> name <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>) <span class="keyword">if</span> name.endswith((<span class="string">'.sh'</span>, <span class="string">'.py'</span>))]</div><div class="line"><span class="keyword">for</span> f <span class="keyword">in</span> l:</div><div class="line">    <span class="comment"># 改变文件权限</span></div><div class="line">    os.chmod(f, os.stat(f).st_mode | stat.S_IXUSR)</div></pre></td></tr></table></figure></p>
<h2 id="如何调整字符串中文本的格式"><a href="#如何调整字符串中文本的格式" class="headerlink" title="如何调整字符串中文本的格式"></a>如何调整字符串中文本的格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line">log = open(<span class="string">'/var/log/dpkg.log'</span>).read()</div><div class="line"><span class="comment"># 将2015-02-28格式转换为02/28/2015</span></div><div class="line">re.sub(<span class="string">'(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)'</span>, <span class="string">r'\2/\3/\1'</span>, log)</div><div class="line"><span class="comment"># 起别名</span></div><div class="line"><span class="comment"># print(re.sub('(?P&lt;year&gt;\d&#123;4&#125;)-(?P&lt;month&gt;\d&#123;2&#125;)-(?P&lt;day&gt;\d&#123;2&#125;)',r'\g&lt;month&gt;/\g&lt;day&gt;/\g&lt;year&gt;',log))</span></div></pre></td></tr></table></figure>
<h2 id="如何将多个小字符串拼接成一个大的字符串"><a href="#如何将多个小字符串拼接成一个大的字符串" class="headerlink" title="如何将多个小字符串拼接成一个大的字符串"></a>如何将多个小字符串拼接成一个大的字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">pl = [<span class="string">"&lt;0112&gt;"</span>, <span class="string">"&lt;32&gt;"</span>, <span class="string">"&lt;1024*768&gt;"</span>, <span class="string">"&lt;10&gt;"</span>, <span class="string">"&lt;1&gt;"</span>, <span class="string">"&lt;100.0&gt;"</span>, <span class="string">"&lt;500.0&gt;"</span>]</div><div class="line">s = <span class="string">''</span></div><div class="line"><span class="comment"># 存在浪费</span></div><div class="line"><span class="keyword">for</span> p <span class="keyword">in</span> pl:</div><div class="line">    s += p</div><div class="line"><span class="comment"># ';'.join(['abc', '123', 'xyz'])</span></div><div class="line"><span class="comment"># 'abc;123;xyz'</span></div><div class="line"><span class="comment"># 不存在浪费，推荐</span></div><div class="line"><span class="string">''</span>.join(pl)</div><div class="line"><span class="comment"># l = ['abc', 123, 45, 'xyz']</span></div><div class="line"><span class="comment"># ''.join([str(x) for x in l])</span></div><div class="line"><span class="comment"># 元组的括号省略了，生成器比列表解析更节省空间</span></div><div class="line"><span class="comment"># ''.join(str(x) for x in l)</span></div></pre></td></tr></table></figure>
<h2 id="如何对字符串进行左右，居中对齐"><a href="#如何对字符串进行左右，居中对齐" class="headerlink" title="如何对字符串进行左右，居中对齐"></a>如何对字符串进行左右，居中对齐</h2><p><code>使用str.ljust(), str.rjust(), str.center()</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s.ljust(<span class="number">20</span>, <span class="string">'='</span>)</div><div class="line"><span class="comment"># 'abc================='</span></div></pre></td></tr></table></figure></p>
<p><code>使用format函数</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 左对齐</span></div><div class="line">format(s, <span class="string">'&lt;20'</span>)</div><div class="line"><span class="comment"># 右对齐</span></div><div class="line">format(s, <span class="string">'&gt;20'</span>)</div><div class="line"><span class="comment"># 居中对齐</span></div><div class="line">format(s, <span class="string">'^20'</span>)</div></pre></td></tr></table></figure></p>
<h2 id="如何去掉字符串中不需要的字符"><a href="#如何去掉字符串中不需要的字符" class="headerlink" title="如何去掉字符串中不需要的字符"></a>如何去掉字符串中不需要的字符</h2><p><div style="text-align: center"><br>    <img src="http://t.cn/R9vRmyA" width="" height="200px" alt="picture is gone"><br></div><br><code>使用strip()</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'  abc dd ca '</span></div><div class="line"><span class="comment"># 去掉两端的空白，保留中间的空白</span></div><div class="line">s.strip()</div><div class="line">s.lstrip()</div><div class="line">s.rstrip()</div><div class="line"><span class="comment"># 去掉符号</span></div><div class="line">s = <span class="string">'----abc+++'</span></div><div class="line">s.strip(<span class="string">'-+'</span>)</div></pre></td></tr></table></figure></p>
<p><code>使用切片拼接</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'abc:123'</span></div><div class="line">s[:<span class="number">3</span>] + s[<span class="number">4</span>:]</div></pre></td></tr></table></figure></p>
<p><code>利用正则表达式</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'\tabc\t123\txyz'</span></div><div class="line"><span class="comment"># 只能替换一种</span></div><div class="line">s.replace(<span class="string">'\t'</span>, <span class="string">''</span>)</div><div class="line"><span class="comment"># 替换多种</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line">s = <span class="string">'\tabc\t123\txyz\r'</span></div><div class="line">re.sub(<span class="string">'[\t\r]'</span>, <span class="string">''</span>, s)</div></pre></td></tr></table></figure></p>
<p><code>使用translate()</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'abc1345xyz'</span></div><div class="line"><span class="keyword">import</span> string </div><div class="line"><span class="comment"># 使用string生成映射表</span></div><div class="line">s.translate(string.maketrans(<span class="string">'abcxyz'</span>, <span class="string">'xyzabc'</span>))</div><div class="line">s = <span class="string">'abc\tkdjfk\n'</span></div><div class="line">s.translate(<span class="keyword">None</span>, <span class="string">'\t\n'</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;note3&quot;&gt;&lt;a href=&quot;#note3&quot; class=&quot;headerlink&quot; title=&quot;note3&quot;&gt;&lt;/a&gt;note3&lt;/h1&gt;&lt;h2 id=&quot;拆分字符串&quot;&gt;&lt;a href=&quot;#拆分字符串&quot; class=&quot;headerlink&quot; title=&quot;拆分字
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>百度云限速解决办法:支持Windows和Mac</title>
    <link href="http://kingle.online/2018/03/13/%E7%99%BE%E5%BA%A6%E4%BA%91%E9%99%90%E9%80%9F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-%E6%94%AF%E6%8C%81Windows%E5%92%8CMac/"/>
    <id>http://kingle.online/2018/03/13/百度云限速解决办法-支持Windows和Mac/</id>
    <published>2018-03-13T14:30:01.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><p>本软件需要安装浏览器插件和客户端</p>
<p><strong>下载地址</strong><br>链接：<a href="https://share.weiyun.com/d10ce31c7b58645340c3d8ac85cfae0a" target="_blank" rel="external">https://share.weiyun.com/d10ce31c7b58645340c3d8ac85cfae0a</a> 密码：n3k2tn</p>
<h3 id="浏览器插件安装"><a href="#浏览器插件安装" class="headerlink" title="浏览器插件安装"></a>浏览器插件安装</h3><ul>
<li>下载包解压</li>
<li>在 Chrome 地址栏输入 chrome://extensions/ 以打开扩展程序管理页面</li>
<li>顶部勾选“开发者模式”，再点击“加载已解压的扩展程序…”，路径为刚才的解压目录<div style="text-align: center"><br>  <img src="http://ojlmcfp94.bkt.clouddn.com/chrome_extensions.png" width="" height="" alt="picture is gone"><br></div>

</li>
</ul>
<h3 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h3><ul>
<li>mac:正常安装即可。</li>
</ul>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/install_1.png" width="" height="" alt="picture is gone"><br></div>

<ul>
<li>windows(32位/64位)免安装:下载解压打开downloader.exe</li>
</ul>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><div style="text-align: center"><br>    <img src="https://camo.githubusercontent.com/b2909063637f6f46494e52a6c0674e27a8a21440/68747470733a2f2f696d672e6861637061692e636f6d2f66696c652f323031372f31322f37623733363565646366623834386263623334343864343034623962643434305f373535313531333639313033375f7069632e6a7067" width="" height="" alt="picture is gone"><br></div>

<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul>
<li>安装高速下载器客户端和浏览器插件</li>
<li>打开<a href="https://pan.baidu.com/" target="_blank" rel="external">百度网盘</a>点击高速下载即可</li>
</ul>
<div style="text-align: center"><br>    <img src="https://camo.githubusercontent.com/27a2e54408b01d6bc6c701f929e263b6b8b792b6/68747470733a2f2f696d672e6861637061692e636f6d2f66696c652f323031372f31322f36386330353132353636643734376436626334376137393161613765643337325f696d6167652e706e67" width="" height="" alt="picture is gone"><br></div>

<hr>
<p>在弹出的对话框中点击立即下载</p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/download_1.png" width="" height="" alt="picture is gone"><br></div><br>下载页面<br><div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/download_2.png" width="" height="" alt="picture is gone"><br></div>




<p>项目链接：<a href="https://github.com/high-speed-downloader/high-speed-downloader" target="_blank" rel="external">https://github.com/high-speed-downloader/high-speed-downloader</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装说明&quot;&gt;&lt;a href=&quot;#安装说明&quot; class=&quot;headerlink&quot; title=&quot;安装说明&quot;&gt;&lt;/a&gt;安装说明&lt;/h2&gt;&lt;p&gt;本软件需要安装浏览器插件和客户端&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载地址&lt;/strong&gt;&lt;br&gt;链接：&lt;a href=&quot;h
    
    </summary>
    
    
      <category term="百度云" scheme="http://kingle.online/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Requests库详解</title>
    <link href="http://kingle.online/2018/03/03/Requests%E5%BA%93%E8%AF%A6%E8%A7%A3/"/>
    <id>http://kingle.online/2018/03/03/Requests库详解/</id>
    <published>2018-03-02T17:27:05.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h1><h2 id="实例引入"><a href="#实例引入" class="headerlink" title="实例引入"></a>实例引入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'https://www.baidu.com/'</span>)</div><div class="line">print(type(response))</div><div class="line">print(response.status_code)</div><div class="line">print(type(response.text))</div><div class="line">print(response.text)</div><div class="line">print(response.cookies)</div></pre></td></tr></table></figure>
<h2 id="各种请求方式"><a href="#各种请求方式" class="headerlink" title="各种请求方式"></a>各种请求方式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">requests.post(<span class="string">'http://httpbin.org/post'</span>)</div><div class="line">requests.put(<span class="string">'http://httpbin.org/put'</span>)</div><div class="line">requests.delete(<span class="string">'http://httpbin.org/delete'</span>)</div><div class="line">requests.head(<span class="string">'http://httpbin.org/get'</span>)</div><div class="line">requests.options(<span class="string">'http://httpbin.org/get'</span>)</div></pre></td></tr></table></figure>
<h1 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h1><h2 id="基本GET请求"><a href="#基本GET请求" class="headerlink" title="基本GET请求"></a>基本GET请求</h2><h3 id="基本写法"><a href="#基本写法" class="headerlink" title="基本写法"></a>基本写法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'http://httpbin.org/get'</span>)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<h3 id="带参数GET请求"><a href="#带参数GET请求" class="headerlink" title="带参数GET请求"></a>带参数GET请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">response = requests.get(<span class="string">"http://httpbin.org/get?name=germey&amp;age=22"</span>)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">data = &#123;</div><div class="line">    <span class="string">'name'</span>: <span class="string">'germey'</span>,</div><div class="line">    <span class="string">'age'</span>: <span class="number">22</span></div><div class="line">&#125;</div><div class="line">response = requests.get(<span class="string">"http://httpbin.org/get"</span>, params=data)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<h3 id="解析json"><a href="#解析json" class="headerlink" title="解析json"></a>解析json</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"http://httpbin.org/get"</span>)</div><div class="line">print(type(response.text))</div><div class="line">print(response.json())</div><div class="line">print(json.loads(response.text))</div><div class="line">print(type(response.json()))</div></pre></td></tr></table></figure>
<h3 id="获取二进制数据"><a href="#获取二进制数据" class="headerlink" title="获取二进制数据"></a>获取二进制数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"https://github.com/favicon.ico"</span>)</div><div class="line">print(type(response.text), type(response.content))</div><div class="line">print(response.text)</div><div class="line">print(response.content)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"https://github.com/favicon.ico"</span>)</div><div class="line"><span class="keyword">with</span> open(<span class="string">'favicon.ico'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">    f.write(response.content)</div><div class="line">    f.close()</div></pre></td></tr></table></figure>
<h3 id="添加headers"><a href="#添加headers" class="headerlink" title="添加headers"></a>添加headers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"https://www.zhihu.com/explore"</span>)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">headers = &#123;</div><div class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></div><div class="line">&#125;</div><div class="line">response = requests.get(<span class="string">"https://www.zhihu.com/explore"</span>, headers=headers)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<h2 id="基本POST请求"><a href="#基本POST请求" class="headerlink" title="基本POST请求"></a>基本POST请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">data = &#123;<span class="string">'name'</span>: <span class="string">'germey'</span>, <span class="string">'age'</span>: <span class="string">'22'</span>&#125;</div><div class="line">response = requests.post(<span class="string">"http://httpbin.org/post"</span>, data=data)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">data = &#123;<span class="string">'name'</span>: <span class="string">'germey'</span>, <span class="string">'age'</span>: <span class="string">'22'</span>&#125;</div><div class="line">headers = &#123;</div><div class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></div><div class="line">&#125;</div><div class="line">response = requests.post(<span class="string">"http://httpbin.org/post"</span>, data=data, headers=headers)</div><div class="line">print(response.json())</div></pre></td></tr></table></figure>
<h1 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h1><h2 id="reponse属性"><a href="#reponse属性" class="headerlink" title="reponse属性"></a>reponse属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'http://www.jianshu.com'</span>)</div><div class="line">print(type(response.status_code), response.status_code)</div><div class="line">print(type(response.headers), response.headers)</div><div class="line">print(type(response.cookies), response.cookies)</div><div class="line">print(type(response.url), response.url)</div><div class="line">print(type(response.history), response.history)</div></pre></td></tr></table></figure>
<h2 id="状态码判断"><a href="#状态码判断" class="headerlink" title="状态码判断"></a>状态码判断</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'http://www.jianshu.com/hello.html'</span>)</div><div class="line">exit() <span class="keyword">if</span> <span class="keyword">not</span> response.status_code == requests.codes.not_found <span class="keyword">else</span> print(<span class="string">'404 Not Found'</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'http://www.jianshu.com'</span>)</div><div class="line">exit() <span class="keyword">if</span> <span class="keyword">not</span> response.status_code == <span class="number">200</span> <span class="keyword">else</span> print(<span class="string">'Request Successfully'</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="number">100</span>: (<span class="string">'continue'</span>,),</div><div class="line"><span class="number">101</span>: (<span class="string">'switching_protocols'</span>,),</div><div class="line"><span class="number">102</span>: (<span class="string">'processing'</span>,),</div><div class="line"><span class="number">103</span>: (<span class="string">'checkpoint'</span>,),</div><div class="line"><span class="number">122</span>: (<span class="string">'uri_too_long'</span>, <span class="string">'request_uri_too_long'</span>),</div><div class="line"><span class="number">200</span>: (<span class="string">'ok'</span>, <span class="string">'okay'</span>, <span class="string">'all_ok'</span>, <span class="string">'all_okay'</span>, <span class="string">'all_good'</span>, <span class="string">'\\o/'</span>, <span class="string">'✓'</span>),</div><div class="line"><span class="number">201</span>: (<span class="string">'created'</span>,),</div><div class="line"><span class="number">202</span>: (<span class="string">'accepted'</span>,),</div><div class="line"><span class="number">203</span>: (<span class="string">'non_authoritative_info'</span>, <span class="string">'non_authoritative_information'</span>),</div><div class="line"><span class="number">204</span>: (<span class="string">'no_content'</span>,),</div><div class="line"><span class="number">205</span>: (<span class="string">'reset_content'</span>, <span class="string">'reset'</span>),</div><div class="line"><span class="number">206</span>: (<span class="string">'partial_content'</span>, <span class="string">'partial'</span>),</div><div class="line"><span class="number">207</span>: (<span class="string">'multi_status'</span>, <span class="string">'multiple_status'</span>, <span class="string">'multi_stati'</span>, <span class="string">'multiple_stati'</span>),</div><div class="line"><span class="number">208</span>: (<span class="string">'already_reported'</span>,),</div><div class="line"><span class="number">226</span>: (<span class="string">'im_used'</span>,),</div><div class="line"></div><div class="line"><span class="comment"># Redirection.</span></div><div class="line"><span class="number">300</span>: (<span class="string">'multiple_choices'</span>,),</div><div class="line"><span class="number">301</span>: (<span class="string">'moved_permanently'</span>, <span class="string">'moved'</span>, <span class="string">'\\o-'</span>),</div><div class="line"><span class="number">302</span>: (<span class="string">'found'</span>,),</div><div class="line"><span class="number">303</span>: (<span class="string">'see_other'</span>, <span class="string">'other'</span>),</div><div class="line"><span class="number">304</span>: (<span class="string">'not_modified'</span>,),</div><div class="line"><span class="number">305</span>: (<span class="string">'use_proxy'</span>,),</div><div class="line"><span class="number">306</span>: (<span class="string">'switch_proxy'</span>,),</div><div class="line"><span class="number">307</span>: (<span class="string">'temporary_redirect'</span>, <span class="string">'temporary_moved'</span>, <span class="string">'temporary'</span>),</div><div class="line"><span class="number">308</span>: (<span class="string">'permanent_redirect'</span>,</div><div class="line">      <span class="string">'resume_incomplete'</span>, <span class="string">'resume'</span>,), <span class="comment"># These 2 to be removed in 3.0</span></div><div class="line"></div><div class="line"><span class="comment"># Client Error.</span></div><div class="line"><span class="number">400</span>: (<span class="string">'bad_request'</span>, <span class="string">'bad'</span>),</div><div class="line"><span class="number">401</span>: (<span class="string">'unauthorized'</span>,),</div><div class="line"><span class="number">402</span>: (<span class="string">'payment_required'</span>, <span class="string">'payment'</span>),</div><div class="line"><span class="number">403</span>: (<span class="string">'forbidden'</span>,),</div><div class="line"><span class="number">404</span>: (<span class="string">'not_found'</span>, <span class="string">'-o-'</span>),</div><div class="line"><span class="number">405</span>: (<span class="string">'method_not_allowed'</span>, <span class="string">'not_allowed'</span>),</div><div class="line"><span class="number">406</span>: (<span class="string">'not_acceptable'</span>,),</div><div class="line"><span class="number">407</span>: (<span class="string">'proxy_authentication_required'</span>, <span class="string">'proxy_auth'</span>, <span class="string">'proxy_authentication'</span>),</div><div class="line"><span class="number">408</span>: (<span class="string">'request_timeout'</span>, <span class="string">'timeout'</span>),</div><div class="line"><span class="number">409</span>: (<span class="string">'conflict'</span>,),</div><div class="line"><span class="number">410</span>: (<span class="string">'gone'</span>,),</div><div class="line"><span class="number">411</span>: (<span class="string">'length_required'</span>,),</div><div class="line"><span class="number">412</span>: (<span class="string">'precondition_failed'</span>, <span class="string">'precondition'</span>),</div><div class="line"><span class="number">413</span>: (<span class="string">'request_entity_too_large'</span>,),</div><div class="line"><span class="number">414</span>: (<span class="string">'request_uri_too_large'</span>,),</div><div class="line"><span class="number">415</span>: (<span class="string">'unsupported_media_type'</span>, <span class="string">'unsupported_media'</span>, <span class="string">'media_type'</span>),</div><div class="line"><span class="number">416</span>: (<span class="string">'requested_range_not_satisfiable'</span>, <span class="string">'requested_range'</span>, <span class="string">'range_not_satisfiable'</span>),</div><div class="line"><span class="number">417</span>: (<span class="string">'expectation_failed'</span>,),</div><div class="line"><span class="number">418</span>: (<span class="string">'im_a_teapot'</span>, <span class="string">'teapot'</span>, <span class="string">'i_am_a_teapot'</span>),</div><div class="line"><span class="number">421</span>: (<span class="string">'misdirected_request'</span>,),</div><div class="line"><span class="number">422</span>: (<span class="string">'unprocessable_entity'</span>, <span class="string">'unprocessable'</span>),</div><div class="line"><span class="number">423</span>: (<span class="string">'locked'</span>,),</div><div class="line"><span class="number">424</span>: (<span class="string">'failed_dependency'</span>, <span class="string">'dependency'</span>),</div><div class="line"><span class="number">425</span>: (<span class="string">'unordered_collection'</span>, <span class="string">'unordered'</span>),</div><div class="line"><span class="number">426</span>: (<span class="string">'upgrade_required'</span>, <span class="string">'upgrade'</span>),</div><div class="line"><span class="number">428</span>: (<span class="string">'precondition_required'</span>, <span class="string">'precondition'</span>),</div><div class="line"><span class="number">429</span>: (<span class="string">'too_many_requests'</span>, <span class="string">'too_many'</span>),</div><div class="line"><span class="number">431</span>: (<span class="string">'header_fields_too_large'</span>, <span class="string">'fields_too_large'</span>),</div><div class="line"><span class="number">444</span>: (<span class="string">'no_response'</span>, <span class="string">'none'</span>),</div><div class="line"><span class="number">449</span>: (<span class="string">'retry_with'</span>, <span class="string">'retry'</span>),</div><div class="line"><span class="number">450</span>: (<span class="string">'blocked_by_windows_parental_controls'</span>, <span class="string">'parental_controls'</span>),</div><div class="line"><span class="number">451</span>: (<span class="string">'unavailable_for_legal_reasons'</span>, <span class="string">'legal_reasons'</span>),</div><div class="line"><span class="number">499</span>: (<span class="string">'client_closed_request'</span>,),</div><div class="line"></div><div class="line"><span class="comment"># Server Error.</span></div><div class="line"><span class="number">500</span>: (<span class="string">'internal_server_error'</span>, <span class="string">'server_error'</span>, <span class="string">'/o\\'</span>, <span class="string">'✗'</span>),</div><div class="line"><span class="number">501</span>: (<span class="string">'not_implemented'</span>,),</div><div class="line"><span class="number">502</span>: (<span class="string">'bad_gateway'</span>,),</div><div class="line"><span class="number">503</span>: (<span class="string">'service_unavailable'</span>, <span class="string">'unavailable'</span>),</div><div class="line"><span class="number">504</span>: (<span class="string">'gateway_timeout'</span>,),</div><div class="line"><span class="number">505</span>: (<span class="string">'http_version_not_supported'</span>, <span class="string">'http_version'</span>),</div><div class="line"><span class="number">506</span>: (<span class="string">'variant_also_negotiates'</span>,),</div><div class="line"><span class="number">507</span>: (<span class="string">'insufficient_storage'</span>,),</div><div class="line"><span class="number">509</span>: (<span class="string">'bandwidth_limit_exceeded'</span>, <span class="string">'bandwidth'</span>),</div><div class="line"><span class="number">510</span>: (<span class="string">'not_extended'</span>,),</div><div class="line"><span class="number">511</span>: (<span class="string">'network_authentication_required'</span>, <span class="string">'network_auth'</span>, <span class="string">'network_authentication'</span>),</div></pre></td></tr></table></figure>
<h1 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h1><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">files = &#123;<span class="string">'file'</span>: open(<span class="string">'favicon.ico'</span>, <span class="string">'rb'</span>)&#125;</div><div class="line">response = requests.post(<span class="string">"http://httpbin.org/post"</span>, files=files)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<h2 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"https://www.baidu.com"</span>)</div><div class="line">print(response.cookies)</div><div class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> response.cookies.items():</div><div class="line">    print(key + <span class="string">'='</span> + value)</div></pre></td></tr></table></figure>
<h2 id="会话维持"><a href="#会话维持" class="headerlink" title="会话维持"></a>会话维持</h2><p>模拟登录</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">requests.get(<span class="string">'http://httpbin.org/cookies/set/number/123456789'</span>)</div><div class="line">response = requests.get(<span class="string">'http://httpbin.org/cookies'</span>)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">s = requests.Session()</div><div class="line">s.get(<span class="string">'http://httpbin.org/cookies/set/number/123456789'</span>)</div><div class="line">response = s.get(<span class="string">'http://httpbin.org/cookies'</span>)</div><div class="line">print(response.text)</div></pre></td></tr></table></figure>
<h2 id="证书验证"><a href="#证书验证" class="headerlink" title="证书验证"></a>证书验证</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'https://www.12306.cn'</span>)</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> requests.packages <span class="keyword">import</span> urllib3</div><div class="line">urllib3.disable_warnings()</div><div class="line">response = requests.get(<span class="string">'https://www.12306.cn'</span>, verify=<span class="keyword">False</span>)</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">response = requests.get(<span class="string">'https://www.12306.cn'</span>, cert=(<span class="string">'/path/server.crt'</span>, <span class="string">'/path/key'</span>))</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<h2 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">proxies = &#123;</div><div class="line">  <span class="string">"http"</span>: <span class="string">"http://127.0.0.1:9743"</span>,</div><div class="line">  <span class="string">"https"</span>: <span class="string">"https://127.0.0.1:9743"</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line">response = requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">proxies = &#123;</div><div class="line">    <span class="string">"http"</span>: <span class="string">"http://user:password@127.0.0.1:9743/"</span>,</div><div class="line">&#125;</div><div class="line">response = requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install <span class="string">'requests[socks]'</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">proxies = &#123;</div><div class="line">    <span class="string">'http'</span>: <span class="string">'socks5://127.0.0.1:9742'</span>,</div><div class="line">    <span class="string">'https'</span>: <span class="string">'socks5://127.0.0.1:9742'</span></div><div class="line">&#125;</div><div class="line">response = requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</div><div class="line">print(response.status_code)</div></pre></td></tr></table></figure>
<h2 id="超时设置"><a href="#超时设置" class="headerlink" title="超时设置"></a>超时设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ReadTimeout</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    response = requests.get(<span class="string">"http://httpbin.org/get"</span>, timeout = <span class="number">0.5</span>)</div><div class="line">    print(response.status_code)</div><div class="line"><span class="keyword">except</span> ReadTimeout:</div><div class="line">    print(<span class="string">'Timeout'</span>)</div></pre></td></tr></table></figure>
<h2 id="认证设置"><a href="#认证设置" class="headerlink" title="认证设置"></a>认证设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</div><div class="line"></div><div class="line">r = requests.get(<span class="string">'http://120.27.34.24:9001'</span>, auth=HTTPBasicAuth(<span class="string">'user'</span>, <span class="string">'123'</span>))</div><div class="line">print(r.status_code)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">r = requests.get(<span class="string">'http://120.27.34.24:9001'</span>, auth=(<span class="string">'user'</span>, <span class="string">'123'</span>))</div><div class="line">print(r.status_code)</div></pre></td></tr></table></figure>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ReadTimeout, ConnectionError, RequestException</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    response = requests.get(<span class="string">"http://httpbin.org/get"</span>, timeout = <span class="number">0.5</span>)</div><div class="line">    print(response.status_code)</div><div class="line"><span class="keyword">except</span> ReadTimeout:</div><div class="line">    print(<span class="string">'Timeout'</span>)</div><div class="line"><span class="keyword">except</span> ConnectionError:</div><div class="line">    print(<span class="string">'Connection error'</span>)</div><div class="line"><span class="keyword">except</span> RequestException:</div><div class="line">    print(<span class="string">'Error'</span>)</div></pre></td></tr></table></figure>
<pre><code>Connection error
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;requests&quot;&gt;&lt;a href=&quot;#requests&quot; class=&quot;headerlink&quot; title=&quot;requests&quot;&gt;&lt;/a&gt;requests&lt;/h1&gt;&lt;h2 id=&quot;实例引入&quot;&gt;&lt;a href=&quot;#实例引入&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="requests" scheme="http://kingle.online/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript常用API</title>
    <link href="http://kingle.online/2018/01/17/JavaScript%E5%B8%B8%E7%94%A8API%E5%90%88%E9%9B%86/"/>
    <id>http://kingle.online/2018/01/17/JavaScript常用API合集/</id>
    <published>2018-01-16T21:34:42.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript常用API合集"><a href="#JavaScript常用API合集" class="headerlink" title="JavaScript常用API合集"></a>JavaScript常用API合集</h1><h2 id="一、节点"><a href="#一、节点" class="headerlink" title="一、节点"></a>一、节点</h2><h3 id="1-1-节点属性"><a href="#1-1-节点属性" class="headerlink" title="1.1 节点属性"></a>1.1 节点属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Node.nodeName  <span class="comment">//返回节点名称，只读</span></div><div class="line">Node.nodeType  <span class="comment">//返回节点类型的常数值，只读</span></div><div class="line">Node.nodeValue  <span class="comment">//返回Text或Comment节点的文本值，只读</span></div><div class="line">Node.textContent  <span class="comment">//返回当前节点和它的所有后代节点的文本内容，可读写</span></div><div class="line">Node.baseURI    <span class="comment">//返回当前网页的绝对路径</span></div><div class="line"></div><div class="line">Node.ownerDocument  <span class="comment">//返回当前节点所在的顶层文档对象，即document</span></div><div class="line">Node.nextSibling  <span class="comment">//返回紧跟在当前节点后面的第一个兄弟节点</span></div><div class="line">Node.previousSibling  <span class="comment">//返回当前节点前面的、距离最近的一个兄弟节点</span></div><div class="line">Node.parentNode  <span class="comment">//返回当前节点的父节点</span></div><div class="line">Node.parentElement  <span class="comment">//返回当前节点的父Element节点</span></div><div class="line">Node.childNodes  <span class="comment">//返回当前节点的所有子节点</span></div><div class="line">Node.firstChild  <span class="comment">//返回当前节点的第一个子节点</span></div><div class="line">Node.lastChild  <span class="comment">//返回当前节点的最后一个子节点</span></div><div class="line"></div><div class="line"><span class="comment">//parentNode接口</span></div><div class="line">Node.children  <span class="comment">//返回指定节点的所有Element子节点</span></div><div class="line">Node.firstElementChild  <span class="comment">//返回当前节点的第一个Element子节点</span></div><div class="line">Node.lastElementChild  <span class="comment">//返回当前节点的最后一个Element子节点</span></div><div class="line">Node.childElementCount  <span class="comment">//返回当前节点所有Element子节点的数目。</span></div></pre></td></tr></table></figure>
<h3 id="1-2-操作"><a href="#1-2-操作" class="headerlink" title="1.2 操作"></a>1.2 操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ppendChild(node)  <span class="comment">//向节点添加最后一个子节点</span></div><div class="line">Node.hasChildNodes()  <span class="comment">//返回布尔值，表示当前节点是否有子节点</span></div><div class="line">Node.cloneNode(<span class="literal">true</span>);  <span class="comment">// 默认为false(克隆节点), true(克隆节点及其属性，以及后代)</span></div><div class="line">Node.insertBefore(newNode,oldNode)  <span class="comment">// 在指定子节点之前插入新的子节点</span></div><div class="line">Node.removeChild(node)  <span class="comment">//删除节点，在要删除节点的父节点上操作</span></div><div class="line">Node.replaceChild(newChild,oldChild)  <span class="comment">//替换节点</span></div><div class="line">Node.contains(node)  <span class="comment">//返回一个布尔值，表示参数节点是否为当前节点的后代节点。</span></div><div class="line">Node.compareDocumentPosition(node)  <span class="comment">//返回一个7个比特位的二进制值，表示参数节点和当前节点的关系</span></div><div class="line">Node.isEqualNode(noe)  <span class="comment">//返回布尔值，用于检查两个节点是否相等。所谓相等的节点，指的是两个节点的类型相同、属性相同、子节点相同。</span></div><div class="line">Node.normalize()  <span class="comment">//用于清理当前节点内部的所有Text节点。它会去除空的文本节点，并且将毗邻的文本节点合并成一个。</span></div><div class="line"></div><div class="line"><span class="comment">//ChildNode接口</span></div><div class="line">Node.remove()  <span class="comment">//用于删除当前节点</span></div><div class="line">Node.before()  <span class="comment">//</span></div><div class="line">Node.after()</div><div class="line">Node.replaceWith()</div></pre></td></tr></table></figure>
<h3 id="1-3-Document节点"><a href="#1-3-Document节点" class="headerlink" title="1.3 Document节点"></a>1.3 Document节点</h3><h4 id="1-3-1Document节点的属性"><a href="#1-3-1Document节点的属性" class="headerlink" title="1.3.1Document节点的属性"></a>1.3.1Document节点的属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.doctype  <span class="comment">//</span></div><div class="line"><span class="built_in">document</span>.documentElement  <span class="comment">//返回当前文档的根节点</span></div><div class="line"><span class="built_in">document</span>.defaultView  <span class="comment">//返回document对象所在的window对象</span></div><div class="line"><span class="built_in">document</span>.body  <span class="comment">//返回当前文档的&lt;body&gt;节点</span></div><div class="line"><span class="built_in">document</span>.head  <span class="comment">//返回当前文档的&lt;head&gt;节点</span></div><div class="line"><span class="built_in">document</span>.activeElement  <span class="comment">//返回当前文档中获得焦点的那个元素。</span></div><div class="line"></div><div class="line"><span class="comment">//节点集合属性</span></div><div class="line"><span class="built_in">document</span>.links  <span class="comment">//返回当前文档的所有a元素</span></div><div class="line"><span class="built_in">document</span>.forms  <span class="comment">//返回页面中所有表单元素</span></div><div class="line"><span class="built_in">document</span>.images  <span class="comment">//返回页面中所有图片元素</span></div><div class="line"><span class="built_in">document</span>.embeds  <span class="comment">//返回网页中所有嵌入对象</span></div><div class="line"><span class="built_in">document</span>.scripts  <span class="comment">//返回当前文档的所有脚本</span></div><div class="line"><span class="built_in">document</span>.styleSheets  <span class="comment">//返回当前网页的所有样式表</span></div><div class="line"></div><div class="line"><span class="comment">//文档信息属性</span></div><div class="line"><span class="built_in">document</span>.documentURI  <span class="comment">//表示当前文档的网址</span></div><div class="line"><span class="built_in">document</span>.URL  <span class="comment">//返回当前文档的网址</span></div><div class="line"><span class="built_in">document</span>.domain  <span class="comment">//返回当前文档的域名</span></div><div class="line"><span class="built_in">document</span>.lastModified  <span class="comment">//返回当前文档最后修改的时间戳</span></div><div class="line"><span class="built_in">document</span>.location  <span class="comment">//返回location对象，提供当前文档的URL信息</span></div><div class="line"><span class="built_in">document</span>.referrer  <span class="comment">//返回当前文档的访问来源</span></div><div class="line"><span class="built_in">document</span>.title    <span class="comment">//返回当前文档的标题</span></div><div class="line"><span class="built_in">document</span>.characterSet属性返回渲染当前文档的字符集，比如UTF<span class="number">-8</span>、ISO<span class="number">-8859</span><span class="number">-1</span>。</div><div class="line"><span class="built_in">document</span>.readyState  <span class="comment">//返回当前文档的状态</span></div><div class="line"><span class="built_in">document</span>.designMode  <span class="comment">//控制当前文档是否可编辑，可读写</span></div><div class="line"><span class="built_in">document</span>.compatMode  <span class="comment">//返回浏览器处理文档的模式</span></div><div class="line"><span class="built_in">document</span>.cookie  <span class="comment">//用来操作Cookie</span></div></pre></td></tr></table></figure>
<h4 id="1-3-2-Document节点的方法"><a href="#1-3-2-Document节点的方法" class="headerlink" title="1.3.2 Document节点的方法"></a>1.3.2 Document节点的方法</h4><ul>
<li><p>(1)读写方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.open()  <span class="comment">//用于新建并打开一个文档</span></div><div class="line"><span class="built_in">document</span>.close()  <span class="comment">//不安比open方法所新建的文档</span></div><div class="line"><span class="built_in">document</span>.write()  <span class="comment">//用于向当前文档写入内容</span></div><div class="line"><span class="built_in">document</span>.writeIn()  <span class="comment">//用于向当前文档写入内容，尾部添加换行符。</span></div></pre></td></tr></table></figure>
</li>
<li><p>(2)查找节点</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.querySelector(selectors)  <span class="comment">//接受一个CSS选择器作为参数，返回第一个匹配该选择器的元素节点。</span></div><div class="line"><span class="built_in">document</span>.querySelectorAll(selectors)  <span class="comment">//接受一个CSS选择器作为参数，返回所有匹配该选择器的元素节点。</span></div><div class="line"><span class="built_in">document</span>.getElementsByTagName(tagName)  <span class="comment">//返回所有指定HTML标签的元素</span></div><div class="line"><span class="built_in">document</span>.getElementsByClassName(className)  <span class="comment">//返回包括了所有class名字符合指定条件的元素</span></div><div class="line"><span class="built_in">document</span>.getElementsByName(name)  <span class="comment">//用于选择拥有name属性的HTML元素（比如&lt;form&gt;、&lt;radio&gt;、&lt;img&gt;、&lt;frame&gt;、&lt;embed&gt;和&lt;object&gt;等）</span></div><div class="line"><span class="built_in">document</span>.getElementById(id)  <span class="comment">//返回匹配指定id属性的元素节点。</span></div><div class="line"><span class="built_in">document</span>.elementFromPoint(x,y)  <span class="comment">//返回位于页面指定位置最上层的Element子节点。</span></div></pre></td></tr></table></figure>
</li>
<li><p>(3)生成节点</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.createElement(tagName)  <span class="comment">//用来生成HTML元素节点。</span></div><div class="line"><span class="built_in">document</span>.createTextNode(text)  <span class="comment">//用来生成文本节点</span></div><div class="line"><span class="built_in">document</span>.createAttribute(name)  <span class="comment">//生成一个新的属性对象节点，并返回它。</span></div><div class="line"><span class="built_in">document</span>.createDocumentFragment()  <span class="comment">//生成一个DocumentFragment对象</span></div></pre></td></tr></table></figure>
</li>
<li><p>(4)事件方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.createEvent(type)  <span class="comment">//生成一个事件对象，该对象能被element.dispatchEvent()方法使用</span></div><div class="line"><span class="built_in">document</span>.addEventListener(type,listener,capture)  <span class="comment">//注册事件</span></div><div class="line"><span class="built_in">document</span>.removeEventListener(type,listener,capture)  <span class="comment">//注销事件</span></div><div class="line"><span class="built_in">document</span>.dispatchEvent(event)  <span class="comment">//触发事件</span></div></pre></td></tr></table></figure>
</li>
<li><p>(5)其他</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.hasFocus()  <span class="comment">//返回一个布尔值，表示当前文档之中是否有元素被激活或获得焦点。</span></div><div class="line"><span class="built_in">document</span>.adoptNode(externalNode)  <span class="comment">//将某个节点，从其原来所在的文档移除，插入当前文档，并返回插入后的新节点。</span></div><div class="line"><span class="built_in">document</span>.importNode(externalNode, deep)  <span class="comment">//从外部文档拷贝指定节点，插入当前文档。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Element节点"><a href="#Element节点" class="headerlink" title="Element节点"></a>Element节点</h3><h4 id="Element节点属性"><a href="#Element节点属性" class="headerlink" title="Element节点属性"></a>Element节点属性</h4><ul>
<li><p>(1)特性属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Element.attributes  <span class="comment">//返回当前元素节点的所有属性节点</span></div><div class="line">Element.id  <span class="comment">//返回指定元素的id属性，可读写</span></div><div class="line">Element.tagName  <span class="comment">//返回指定元素的大写标签名</span></div><div class="line">Element.innerHTML  <span class="comment">//返回该元素包含的HTML代码，可读写</span></div><div class="line">Element.outerHTML  <span class="comment">//返回指定元素节点的所有HTML代码，包括它自身和包含的的所有子元素，可读写</span></div><div class="line">Element.className  <span class="comment">//返回当前元素的class属性，可读写</span></div><div class="line">Element.classList  <span class="comment">//返回当前元素节点的所有class集合</span></div><div class="line">Element.dataset  <span class="comment">//返回元素节点中所有的data-*属性。</span></div></pre></td></tr></table></figure>
</li>
<li><p>(2)尺寸属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Element.clientHeight  <span class="comment">//返回元素节点可见部分的高度</span></div><div class="line">Element.clientWidth  <span class="comment">//返回元素节点可见部分的宽度</span></div><div class="line">Element.clientLeft  <span class="comment">//返回元素节点左边框的宽度</span></div><div class="line">Element.clientTop  <span class="comment">//返回元素节点顶部边框的宽度</span></div><div class="line">Element.scrollHeight  <span class="comment">//返回元素节点的总高度</span></div><div class="line">Element.scrollWidth  <span class="comment">//返回元素节点的总宽度</span></div><div class="line">Element.scrollLeft  <span class="comment">//返回元素节点的水平滚动条向右滚动的像素数值,通过设置这个属性可以改变元素的滚动位置</span></div><div class="line">Element.scrollTop  <span class="comment">//返回元素节点的垂直滚动向下滚动的像素数值</span></div><div class="line">Element.offsetHeight  <span class="comment">//返回元素的垂直高度(包含border,padding)</span></div><div class="line">Element.offsetWidth    <span class="comment">//返回元素的水平宽度(包含border,padding)</span></div><div class="line">Element.offsetLeft    <span class="comment">//返回当前元素左上角相对于Element.offsetParent节点的垂直偏移</span></div><div class="line">Element.offsetTop  <span class="comment">//返回水平位移</span></div><div class="line">Element.style  <span class="comment">//返回元素节点的行内样式</span></div></pre></td></tr></table></figure>
</li>
<li><p>(3)节点相关属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Element.children  <span class="comment">//包括当前元素节点的所有子元素</span></div><div class="line">Element.childElementCount  <span class="comment">//返回当前元素节点包含的子HTML元素节点的个数</span></div><div class="line">Element.firstElementChild  <span class="comment">//返回当前节点的第一个Element子节点  </span></div><div class="line">Element.lastElementChild  <span class="comment">//返回当前节点的最后一个Element子节点  </span></div><div class="line">Element.nextElementSibling  <span class="comment">//返回当前元素节点的下一个兄弟HTML元素节点</span></div><div class="line">Element.previousElementSibling  <span class="comment">//返回当前元素节点的前一个兄弟HTML节点</span></div><div class="line">Element.offsetParent  <span class="comment">//返回当前元素节点的最靠近的、并且CSS的position属性不等于static的父元素。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="1-4-2-Element节点的方法"><a href="#1-4-2-Element节点的方法" class="headerlink" title="1.4.2 Element节点的方法"></a>1.4.2 Element节点的方法</h4><ul>
<li><p>(1)位置方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">getBoundingClientRect()  </div><div class="line"><span class="comment">// getBoundingClientRect返回一个对象，包含top,left,right,bottom,width,height // width、height 元素自身宽高</span></div><div class="line"><span class="comment">// top 元素上外边界距窗口最上面的距离</span></div><div class="line"><span class="comment">// right 元素右外边界距窗口最上面的距离</span></div><div class="line"><span class="comment">// bottom 元素下外边界距窗口最上面的距离</span></div><div class="line"><span class="comment">// left 元素左外边界距窗口最上面的距离</span></div><div class="line"><span class="comment">// width 元素自身宽(包含border,padding) </span></div><div class="line"><span class="comment">// height 元素自身高(包含border,padding) </span></div><div class="line"></div><div class="line">getClientRects()  <span class="comment">//返回当前元素在页面上形参的所有矩形。</span></div><div class="line"></div><div class="line"><span class="comment">// 元素在页面上的偏移量  </span></div><div class="line"><span class="keyword">var</span> rect = el.getBoundingClientRect()  </div><div class="line"><span class="keyword">return</span> &#123;  </div><div class="line">  <span class="attr">top</span>: rect.top + <span class="built_in">document</span>.body.scrollTop,  </div><div class="line">  <span class="attr">left</span>: rect.left + <span class="built_in">document</span>.body.scrollLeft  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>(2)属性方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Element.getAttribute()：读取指定属性  </div><div class="line">Element.setAttribute()：设置指定属性  </div><div class="line">Element.hasAttribute()：返回一个布尔值，表示当前元素节点是否有指定的属性  </div><div class="line">Element.removeAttribute()：移除指定属性</div></pre></td></tr></table></figure>
</li>
<li><p>(3)查找方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Element.querySelector()  </div><div class="line">Element.querySelectorAll()  </div><div class="line">Element.getElementsByTagName()  </div><div class="line">Element.getElementsByClassName()</div></pre></td></tr></table></figure>
</li>
<li><p>(4)事件方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Element.addEventListener()：添加事件的回调函数  </div><div class="line">Element.removeEventListener()：移除事件监听函数  </div><div class="line">Element.dispatchEvent()：触发事件</div><div class="line"></div><div class="line"><span class="comment">//ie8</span></div><div class="line">Element.attachEvent(oneventName,listener)</div><div class="line">Element.detachEvent(oneventName,listener)</div><div class="line"></div><div class="line"><span class="comment">// event对象  </span></div><div class="line"><span class="keyword">var</span> event = <span class="built_in">window</span>.event||event;    </div><div class="line"></div><div class="line"><span class="comment">// 事件的目标节点  </span></div><div class="line"><span class="keyword">var</span> target = event.target || event.srcElement;</div><div class="line"></div><div class="line"><span class="comment">// 事件代理  </span></div><div class="line">ul.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;  </div><div class="line">  <span class="keyword">if</span> (event.target.tagName.toLowerCase() === <span class="string">'li'</span>) &#123;  </div><div class="line">    <span class="built_in">console</span>.log(event.target.innerHTML)  </div><div class="line">  &#125;  </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>其他</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Element.scrollIntoView()  <span class="comment">//滚动当前元素，进入浏览器的可见区域</span></div><div class="line"></div><div class="line"><span class="comment">//解析HTML字符串，然后将生成的节点插入DOM树的指定位置。</span></div><div class="line">Element.insertAdjacentHTML(where, htmlString); </div><div class="line">Element.insertAdjacentHTML(<span class="string">'beforeBegin'</span>, htmlString); <span class="comment">// 在该元素前插入  </span></div><div class="line">Element.insertAdjacentHTML(<span class="string">'afterBegin'</span>, htmlString); <span class="comment">// 在该元素第一个子元素前插入 </span></div><div class="line">Element.insertAdjacentHTML(<span class="string">'beforeEnd'</span>, htmlString); <span class="comment">// 在该元素最后一个子元素后面插入 </span></div><div class="line">Element.insertAdjacentHTML(<span class="string">'afterEnd'</span>, htmlString); <span class="comment">// 在该元素后插入</span></div><div class="line"></div><div class="line">Element.remove()  <span class="comment">//用于将当前元素节点从DOM中移除</span></div><div class="line">Element.focus()  <span class="comment">//用于将当前页面的焦点，转移到指定元素上</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="CSS操作"><a href="#CSS操作" class="headerlink" title="CSS操作"></a>CSS操作</h2><h3 id="类名操作"><a href="#类名操作" class="headerlink" title="类名操作"></a>类名操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Element.className  <span class="comment">//获取元素节点的类名</span></div><div class="line">Element.className += <span class="string">' '</span> + newClassName  <span class="comment">//新增一个类名</span></div><div class="line"></div><div class="line"><span class="comment">//判断是否有某个类名</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">element,className</span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(className,<span class="string">'gi'</span>).test(element.className);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//移除class</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params">element,className</span>)</span>&#123;</div><div class="line">  element.className = element.className.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(^|\\b)'</span> + className.split(<span class="string">' '</span>).join(<span class="string">'|'</span>) + <span class="string">'(\\b|$)'</span>, <span class="string">'gi'</span>),<span class="string">''</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//ie10 </span></div><div class="line">element.classList.add(className)  <span class="comment">//新增</span></div><div class="line">element.classList.remove(className)  <span class="comment">//删除</span></div><div class="line">element.classList.contains(className)  <span class="comment">//是否包含</span></div><div class="line">element.classList.toggle(className)  <span class="comment">//toggle class</span></div></pre></td></tr></table></figure>
<h3 id="sytle操作"><a href="#sytle操作" class="headerlink" title="sytle操作"></a>sytle操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">element.setAttribute(<span class="string">'style'</span>,<span class="string">''</span>)</div><div class="line"></div><div class="line">element.style.backgroundColor = <span class="string">'red'</span></div><div class="line"></div><div class="line">element.style.cssText <span class="comment">//用来读写或删除整个style属性</span></div><div class="line"></div><div class="line">element.style.setProperty(propertyName,value)  <span class="comment">//设置css属性</span></div><div class="line">element.style.getPropertyValue(property)  <span class="comment">//获取css属性</span></div><div class="line">element.style.removeProperty(property)  <span class="comment">//删除css属性</span></div><div class="line">操作非内联样式</div><div class="line"><span class="comment">//ie8</span></div><div class="line">element.currentStyle[attrName]</div><div class="line"><span class="comment">//ie9+</span></div><div class="line"><span class="built_in">window</span>.getComputedStyle(el,<span class="literal">null</span>)[attrName] </div><div class="line"><span class="built_in">window</span>.getComputedStyle(el,<span class="literal">null</span>).getPropertyValue(attrName)</div><div class="line"><span class="comment">//伪类</span></div><div class="line"><span class="built_in">window</span>.getComputedStyle(el,<span class="string">':after'</span>)[attrName]</div></pre></td></tr></table></figure>
<h2 id="三、对象"><a href="#三、对象" class="headerlink" title="三、对象"></a>三、对象</h2><h3 id="3-1-Object对象"><a href="#3-1-Object对象" class="headerlink" title="3.1 Object对象"></a>3.1 Object对象</h3><ul>
<li><p>(1)对象实例对象</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</div></pre></td></tr></table></figure>
</li>
<li><p>(2)属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.prototype  <span class="comment">//返回原型对象</span></div></pre></td></tr></table></figure>
</li>
<li><p>(3)方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.keys(o)  <span class="comment">//遍历对象的可枚举属性</span></div><div class="line"><span class="built_in">Object</span>.getOwnPropertyName(o)  <span class="comment">//遍历对象不可枚举的属性</span></div></pre></td></tr></table></figure>
</li>
<li><p>对象实例的方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">valueOf()：返回当前对象对应的值。  </div><div class="line">toString()：返回当前对象对应的字符串形式。  </div><div class="line">toLocaleString()：返回当前对象对应的本地字符串形式。  </div><div class="line">hasOwnProperty()：判断某个属性是否为当前对象自身的属性，还是继承自原型对象的属性。 </div><div class="line">isPrototypeOf()：判断当前对象是否为另一个对象的原型。</div><div class="line">propertyIsEnumerable()：判断某个属性是否可枚举。</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-2-Array对象"><a href="#3-2-Array对象" class="headerlink" title="3.2 Array对象"></a>3.2 Array对象</h3><ul>
<li><p>(1)生成实例对象</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>();</div></pre></td></tr></table></figure>
</li>
<li><p>(2)属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a.length</div></pre></td></tr></table></figure>
</li>
<li><p>(3) Array.isArray()</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.isArray(a)  <span class="comment">//用来判断一个值是否为数组</span></div></pre></td></tr></table></figure>
</li>
<li><p>(4) Array实例的方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">a.valueof()  <span class="comment">//返回数组本身</span></div><div class="line">a.toString()  <span class="comment">//返回数组的字符串形式</span></div><div class="line">a.push(value,vlaue....)  <span class="comment">//用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。</span></div><div class="line">pop()  <span class="comment">//用于删除数组的最后一个元素，并返回该元素</span></div><div class="line">join()  <span class="comment">//以参数作为分隔符，将所有数组成员组成一个字符串返回。如果不提供参数，默认用逗号分隔。</span></div><div class="line">concat()  <span class="comment">//用于多个数组的合并。它将新数组的成员，添加到原数组的尾部，然后返回一个新数组，原数组不变。</span></div><div class="line">shift()  <span class="comment">//用于删除数组的第一个元素，并返回该元素。</span></div><div class="line">unshift(value)  <span class="comment">//用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度。</span></div><div class="line">reverse()  <span class="comment">//用于颠倒数组中元素的顺序，返回改变后的数组</span></div><div class="line">slice(start_index, upto_index);  <span class="comment">//用于提取原数组的一部分，返回一个新数组，原数组不变。第一个参数为起始位置（从0开始），第二个参数为终止位置（但该位置的元素本身不包括在内）。如果省略第二个参数，则一直返回到原数组的最后一个成员。负数表示倒数第几个。</span></div><div class="line">splice(index, count_to_remove, addElement1, addElement2, ...);  <span class="comment">//用于删除原数组的一部分成员，并可以在被删除的位置添加入新的数组成员，返回值是被删除的元素。第一个参数是删除的起始位置，第二个参数是被删除的元素个数。如果后面还有更多的参数，则表示这些就是要被插入数组的新元素。</span></div><div class="line">sort()  <span class="comment">//对数组成员进行排序，默认是按照字典顺序排序。排序后，原数组将被改变。如果想让sort方法按照自定义方式排序，可以传入一个函数作为参数，表示按照自定义方法进行排序。该函数本身又接受两个参数，表示进行比较的两个元素。如果返回值大于0，表示第一个元素排在第二个元素后面；其他情况下，都是第一个元素排在第二个元素前面。</span></div><div class="line">map()  <span class="comment">//对数组的所有成员依次调用一个函数，根据函数结果返回一个新数组。</span></div><div class="line">map(elem,index,arr)  <span class="comment">//map方法接受一个函数作为参数。该函数调用时，map方法会将其传入三个参数，分别是当前成员、当前位置和数组本身。</span></div><div class="line">forEach()  <span class="comment">//遍历数组的所有成员，执行某种操作,参数是一个函数。它接受三个参数，分别是当前位置的值、当前位置的编号和整个数组。</span></div><div class="line">filter()  <span class="comment">//参数是一个函数，所有数组成员依次执行该函数，返回结果为true的成员组成一个新数组返回。该方法不会改变原数组。</span></div><div class="line">some()    <span class="comment">//用来判断数组成员是否符合某种条件。接受一个函数作为参数，所有数组成员依次执行该函数，返回一个布尔值。该函数接受三个参数，依次是当前位置的成员、当前位置的序号和整个数组。只要有一个数组成员的返回值是true，则整个some方法的返回值就是true，否则false。</span></div><div class="line">every()  <span class="comment">//用来判断数组成员是否符合某种条件。接受一个函数作为参数，所有数组成员依次执行该函数，返回一个布尔值。该函数接受三个参数，依次是当前位置的成员、当前位置的序号和整个数组。所有数组成员的返回值都是true，才返回true，否则false。</span></div><div class="line">reduce()  <span class="comment">//依次处理数组的每个成员，最终累计为一个值。从左到右处理（从第一个成员到最后一个成员）</span></div><div class="line">reduceRight()  <span class="comment">//依次处理数组的每个成员，最终累计为一个值。从右到左（从最后一个成员到第一个成员）</span></div><div class="line">indexOf(s)  <span class="comment">//返回给定元素在数组中第一次出现的位置，如果没有出现则返回-1。可以接受第二个参数，表示搜索的开始位置</span></div><div class="line">lastIndexOf()  <span class="comment">//返回给定元素在数组中最后一次出现的位置，如果没有出现则返回-1。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-3Number对象"><a href="#3-3Number对象" class="headerlink" title="3.3Number对象"></a>3.3Number对象</h3><ul>
<li><p>(1)生成对象</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n = <span class="keyword">new</span> <span class="built_in">Number</span>()</div></pre></td></tr></table></figure>
</li>
<li><p>(2)Number对象属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Number</span>.POSITIVE_INFINITY：正的无限，指向<span class="literal">Infinity</span>。  </div><div class="line"><span class="built_in">Number</span>.NEGATIVE_INFINITY：负的无限，指向-<span class="literal">Infinity</span>。  </div><div class="line"><span class="built_in">Number</span>.NaN：表示非数值，指向<span class="literal">NaN</span>。  </div><div class="line"><span class="built_in">Number</span>.MAX_VALUE：表示最大的正数，相应的，最小的负数为-<span class="built_in">Number</span>.MAX_VALUE。  </div><div class="line"><span class="built_in">Number</span>.MIN_VALUE：表示最小的正数（即最接近<span class="number">0</span>的正数，在<span class="number">64</span>位浮点数体系中为<span class="number">5e-324</span>），相应的，最接近<span class="number">0</span>的负数为-<span class="built_in">Number</span>.MIN_VALUE。  </div><div class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER：表示能够精确表示的最大整数，即<span class="number">9007199254740991</span>。  </div><div class="line"><span class="built_in">Number</span>.MIN_SAFE_INTEGER：表示能够精确表示的最小整数，即<span class="number">-9007199254740991</span>。</div></pre></td></tr></table></figure>
</li>
<li><p>(4)Number对象实例的方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">toString()  <span class="comment">//用来将一个数值转为字符串形式.可以接受一个参数，表示输出的进制。如果省略这个参数，默认将数值先转为十进制，再输出字符串；否则，就根据参数指定的进制，将一个数字转化成某个进制的字符串。</span></div><div class="line">toFixed()  <span class="comment">//用于将一个数转为指定位数的小数，返回这个小数对应的字符串。</span></div><div class="line">toExponential()  <span class="comment">//用于将一个数转为科学计数法形式。可传入一个参数，参数表示小数点后有效数字的位数，范围为0到20，超出这个范围，会抛出一个RangeError。</span></div><div class="line">toPrecision()  <span class="comment">//用于将一个数转为指定位数的有效数字</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h3><ul>
<li><p>(1)生成实例对象</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">String</span>();</div></pre></td></tr></table></figure>
</li>
<li><p>(2)String对象属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s.length</div></pre></td></tr></table></figure>
</li>
<li><p>(3)方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">s.chatAt(index)  <span class="comment">//返回指定位置的字符</span></div><div class="line">s.fromCharCode()    <span class="comment">//该方法的参数是一系列Unicode码点，返回对应的字符串。</span></div><div class="line">s.charCodeAt(index)    <span class="comment">//返回给定位置字符的Unicode码点（十进制表示）</span></div><div class="line">s.concat(s2)  <span class="comment">//用于连接两个字符串</span></div><div class="line">s.slice(start,end)  <span class="comment">//用于从原字符串取出子字符串并返回，不改变原字符串。第一个参数是子字符串的开始位置，第二个参数是子字符串的结束位置（不含该位置）。如果参数是负值，表示从结尾开始倒数计算的位置，即该负值加上字符串长度。</span></div><div class="line">s.substring(start,end)  <span class="comment">//用于从原字符串取出子字符串并返回，不改变原字符串.第一个参数表示子字符串的开始位置，第二个位置表示结束位置。</span></div><div class="line">s.substr(start,length)  <span class="comment">//用于从原字符串取出子字符串并返回，不改变原字符串。第一个参数是子字符串的开始位置，第二个参数是子字符串的长度。如果第一个参数是负数，表示倒数计算的字符位置。如果第二个参数是负数，将被自动转为0，因此会返回空字符串。</span></div><div class="line">s.indexOf(s)  <span class="comment">//返回给定元素在字符串中第一次出现的位置，如果没有出现则返回-1。可以接受第二个参数，表示搜索的开始位置 </span></div><div class="line">s.lastIndexOf()  <span class="comment">//返回给定元素在字符串中最后一次出现的位置，如果没有出现则返回-1。</span></div><div class="line">s.trim()  <span class="comment">//用于去除字符串两端的空格，返回一个新字符串</span></div><div class="line">s.toLowerCase()  <span class="comment">//用于将一个字符串全部转为小写,返回一个新字符串，不改变原字符串。</span></div><div class="line">s.toUpperCase()  <span class="comment">//全部转为大写</span></div><div class="line">s.localeCompare(s2)  <span class="comment">//用于比较两个字符串。它返回一个整数，如果小于0，表示第一个字符串小于第二个字符串；如果等于0，表示两者相等；如果大于0，表示第一个字符串大于第二个字符串。</span></div><div class="line">s.match(regexp)  <span class="comment">//用于确定原字符串是否匹配某个子字符串，返回一个数组，成员为匹配的第一个字符串。如果没有找到匹配，则返回null。</span></div><div class="line">s.search()  <span class="comment">//返回值为匹配的第一个位置。如果没有找到匹配，则返回-1。</span></div><div class="line">s.replace(oldValue,newValue)  <span class="comment">//用于替换匹配的子字符串，一般情况下只替换第一个匹配（除非使用带有g修饰符的正则表达式）。</span></div><div class="line">s.split()  <span class="comment">//按照给定规则分割字符串，返回一个由分割出来的子字符串组成的数组。还可传入第二个参数，决定了返回数组的成员数。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-5-Math对象"><a href="#3-5-Math对象" class="headerlink" title="3.5 Math对象"></a>3.5 Math对象</h3><ul>
<li><p>(1)属性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Math</span>.E：常数e。  </div><div class="line"><span class="built_in">Math</span>.LN2：<span class="number">2</span>的自然对数。  </div><div class="line"><span class="built_in">Math</span>.LN10：<span class="number">10</span>的自然对数。  </div><div class="line"><span class="built_in">Math</span>.LOG2E：以<span class="number">2</span>为底的e的对数。  </div><div class="line"><span class="built_in">Math</span>.LOG10E：以<span class="number">10</span>为底的e的对数。  </div><div class="line"><span class="built_in">Math</span>.PI：常数Pi。  </div><div class="line"><span class="built_in">Math</span>.SQRT1_2：<span class="number">0.5</span>的平方根。  </div><div class="line"><span class="built_in">Math</span>.SQRT2：<span class="number">2</span>的平方根。</div></pre></td></tr></table></figure>
</li>
<li><p>(2)数学方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Math</span>.abs()：返回参数的绝对值  </div><div class="line"><span class="built_in">Math</span>.ceil()：向上取整，接受一个参数，返回大于该参数的最小整数。 </div><div class="line"><span class="built_in">Math</span>.floor()：向下取整  </div><div class="line"><span class="built_in">Math</span>.max(n,n1,...)：可接受多个参数，返回最大值  </div><div class="line"><span class="built_in">Math</span>.min(n,n1,..)：可接受多个参数，返回最小值  </div><div class="line"><span class="built_in">Math</span>.pow(n,e)：指数运算, 返回以第一个参数为底数、第二个参数为幂的指数值。 </div><div class="line"><span class="built_in">Math</span>.sqrt()：返回参数值的平方根。如果参数是一个负值，则返回<span class="literal">NaN</span>。  </div><div class="line"><span class="built_in">Math</span>.log()：返回以e为底的自然对数值。</div><div class="line"><span class="built_in">Math</span>.exp()：返回e的指数，也就是常数e的参数次方。</div><div class="line"><span class="built_in">Math</span>.round()：四舍五入  </div><div class="line"><span class="built_in">Math</span>.random()：返回<span class="number">0</span>到<span class="number">1</span>之间的一个伪随机数，可能等于<span class="number">0</span>，但是一定小于<span class="number">1</span>。</div></pre></td></tr></table></figure>
</li>
<li><p>(3)三角函数方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Math</span>.sin()：返回参数的正弦  </div><div class="line"><span class="built_in">Math</span>.cos()：返回参数的余弦  </div><div class="line"><span class="built_in">Math</span>.tan()：返回参数的正切  </div><div class="line"><span class="built_in">Math</span>.asin()：返回参数的反正弦（弧度值）  </div><div class="line"><span class="built_in">Math</span>.acos()：返回参数的反余弦（弧度值）  </div><div class="line"><span class="built_in">Math</span>.atan()：返回参数的反正切（弧度值）</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-6-JSON对象"><a href="#3-6-JSON对象" class="headerlink" title="3.6 JSON对象"></a>3.6 JSON对象</h3><ul>
<li>(1)方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">JSON</span>.stringify()  </div><div class="line"><span class="comment">//用于将一个值转为字符串。该字符串应该符合JSON格式，并且可以被JSON.parse方法还原。</span></div><div class="line"><span class="comment">//（JSON.stringify(obj, selectedProperties)）还可以接受一个数组，作为第二个参数，指定需要转成字符串的属性。</span></div><div class="line"><span class="comment">//还可以接受第三个参数，用于增加返回的JSON字符串的可读性。如果是数字，表示每个属性前面添加的空格（最多不超过10个）；如果是字符串（不超过10个字符），则该字符串会添加在每行前面。</span></div><div class="line"></div><div class="line"><span class="built_in">JSON</span>.parse()  <span class="comment">//用于将JSON字符串转化成对象。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-7-console对象"><a href="#3-7-console对象" class="headerlink" title="3.7 console对象"></a>3.7 console对象</h3><ul>
<li>(1)方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">onsole.log(text,text2,...)  <span class="comment">//用于在console窗口输出信息。它可以接受多个参数，将它们的结果连接起来输出。如果第一个参数是格式字符串（使用了格式占位符），console.log方法将依次用后面的参数替换占位符，然后再进行输出。</span></div><div class="line"><span class="built_in">console</span>.info()  <span class="comment">//在console窗口输出信息，同时，会在输出信息的前面，加上一个蓝色图标。</span></div><div class="line"><span class="built_in">console</span>.debug()  <span class="comment">//在console窗口输出信息，同时，会在输出信息的前面，加上一个蓝色图标。</span></div><div class="line"><span class="built_in">console</span>.warn()  <span class="comment">//输出信息时，在最前面加一个黄色三角，表示警告；</span></div><div class="line"><span class="built_in">console</span>.error()  <span class="comment">//输出信息时，在最前面加一个红色的叉，表示出错，同时会显示错误发生的堆栈</span></div><div class="line"><span class="built_in">console</span>.table()  <span class="comment">//可以将复合类型的数据转为表格显示。</span></div><div class="line"><span class="built_in">console</span>.count()  <span class="comment">//用于计数，输出它被调用了多少次。</span></div><div class="line"><span class="built_in">console</span>.dir()    <span class="comment">//用来对一个对象进行检查（inspect），并以易于阅读和打印的格式显示。</span></div><div class="line"><span class="built_in">console</span>.dirxml()  <span class="comment">//用于以目录树的形式，显示DOM节点。</span></div><div class="line"><span class="built_in">console</span>.assert()  <span class="comment">//接受两个参数，第一个参数是表达式，第二个参数是字符串。只有当第一个参数为false，才会输出第二个参数，否则不会有任何结果。</span></div><div class="line"></div><div class="line"><span class="comment">//这两个方法用于计时，可以算出一个操作所花费的准确时间。</span></div><div class="line"><span class="built_in">console</span>.time()</div><div class="line"><span class="built_in">console</span>.timeEnd()</div><div class="line"><span class="comment">//time方法表示计时开始，timeEnd方法表示计时结束。它们的参数是计时器的名称。调用timeEnd方法之后，console窗口会显示“计时器名称: 所耗费的时间”。</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.profile()  <span class="comment">//用来新建一个性能测试器（profile），它的参数是性能测试器的名字。</span></div><div class="line"><span class="built_in">console</span>.profileEnd()  <span class="comment">//用来结束正在运行的性能测试器。</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.group()</div><div class="line"><span class="built_in">console</span>.groupend()</div><div class="line"><span class="comment">//上面这两个方法用于将显示的信息分组。它只在输出大量信息时有用，分在一组的信息，可以用鼠标折叠/展开。</span></div><div class="line"><span class="built_in">console</span>.groupCollapsed()  <span class="comment">//用于将显示的信息分组，该组的内容，在第一次显示时是收起的（collapsed），而不是展开的。</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.trace()  <span class="comment">//显示当前执行的代码在堆栈中的调用路径。</span></div><div class="line"><span class="built_in">console</span>.clear()  <span class="comment">//用于清除当前控制台的所有输出，将光标回置到第一行。</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript常用API合集&quot;&gt;&lt;a href=&quot;#JavaScript常用API合集&quot; class=&quot;headerlink&quot; title=&quot;JavaScript常用API合集&quot;&gt;&lt;/a&gt;JavaScript常用API合集&lt;/h1&gt;&lt;h2 id=&quot;一、节点&quot;
    
    </summary>
    
    
      <category term="javascript" scheme="http://kingle.online/tags/javascript/"/>
    
      <category term="api" scheme="http://kingle.online/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>Mac系统下非常好用的软件和工具</title>
    <link href="http://kingle.online/2018/01/16/Mac%E7%B3%BB%E7%BB%9F%E4%B8%8B%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7/"/>
    <id>http://kingle.online/2018/01/16/Mac系统下非常好用的软件和工具/</id>
    <published>2018-01-15T20:04:08.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Awesome-Mac"><a href="#Awesome-Mac" class="headerlink" title="Awesome Mac"></a>Awesome Mac</h1><p>这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="##编辑器">编辑器</a></li>
<li><a href="#开发者工具">开发者工具</a></li>
<li><a href="#测试工具">测试工具</a></li>
<li><a href="#命令行工具">命令行工具</a></li>
<li><a href="#版本控制">版本控制</a></li>
<li><a href="#数据库">数据库</a></li>
<li><a href="#设计和产品">设计和产品</a></li>
<li><a href="#虚拟机">虚拟机</a></li>
<li><a href="#通信">通信</a></li>
<li><a href="#数据恢复">数据恢复</a></li>
<li><a href="#音频和视频">音频和视频</a></li>
<li><a href="#书签阅读写作">书签阅读写作</a></li>
<li><a href="#ftp客户端">FTP客户端</a></li>
<li><a href="#软件打包工具">软件打包工具</a></li>
<li><a href="#制作电子书">制作电子书</a></li>
<li><a href="#下载工具">下载工具</a></li>
<li><a href="#网盘">网盘</a></li>
<li><a href="#输入法">输入法</a></li>
<li><a href="#浏览器">浏览器</a></li>
<li><a href="#翻译工具">翻译工具</a></li>
<li><a href="#科学上网">科学上网</a></li>
<li><a href="#其它实用工具">其它实用工具</a></li>
<li><a href="#远程协助">远程协助</a></li>
<li><a href="#quicklook插件">QuickLook插件</a></li>
<li><a href="#第三方应用市场app">第三方应用市场APP</a></li>
<li><a href="#mac软件下载网站">Mac软件下载网站</a></li>
</ul>
<h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p><em>一种用于编辑纯文本文件的程序，建议使用免费开源的编辑器</em></p>
<ul>
<li><a href="https://atom.io" target="_blank" rel="external">Atom</a> - GitHub推出的开源编辑器</li>
<li><a href="http://www.sublimetext.com/3" target="_blank" rel="external">Sublime Text</a> - 一个比较简洁大方带插件管理系统的流行编辑器</li>
<li><a href="http://brackets.io" target="_blank" rel="external">Brackets</a> - Adobe推出的Brackets免费/开源编辑器。(<a href="https://github.com/adobe/brackets/" target="_blank" rel="external">https://github.com/adobe/brackets/</a>) </li>
<li><a href="http://espressoapp.com/" target="_blank" rel="external">Espresso</a> - Web编程利器，具备了快速且强大的编辑功能、专业检查与分 类、即时预览编辑成果、发布与同步功能等。</li>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="external">Visual Studio Code</a> - 微软推出的免费/开源编辑器，TypeScript支持杠杠的，</li>
<li><a href="https://www.emacswiki.org/emacs/EmacsForMacOS" target="_blank" rel="external">Emacs</a> - Emacs是基于控制台的编辑器和高度可定制的。</li>
<li><a href="http://lighttable.com/" target="_blank" rel="external">LightTable</a> - 下一代代码编辑器。(<a href="https://github.com/LightTable/LightTable" target="_blank" rel="external">https://github.com/LightTable/LightTable</a>) </li>
<li><a href="https://macromates.com" target="_blank" rel="external">TextMate</a> - 文本编辑器软件，与BBedit一起并称苹果机上的emacs和vim，这是以前。</li>
<li><a href="http://www.barebones.com/products/bbedit/" target="_blank" rel="external">BBEdit</a> - 强大的文件编辑器，用于编辑文件，文本文件及程序源代码。</li>
<li><a href="http://panic.com/coda/" target="_blank" rel="external">Coda2</a> - 编写Web应用长得漂亮的编辑器。</li>
<li><a href="http://www.vim.org/" target="_blank" rel="external">Vim</a> - Vim古老命令行中使用的编辑器</li>
<li><a href="http://vimr.org/" target="_blank" rel="external">Vimr</a> - Vim客户端，升级Vim体验。(<a href="https://github.com/qvacua/vimr/" target="_blank" rel="external">https://github.com/qvacua/vimr/</a>)</li>
<li><a href="https://github.com/onivim/oni" target="_blank" rel="external">ONI</a> - 由Neovim提供的IDE。(<a href="https://github.com/onivim/oni" target="_blank" rel="external">https://github.com/onivim/oni</a>) </li>
<li><a href="https://micro-editor.github.io" target="_blank" rel="external">micro</a> - 一个现代直观的基于终端的文本编辑器。(<a href="https://github.com/ory/editor" target="_blank" rel="external">https://github.com/ory/editor</a>) </li>
<li><a href="http://www.dcloud.io/" target="_blank" rel="external">HBuilder</a> - HBuilder是DCloud（数字天堂）推出的一款支持HTML5的Web开发IDE。</li>
<li><a href="https://codingfriends.github.io/Tincta/" target="_blank" rel="external">Tincta</a> - 一个免费的文本编辑器。(<a href="https://github.com/CodingFriends/Tincta" target="_blank" rel="external">https://github.com/CodingFriends/Tincta</a>) </li>
<li><a href="https://developer.apple.com/xcode/" target="_blank" rel="external">Xcode</a> - 开发iOS和MacOS基本IDE。 </li>
<li><a href="https://www.jetbrains.com/objc/" target="_blank" rel="external">AppCode</a> - 适用于iOS / macOS开发的智能IDE </li>
<li><a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">IntelliJ IDEA</a> - 一款Java开发集成环境。(<strong>学生</strong>免费)</li>
<li><a href="http://www.jetbrains.com/webstorm/" target="_blank" rel="external">Webstorm</a> - 是JetBrains公司旗下一款JavaScript开发工具。<strong>学生</strong>免费，<a href="https://www.jetbrains.com/student/" target="_blank" rel="external">点击这里</a> 查看更多。<ul>
<li><a href="https://plugins.jetbrains.com/plugin/6098-nodejs" target="_blank" rel="external">NodeJS</a> - 集成<code>Node.js</code>，你肯定需要它，很多功能需要它。</li>
<li><a href="https://plugins.jetbrains.com/plugin/7294-editorconfig" target="_blank" rel="external">EditorConfig</a> - 帮助开发者在不同的编辑器和IDE之间定义和维护一致的代码风格。</li>
<li><a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui" target="_blank" rel="external">Material Theme UI</a> - Google为React开发的主题。</li>
</ul>
</li>
<li><a href="https://www.decosoftware.com/" target="_blank" rel="external">Deco IDE</a> - React Native IDE 支持控件拖拽界面实时变更。(<a href="https://github.com/decosoftware/deco-ide" target="_blank" rel="external">https://github.com/decosoftware/deco-ide</a>)</li>
<li><a href="https://www.visualstudio.com/vs/visual-studio-mac/" target="_blank" rel="external">Xamarin Studio</a> - 免费的跨平台的C# IDE。支持iOS、Android和.net开发。(<a href="https://github.com/mono/monodevelop" target="_blank" rel="external">https://github.com/mono/monodevelop</a>) </li>
<li><a href="https://netbeans.org/" target="_blank" rel="external">NetBeans IDE</a> - 免费、开源的IDE，主要用于java开发，可支持多种语言和框架。<a href="https://netbeans.org/community/sources/" target="_blank" rel="external">https://netbeans.org/community/sources/</a>) </li>
<li><a href="https://developer.android.com/studio/index.html" target="_blank" rel="external">Android Studio</a> - Android的官方IDE，基于Intellij IDEA。 (<a href="http://tools.android.com/" target="_blank" rel="external">http://tools.android.com/</a>)</li>
<li><a href="https://www.visualstudio.com/vs/visual-studio-mac/" target="_blank" rel="external">Visual Studio Community for Mac</a> - 免费，功能齐全的IDE为学生，开源和个人开发人员。</li>
<li><a href="https://www.eclipse.org" target="_blank" rel="external">Eclipse</a> - 流行的开源IDE，主要用于Java，但为多种语言和平台的插件支持。</li>
<li><a href="https://coteditor.com" target="_blank" rel="external">CotEditor</a> - 轻量级的纯文本编辑器。 (<a href="https://github.com/coteditor/CotEditor/" target="_blank" rel="external">https://github.com/coteditor/CotEditor/</a>) </li>
<li><a href="https://chocolatapp.com/" target="_blank" rel="external">Chocolat</a> 轻量级本地编辑器。</li>
</ul>
<h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><ul>
<li><a href="https://weflow.io/" target="_blank" rel="external">WeFlow</a> - 一个基于 <a href="https://github.com/Tencent/tmt-workflow" target="_blank" rel="external">tmt-workflow</a> 前端工作流的开发工具。 (<a href="https://github.com/Tencent/WeFlow" target="_blank" rel="external">https://github.com/Tencent/WeFlow</a>)</li>
<li><a href="http://koala-app.com" target="_blank" rel="external">Koala</a> - 预处理器语言图形编译工具，支持Less、Sass、CoffeeScript、Compass framework 的即时编译。(<a href="https://github.com/oklai/koala/" target="_blank" rel="external">https://github.com/oklai/koala/</a>) </li>
<li><a href="https://codekitapp.com/" target="_blank" rel="external">CodeKit</a> - 自动编译Less、Sass、Stylus、CoffeeScript、Jade &amp; Haml等文件。</li>
<li><a href="https://www.paintcodeapp.com/" target="_blank" rel="external">PaintCode</a> - 将设计转换成Objective-C,Swift或C#代码。</li>
<li><a href="https://github.com/specialunderwear/Hosts.prefpane" target="_blank" rel="external">Hosts.prefpane</a> - 编辑 hosts 文件的工具。 (<a href="https://github.com/specialunderwear/Hosts.prefpane" target="_blank" rel="external">https://github.com/specialunderwear/Hosts.prefpane</a>)</li>
<li><a href="https://toolinbox.net/en/iHosts/" target="_blank" rel="external">iHosts</a> - 唯一上架 Mac App Store 的 /etc/hosts 编辑神器。 (<a href="https://itunes.apple.com/app/id1102004240?mt=12" target="_blank" rel="external">https://itunes.apple.com/app/id1102004240?mt=12</a>)</li>
<li><a href="https://oldj.github.io/SwitchHosts/" target="_blank" rel="external">SwitchHosts</a> - 一个管理、切换多个 hosts 方案的工具。(<a href="https://github.com/oldj/SwitchHosts" target="_blank" rel="external">https://github.com/oldj/SwitchHosts</a>) <em> <a href="https://github.com/2ndalpha/gasmask" target="_blank" rel="external">Gas Mask</a> - 编辑 hosts 文件的工具，更简单方便。(<a href="https://github.com/2ndalpha/gasmask" target="_blank" rel="external">https://github.com/2ndalpha/gasmask</a>)  <em>*[必备]</em></em></li>
<li><a href="http://sourcegear.com/diffmerge/" target="_blank" rel="external">DiffMerge</a> - 可视化的文件比较（也可进行目录比较）与合并工具。</li>
<li><a href="https://macpaw.com/gemini" target="_blank" rel="external">Gemini</a> - 智能的重复文件查找器。</li>
<li><a href="http://www.publicspace.net/BetterRename/" target="_blank" rel="external">BetterRename</a> - 一款强大的批量重命名工具，可以通过搜索功能改名。(<a href="https://itunes.apple.com/us/app/better-rename-9/id414209656" target="_blank" rel="external">https://itunes.apple.com/us/app/better-rename-9/id414209656</a>)</li>
<li><a href="https://github.com/jkpang/PPRows" target="_blank" rel="external">PPRows</a> - 计算你写了多少行代码。(<a href="https://github.com/jkpang/PPRows" target="_blank" rel="external">https://github.com/jkpang/PPRows</a>)</li>
<li><a href="http://www.scootersoftware.com/download.php" target="_blank" rel="external">Beyond Compare</a> - 对比两个文件夹或者文件，并将差异以颜色标示。</li>
<li><a href="http://www.kaleidoscopeapp.com/" target="_blank" rel="external">Kaleidoscope</a> - 一款很强大的文本文件和图像比较工具，同时和 git、svn 等版本控制工具能够完美的结合。</li>
<li><a href="https://github.com/TencentOpen/Fanvas" target="_blank" rel="external">Fanvas</a> - 把swf转为HTML5 canvas动画的系统。 (<a href="https://github.com/oklai/koala/" target="_blank" rel="external">https://github.com/oklai/koala/</a>)</li>
<li><a href="https://github.com/hschmidt/EnvPane" target="_blank" rel="external">EnvPane</a> - 图形终端查看环境变量的应用工具。 (<a href="https://github.com/hschmidt/EnvPane" target="_blank" rel="external">https://github.com/hschmidt/EnvPane</a>)</li>
<li><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash</a> - 强大到你无法想象的API离线文档软件。 <strong>[推荐] [必备]</strong></li>
<li><a href="https://github.com/nlf/dlite" target="_blank" rel="external">Dlite</a> - 简单的使用Docker的一个软件。 (<a href="https://github.com/nlf/dlite" target="_blank" rel="external">https://github.com/nlf/dlite</a>)</li>
<li><a href="https://www.renfei.org/snippets-lab/" target="_blank" rel="external">SnippetsLab</a> - 管理和组织你的代码片段。</li>
<li><a href="http://staruml.io" target="_blank" rel="external">StarUML</a> - 强大的软件建模软件。</li>
<li><a href="http://vagrantmanager.com" target="_blank" rel="external">Vagrant Manager</a> - 管理你本地服务。 (<a href="https://github.com/lanayotech/vagrant-manager/" target="_blank" rel="external">https://github.com/lanayotech/vagrant-manager/</a>)</li>
<li><a href="https://github.com/onmyway133/FinderGo" target="_blank" rel="external">FinderGo</a> Finder中快速打开终端，定位到目录 (<a href="https://github.com/onmyway133/FinderGo" target="_blank" rel="external">https://github.com/onmyway133/FinderGo</a>)</li>
<li><a href="http://localname.io/" target="_blank" rel="external">Localname</a> - 提供对本地开发服务器的访问权限。 </li>
<li><a href="https://www.zeplin.io/" target="_blank" rel="external">zeplin</a> - 前端与设计协同工作专用工具。</li>
<li><a href="http://zipzapmac.com/Go2Shell" target="_blank" rel="external">Go2Shell</a> - 从Finder打开命令行。</li>
<li><a href="https://www.vandyke.com/products/securecrt/" target="_blank" rel="external">SecureCRT</a> - 一款支持SSH、Telnet等多种协议的终端仿真程序。</li>
<li><a href="https://mjmlio.github.io/mjml-app/" target="_blank" rel="external">MJML</a> - 简化设计回应电子邮件的方式。 (<a href="https://github.com/mjmlio/mjml" target="_blank" rel="external">https://github.com/mjmlio/mjml</a>)</li>
<li><a href="http://www.texstudio.org" target="_blank" rel="external">TeXstudio</a> - 集成创建LaTeX文档的写作环境。 (<a href="https://sourceforge.net/projects/texstudio/" target="_blank" rel="external">https://sourceforge.net/projects/texstudio/</a>) </li>
<li><a href="https://www.vagrantup.com" target="_blank" rel="external">Vagrant</a> - 用来构建虚拟开发环境的工具。 (<a href="https://github.com/mitchellh/vagrant" target="_blank" rel="external">https://github.com/mitchellh/vagrant</a>) </li>
<li><a href="https://github.com/jimbojsb/launchrocket" target="_blank" rel="external">LaunchRocket</a> - 在Mac系统偏好设置中创建服务管理。 (<a href="https://sourceforge.net/projects/texstudio/" target="_blank" rel="external">https://sourceforge.net/projects/texstudio/</a>) </li>
<li><a href="https://objectivec2swift.com/#/xcode-extension/" target="_blank" rel="external">Swiftify</a> - Xcode＆Finder扩展 Objective-C转Swift代码转换器</li>
</ul>
<h4 id="正则编辑器"><a href="#正则编辑器" class="headerlink" title="正则编辑器"></a>正则编辑器</h4><ul>
<li><a href="http://krillapps.com/patterns/" target="_blank" rel="external">Patterns</a> - 正则表达式编辑器。</li>
<li><a href="https://github.com/michaeltyson/Reginald" target="_blank" rel="external">Reginald</a> - 正则表达式测试应用程序，使用 <a href="http://atastypixel.com/blog/reginald-regex-explorer/" target="_blank" rel="external">RegexKitLite</a>。(<a href="https://github.com/michaeltyson/Reginald" target="_blank" rel="external">https://github.com/michaeltyson/Reginald</a>) </li>
<li><a href="http://motionobj.com/regex/?utm_source=RegexApp&amp;utm_medium=app" target="_blank" rel="external">Regex</a> - 感觉是用过最漂亮的正则表达式测试工具。</li>
<li><a href="http://reggyapp.com/" target="_blank" rel="external">Reggy</a> - 正则表达式编辑器。(<a href="https://github.com/samsouder/reggy" target="_blank" rel="external">https://github.com/samsouder/reggy</a>) </li>
<li><a href="http://www.mactechnologies.com/index.php?page=downloads#regexrx" target="_blank" rel="external">RegExRX</a> - 正则表达式的开发工具。</li>
</ul>
<h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><ul>
<li><a href="https://www.wireshark.org" target="_blank" rel="external">Wireshark</a> - 世界上最广泛使用的网络协议分析软件。 (<a href="https://github.com/wireshark/wireshark" target="_blank" rel="external">https://github.com/wireshark/wireshark</a>) </li>
<li><a href="https://www.charlesproxy.com/" target="_blank" rel="external">Charles</a> - 一个代理工具，允许你查看所有的HTTP和HTTPS流量。</li>
<li><a href="https://github.com/james-proxy/james" target="_blank" rel="external">James</a> - 用于https和http进行查询映射请求。 (<a href="https://github.com/james-proxy/james" target="_blank" rel="external">https://github.com/james-proxy/james</a>) </li>
<li><a href="https://mitmproxy.org/" target="_blank" rel="external">mitmproxy</a> - 一款支持HTTP(S)的中间人代理工具，可在终端下运行，可用于抓包 (<a href="https://github.com/james-proxy/james" target="_blank" rel="external">https://github.com/james-proxy/james</a>) </li>
<li><a href="http://insomnia.rest/" target="_blank" rel="external">Insomnia 3.0</a> - 漂亮的HTTP请求测试工具。</li>
<li><a href="https://mmattozzi.github.io/cocoa-rest-client/" target="_blank" rel="external">Cocoa Rest Client</a> - 比Postman看起来漂亮的客户端，测试HTTP/REST endpoints。 (<a href="https://github.com/mmattozzi/cocoa-rest-client" target="_blank" rel="external">https://github.com/mmattozzi/cocoa-rest-client</a>)</li>
<li><a href="https://luckymarmot.com/paw" target="_blank" rel="external">Paw</a> - 先进的 HTTP 客户端。</li>
<li><a href="http://cellist.patr0n.us/index.html" target="_blank" rel="external">Cellist</a> - HTTP调试客户端。</li>
<li><a href="http://peacockmedia.software/mac/integrity/free.html" target="_blank" rel="external">Integrity</a> - 轻松找到无效链接。</li>
<li><a href="https://www.getpostman.com" target="_blank" rel="external">Postman</a> - Postman 帮助我们快速测试API。 <strong>[必备]</strong></li>
<li><p><a href="https://insomnia.rest/" target="_blank" rel="external">Insomnia</a> - 最直观的跨平台REST API客户端。 (<a href="https://github.com/getinsomnia/insomnia" target="_blank" rel="external">https://github.com/getinsomnia/insomnia</a>) </p>
<h2 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h2></li>
<li><p><a href="https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/#" target="_blank" rel="external">Mac OS X Manual Pages</a> - 官方Mac命令操作手册。 <strong>[必备]</strong></p>
</li>
<li><a href="https://www.termius.com/" target="_blank" rel="external">Termius</a> - 免费的终端工具，可以与windows平台的xshell媲美。 </li>
<li><a href="http://www.iterm2.com" target="_blank" rel="external">iTerm2</a> - 免费的终端工具，直接替代自带的Terminal，有非常多惊人的特性。(<a href="https://github.com/gnachman/iTerm2" target="_blank" rel="external">https://github.com/gnachman/iTerm2</a>)  <strong>[推荐] [必备]</strong> </li>
<li><a href="https://github.com/Swordfish90/cool-retro-term" target="_blank" rel="external">cool-retro-term</a> - 怀旧的命令行终端。 (<a href="https://github.com/Swordfish90/cool-retro-term" target="_blank" rel="external">https://github.com/Swordfish90/cool-retro-term</a>)</li>
<li><a href="http://ohmyz.sh" target="_blank" rel="external">Oh my zsh</a> - 拥有大量的有用的功能，助手，插件，主题，等特性的命令行工具插件。  <strong>[推荐] [必备]</strong>(<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">https://github.com/robbyrussell/oh-my-zsh</a>)</li>
<li><a href="https://github.com/wting/autojump/wiki" target="_blank" rel="external">autojump</a> - 告别又臭又长的路径名，一键直达任何目录。 (<a href="https://github.com/wting/autojump" target="_blank" rel="external">https://github.com/wting/autojump</a>) * <a href="https://github.com/nicolargo/glances" target="_blank" rel="external">Glances</a> - 在命令行中查看你系统运行状态的工具。 (<a href="https://github.com/nicolargo/glances" target="_blank" rel="external">https://github.com/nicolargo/glances</a>)</li>
<li><a href="http://www.cakebrew.com" target="_blank" rel="external">Cakebrew</a> - <a href="http://brew.sh" target="_blank" rel="external">Homebrew</a> 的客户端软件。摆脱命令方便安装、查看、卸载软件。 (<a href="https://github.com/brunophilipe/Cakebrew/" target="_blank" rel="external">https://github.com/brunophilipe/Cakebrew/</a>)</li>
<li><a href="https://720kb.github.io/ndm/" target="_blank" rel="external">ndm</a> - 查看本地<a href="http://npmjs.org/" target="_blank" rel="external">NPM</a>安装的包客户端软件。摆脱命令方便安装、查看、卸载软件。(<a href="https://github.com/720kb/ndm" target="_blank" rel="external">https://github.com/720kb/ndm</a>) </li>
<li><a href="https://github.com/shockone/black-screen" target="_blank" rel="external">Black Screen</a> - 来自 21 世纪的强大终端。 (<a href="https://github.com/shockone/black-screen" target="_blank" rel="external">https://github.com/shockone/black-screen</a>)</li>
<li><a href="https://fishshell.com/" target="_blank" rel="external">Fish Shell</a> - 智能且用户友好的命令行终端。 [推荐]</li>
<li><a href="https://github.com/oh-my-fish/oh-my-fish" target="_blank" rel="external">oh-my-fish</a> - 和<strong>Oh my zsh</strong>相似，建立在Fish Shell框架上。 [推荐]</li>
<li><a href="https://github.com/Bash-it/bash-it" target="_blank" rel="external">bash-it</a> - 一个社区的bash的框架。 </li>
<li><a href="https://swordfishslabs.wordpress.com/2014/09/03/cool-old-term-is-dead-long-live-cool-retro-term/" target="_blank" rel="external">color-retro-term</a> - 一款复古风格的终端，非常酷炫。</li>
<li><a href="https://hyperterm.org/" target="_blank" rel="external">HyperTerm</a> - 一款基于Node开发的终端软件，逼格很高。(<a href="https://github.com/zeit/hyperterm" target="_blank" rel="external">https://github.com/zeit/hyperterm</a>)</li>
<li><a href="https://github.com/mischah/itunes-remote" target="_blank" rel="external">itunes-remote</a> - 通过终端控制您的iTunes。(<a href="https://github.com/mischah/itunes-remote" target="_blank" rel="external">https://github.com/mischah/itunes-remote</a>) </li>
<li><a href="https://github.com/dbcli/mycli" target="_blank" rel="external">mycli</a> - 为MySQL命令行客户端，提供语法高亮和提示功能的工具！ (<a href="https://github.com/dbcli/mycli" target="_blank" rel="external">https://github.com/dbcli/mycli</a>) [推荐] </li>
<li><a href="https://github.com/rgcr/m-cli" target="_blank" rel="external">m-cli</a> - 用于macOS的瑞士军刀。 (<a href="https://github.com/rgcr/m-cli" target="_blank" rel="external">https://github.com/rgcr/m-cli</a>) </li>
<li><a href="https://github.com/guarinogabriel/Mac-CLI" target="_blank" rel="external">Mac-CLI</a> - 自动化您的OS X系统的使用。 (<a href="https://github.com/guarinogabriel/Mac-CLI" target="_blank" rel="external">https://github.com/guarinogabriel/Mac-CLI</a>) </li>
<li><a href="http://lnav.org" target="_blank" rel="external">LNav</a> - 日志文件阅读器. (<a href="https://github.com/tstack/lnav" target="_blank" rel="external">https://github.com/tstack/lnav</a>) </li>
<li><a href="https://github.com/tmux/tmux" target="_blank" rel="external">tmux</a> 终端登录远程主机的命令行工具。(<a href="https://github.com/tmux/tmux" target="_blank" rel="external">https://github.com/tmux/tmux</a>)</li>
<li><a href="https://github.com/mas-cli/mas" target="_blank" rel="external">mas</a> - 一个简单的命令行界面的苹果应用商店。 (<a href="https://github.com/mas-cli/mas" target="_blank" rel="external">https://github.com/mas-cli/mas</a>) </li>
<li><a href="https://cmus.github.io/" target="_blank" rel="external">cmus</a> - 命令行播放音乐应用。 (<a href="https://github.com/cmus" target="_blank" rel="external">https://github.com/cmus</a>) </li>
<li><a href="https://www.decisivetactics.com/products/serial/" target="_blank" rel="external">Serial</a> - 为工程师和系统管理员嵌入式硬件更容易。</li>
</ul>
<h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><ul>
<li><a href="https://git-scm.com/" target="_blank" rel="external">Git</a> - 版本控制工具，官网提供<a href="https://git-scm.com/download/gui/mac" target="_blank" rel="external">数十种GUI客户端</a> for Mac。  <strong>[推荐] [必备]</strong>(<a href="https://github.com/git/git" target="_blank" rel="external">https://github.com/git/git</a>)</li>
<li><p><a href="http://subversion.apache.org/" target="_blank" rel="external">SVN</a> - 版本控制工具。</p>
<h4 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h4></li>
<li><p><a href="https://zigz.ag/GitFinder/" target="_blank" rel="external">GitFinder</a> - 一个快速和轻量级的Git客户端的Mac与Finder集成。 </p>
</li>
<li><a href="https://git-fork.com/" target="_blank" rel="external">Fork</a> - 一个快速友好的git客户端。 </li>
<li><a href="https://rowanj.github.io/gitx/" target="_blank" rel="external">GitX</a> - <a href="https://github.com/pieter/gitx" target="_blank" rel="external">Pieter’s</a>的衍生版本，维护增强生产力和团队开发变化。 (<a href="https://github.com/rowanj/gitx" target="_blank" rel="external">https://github.com/rowanj/gitx</a>) </li>
<li><a href="https://github.com/Shikkic/gitbar" target="_blank" rel="external">Gitbar</a> - 开源，在你的菜单栏上显示GitHub贡献统计。 (<a href="https://github.com/Shikkic/gitbar" target="_blank" rel="external">https://github.com/Shikkic/gitbar</a>)</li>
<li><a href="https://desktop.github.com/" target="_blank" rel="external">GitHub Desktop</a> - 使用GitHub的GUI应用。</li>
<li><a href="https://ohmystarapp.com/" target="_blank" rel="external">OhMyStar</a> 最好的组织Github Star 的软件。(<a href="https://itunes.apple.com/us/app/ohmystar2/id1218642292" target="_blank" rel="external">https://itunes.apple.com/us/app/ohmystar2/id1218642292</a>)  <strong>[必备]</strong></li>
<li><a href="http://gitup.co/" target="_blank" rel="external">GitUp</a> - 一个简单功能强大的git客户端。(<a href="https://github.com/git-up/GitUp" target="_blank" rel="external">https://github.com/git-up/GitUp</a>) </li>
<li><a href="https://hub.github.com/" target="_blank" rel="external">Hub</a> - 将GitHub接口和git命令进行包装。(<a href="https://github.com/github/hub" target="_blank" rel="external">https://github.com/github/hub</a>) </li>
<li><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">SourceTree</a> - 强大的Git跨平台客户端。</li>
<li><a href="https://www.git-tower.com/" target="_blank" rel="external">Tower2</a> - 最强大的Git客户端。</li>
<li><a href="http://www.versionsapp.com/" target="_blank" rel="external">Versions</a> - Mac上最好的SVN管理工具。</li>
<li><a href="http://www.zennaware.com/cornerstone/" target="_blank" rel="external">Cornerstone</a> - Mac上最佳的SVN管理工具。</li>
<li><a href="http://www.syntevo.com/smartgit/" target="_blank" rel="external">SmartGit</a> - 非商业用途免费，全平台支持，集成 Github服务。</li>
<li><a href="https://www.gitkraken.com/" target="_blank" rel="external">GitKraken</a> - 最流行的图形用户界面的git管理工具。  [推荐]</li>
</ul>
<h4 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h4><ul>
<li><a href="http://gitlab.com/" target="_blank" rel="external">GitLab</a> - 一个用于仓库管理系统的开源项目。 <strong>[推荐] [必备]</strong></li>
<li><a href="https://github.com" target="_blank" rel="external">GitHub</a> GitHub代码托管，项目管理，演示部署，瞧，您现在就访问GitHub。 <strong>[推荐] [必备]</strong></li>
<li><a href="https://coding.net" target="_blank" rel="external">Coding.net</a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。</li>
<li><a href="https://phabricator.com" target="_blank" rel="external">phabricator</a> phabricator支持Git、SVN、HG 基于 PHP + Mysql 的开放源代码软件开发平台。</li>
<li><a href="https://gogs.io" target="_blank" rel="external">Gogs</a> - 一款极易搭建的自助 Git 服务Golang版本。(<a href="https://github.com/gogits/gogs" target="_blank" rel="external">https://github.com/gogits/gogs</a>)  </li>
<li><a href="https://gerrit.rockbox.org" target="_blank" rel="external">Gerrit</a> Gerrit 是一个免费、开放源代码的代码审查软件，使用网页界面。</li>
<li><p><a href="http://www.gitblit.com/" target="_blank" rel="external">Gitblit</a> Java版本Git代码托管，项目管理。(<a href="https://github.com/gitblit/gitblit" target="_blank" rel="external">https://github.com/gitblit/gitblit</a>) </p>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2></li>
<li><p><a href="http://www.sequelpro.com/" target="_blank" rel="external">Sequel Pro</a> - 一个MySQL数据库管理软件。(<a href="https://github.com/sequelpro/sequelpro" target="_blank" rel="external">https://github.com/sequelpro/sequelpro</a>)   <strong>[必备]</strong> </p>
</li>
<li><a href="http://dev.mysql.com/downloads/workbench/" target="_blank" rel="external">MySQL Workbench</a> - MySQL数据库官方管理软件。</li>
<li><a href="https://www.navicat.com.cn/products/navicat-data-modeler" target="_blank" rel="external">Navicat Data Modeler</a> - 一个数据库设计工具，它帮助创建高质素的概念、逻辑和物理数据模型。 </li>
<li><a href="http://www.sqlprostudio.com/" target="_blank" rel="external">SQLPro Studio</a> - 支持SQL Server, Postgres, Oracle 以及MySQL等主流的数据库可视化管理工具.</li>
<li><a href="https://github.com/bdash-app/bdash" target="_blank" rel="external">Bdash</a> - SQL客户端应用程序，支持MySQL、 PostgreSQL (Redshift)、 BigQuery、。 (<a href="https://github.com/bdash-app/bdash" target="_blank" rel="external">https://github.com/bdash-app/bdash</a>) </li>
<li><a href="https://eggerapps.at/postico/" target="_blank" rel="external">Postico</a> - 现代PostgreSQL客户端，漂亮功能多。 </li>
<li><a href="http://garrylachman.github.io/ElectroCRUD/" target="_blank" rel="external">ElectroCRUD</a> - MySQL数据库CRUD应用程序。 (<a href="https://github.com/garrylachman/ElectroCRUD" target="_blank" rel="external">https://github.com/garrylachman/ElectroCRUD</a>)</li>
<li><a href="http://menial.co.uk/base/" target="_blank" rel="external">Base 2</a> - 一个用于管理SQLite数据库的软件。</li>
<li><a href="http://aurvan.com/index.php?act=sqlight_details" target="_blank" rel="external">SQLight</a> - 一个SQLite数据库管理器工具，非常好用。 </li>
<li><a href="http://sqlitebrowser.org/" target="_blank" rel="external">DB Browser for SQLite</a> - 一个用于管理SQLite数据库的软件，跨平台。 (<a href="https://github.com/sqlitebrowser/sqlitebrowser" target="_blank" rel="external">https://github.com/sqlitebrowser/sqlitebrowser</a>) </li>
<li><a href="http://postgresapp.com/" target="_blank" rel="external">Postgres.app</a> - Mac上最简单的方法的使用PostgreSQL关系型数据库管理系统。 (<a href="https://github.com/PostgresApp/PostgresApp" target="_blank" rel="external">https://github.com/PostgresApp/PostgresApp</a>)</li>
<li><a href="http://www.psequel.com/" target="_blank" rel="external">PSequel</a> - PostgreSQL数据库GUI软件。</li>
<li><a href="https://robomongo.org/" target="_blank" rel="external">Robo 3T</a> - 基于Shell的MongoDB图形化客户端管理软件。 (<a href="https://github.com/Studio3T/robomongo" target="_blank" rel="external">https://github.com/Studio3T/robomongo</a>)</li>
<li><a href="http://www.mongobooster.com/" target="_blank" rel="external">MongoBooster</a> - MongoDB图形化管理软件，内嵌MongoShell，ES6语法，流畅查询及智能感知。</li>
<li><a href="http://www.litixsoft.de/english/mms/" target="_blank" rel="external">Mongo Management Studio</a> - MongoDB图形化客户端管理软件。</li>
<li><a href="http://3t.io/mongochef" target="_blank" rel="external">MongoChef</a> - MongoDB图形化客户端管理软件。</li>
<li><a href="http://mongotron.io/" target="_blank" rel="external">Mongotron</a> - 使用Electron和Angular开发的MongoDB图形化客户端。  (<a href="https://github.com/officert/mongotron" target="_blank" rel="external">https://github.com/officert/mongotron</a>)</li>
<li><a href="https://www.eisbahn.jp/chrome_mysql_admin" target="_blank" rel="external">Chrome MySQL Admin</a> - 一个Chrome插件，是MySQL开发的跨平台、可视化数据库工具。 (<a href="https://github.com/yoichiro/chrome_mysql_admin" target="_blank" rel="external">https://github.com/yoichiro/chrome_mysql_admin</a>)</li>
<li><a href="https://www.jackdb.com/" target="_blank" rel="external">JackDB</a> - 直接的SQL访问你所有的数据，无论在哪里。(<a href="https://github.com/yoichiro/chrome_mysql_admin" target="_blank" rel="external">https://github.com/yoichiro/chrome_mysql_admin</a>)</li>
<li><a href="http://getmedis.com" target="_blank" rel="external">medis</a> - 漂亮的Redis管理软件。 (<a href="https://github.com/luin/medis" target="_blank" rel="external">https://github.com/luin/medis</a>)</li>
<li><a href="https://github.com/UUGU/redis-client-app" target="_blank" rel="external">RedisClient</a> - 漂亮跨平台的Redis管理软件。 (<a href="https://github.com/UUGU/redis-client-app" target="_blank" rel="external">https://github.com/UUGU/redis-client-app</a>) </li>
<li><a href="https://redisdesktop.com/" target="_blank" rel="external">RedisDesktopManager</a> - Redis跨平台的GUI管理工具。(<a href="https://github.com/uglide/RedisDesktopManager" target="_blank" rel="external">https://github.com/uglide/RedisDesktopManager</a>) </li>
<li><a href="http://www.macexplorer.co/en/mdb-explorer.php" target="_blank" rel="external">MDB Explorer</a> - Mac上查看编辑Access数据库的工具。</li>
<li><a href="http://datumapps.com/datum.html" target="_blank" rel="external">Datum - SQLite</a> - Sqlite3数据库管理软件。</li>
<li><a href="https://gcollazo.github.io/mongodbapp/" target="_blank" rel="external">mongoDB.app</a> - 在Mac 上最简单的使用MongoDB (<a href="https://github.com/gcollazo/mongodbapp" target="_blank" rel="external">https://github.com/gcollazo/mongodbapp</a>) </li>
<li><a href="http://www.jetbrains.com/datagrip/" target="_blank" rel="external">DataGrip</a> - 是JetBrains公司旗下一款数据库管理工具。<a href="https://www.jetbrains.com/student/" target="_blank" rel="external">点击这里</a> <strong>学生</strong>免费。</li>
<li><a href="https://public.tableau.com/s/" target="_blank" rel="external">Tableau Public</a> - 数据可视化工具。 </li>
<li><a href="https://github.com/ChristianKienle/Core-Data-Editor" target="_blank" rel="external">Core Data Editor</a> - 核心数据编辑器可让您轻松查看，编辑和分析应用程序的数据。 (<a href="https://github.com/luin/medis" target="_blank" rel="external">https://github.com/luin/medis</a>) </li>
<li><a href="https://protonail.com" target="_blank" rel="external">Keylord</a> - Redis，Bolt，LevelDB和Memcached键值数据库的桌面GUI客户端。</li>
<li><a href="https://dbeaver.jkiss.org/" target="_blank" rel="external">DBeaver</a> - 跨平台SQL客户端，支持大部分主流数据库</li>
</ul>
<h2 id="设计和产品"><a href="#设计和产品" class="headerlink" title="设计和产品"></a>设计和产品</h2><h4 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h4><ul>
<li><a href="https://secure.flyingmeat.com/acorn/" target="_blank" rel="external">Acorn</a> - 一个像PS，全面的功能集的图像编辑器。</li>
<li><a href="https://affinity.serif.com/en-us/designer/" target="_blank" rel="external">Affinity Designer</a> - 矢量图像设计工具，可能的Adobe Illustrator的替代。</li>
<li><a href="https://affinity.serif.com/en-us/photo/" target="_blank" rel="external">Affinity Photo</a> - 光栅图像设计工具，可以替代Adobe PS图象处理软件。</li>
<li><a href="https://www.blender.org/" target="_blank" rel="external">Blender</a> - 全功能可扩展的跨平台3D内容套件。 (<a href="https://developer.blender.org/" target="_blank" rel="external">https://developer.blender.org/</a>)</li>
<li><a href="http://www.pixelmator.com/mac/" target="_blank" rel="external">Pixelmator</a> - 强大的图像编辑器，可能PS图像处理软件的选择。</li>
<li><p><a href="https://www.sketchapp.com/" target="_blank" rel="external">Sketch</a> - 混合矢量/位图布局应用，特别适用于用户界面，Web和移动设计。 <strong>[推荐] [必备]</strong> </p>
</li>
<li><p><a href="http://sketchtoolbox.com/" target="_blank" rel="external">Sketch Toolbox</a> - 一个超级简单的Sketch插件管理器。(<a href="https://github.com/buzzfeed/Sketch-Toolbox" target="_blank" rel="external">https://github.com/buzzfeed/Sketch-Toolbox</a>) <strong>[推荐]</strong>  </p>
</li>
<li><a href="http://utom.design/measure/" target="_blank" rel="external">Measure</a> - 设计稿标注、测量工具。 (<a href="https://github.com/utom/sketch-measure" target="_blank" rel="external">https://github.com/utom/sketch-measure</a>) <strong>[推荐]</strong>  </li>
<li><a href="https://abynim.github.io/UserFlows/" target="_blank" rel="external">User Flows</a> - 直接从画板生成流程图。 (<a href="https://github.com/abynim/UserFlows" target="_blank" rel="external">https://github.com/abynim/UserFlows</a>)</li>
<li><a href="https://yo-op.github.io/sketchcachecleaner/" target="_blank" rel="external">Sketch Cache Cleaner</a> - 清理 Sketch 历史文件，释放磁盘空间。 (<a href="https://github.com/yo-op/sketchcachecleaner" target="_blank" rel="external">https://github.com/yo-op/sketchcachecleaner</a>) </li>
<li><a href="https://designer.io/" target="_blank" rel="external">Gravit Designer</a> - 混合矢量/位图布局应用，比起Sketch还差一点。  (<a href="https://itunes.apple.com/app/id1207744923" target="_blank" rel="external">https://itunes.apple.com/app/id1207744923</a>)</li>
<li><a href="https://tenonedesign.com/inklet.php" target="_blank" rel="external">inklet</a> - 将Mac上的触摸板变成绘图板。<strong>[推荐]</strong>  </li>
<li><a href="http://al.chemy.org/" target="_blank" rel="external">Alchemy</a> - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。(<a href="http://svn.al.chemy.org/" target="_blank" rel="external">http://svn.al.chemy.org/</a>)</li>
<li><a href="http://mypaint.org/" target="_blank" rel="external">MyPaint</a> - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。(<a href="https://github.com/mypaint" target="_blank" rel="external">https://github.com/mypaint</a>) </li>
<li><a href="https://www.gimp.org" target="_blank" rel="external">GIMP</a> - 图像编辑软件，号称Linux下的PhotoShop，同时有Mac版本。(<a href="https://www.gimp.org/source/#gimp-source-code" target="_blank" rel="external">https://www.gimp.org/source/#gimp-source-code</a>)</li>
<li><a href="https://inkscape.org/zh/" target="_blank" rel="external">Inkscape</a> - 一款开源矢量图形编辑软件，与Illustrator、Freehand、CorelDraw、Xara X 等其他软件相似。(<a href="https://launchpad.net/inkscape" target="_blank" rel="external">https://launchpad.net/inkscape</a>)</li>
<li><a href="https://helftone.com/" target="_blank" rel="external">Monodraw</a> - 一款文本图像编辑器。</li>
<li><a href="https://www.sketchbook.com/?locale=cn" target="_blank" rel="external">SketchBook</a> - 出众的绘图软件。</li>
<li><a href="http://www.tayasui.com/sketches/" target="_blank" rel="external">Tayasui Sketches</a> - 专业的绘图软件。</li>
<li><a href="https://www.belightsoft.com/art-text/" target="_blank" rel="external">Art Text 3</a> - 生成各种特效字体。 </li>
<li><a href="http://fontforge.github.io/" target="_blank" rel="external">FontForge</a> - 字体编辑工具。 (<a href="https://github.com/fontforge" target="_blank" rel="external">https://github.com/fontforge</a>) </li>
<li><a href="https://www.google.com/nikcollection/" target="_blank" rel="external">Nik Collection</a> - 专业照片后期制作工具Google收购后免费。<strong>[推荐]</strong>  </li>
<li><a href="http://paintbrush.sourceforge.net/" target="_blank" rel="external">Paintbrush</a> - 位图图像编辑器。(<a href="https://sourceforge.net/projects/paintbrush/files/" target="_blank" rel="external">https://sourceforge.net/projects/paintbrush/files/</a>) [star 2][star2 Icon]</li>
<li><a href="https://krita.org/" target="_blank" rel="external">Krita</a> - 一个开源的位图形编辑软件，包含一个绘画程式和照片编辑器。 (<a href="http://download.kde.org/stable/krita/3.0/krita-3.0.tgz.mirrorlist" target="_blank" rel="external">http://download.kde.org/stable/krita/3.0/krita-3.0.tgz.mirrorlist</a>) </li>
<li><a href="https://vectr.com/" target="_blank" rel="external">Vectr</a> - 免费图形编辑器。这是一个简单而强大的Web和桌面跨平台工具，把你的设计变成现实。</li>
<li><a href="http://principleformac.com/" target="_blank" rel="external">Principle</a> -  使用它很容易设计动画和交互式用户界面。</li>
<li><a href="https://ephtracy.github.io/" target="_blank" rel="external">MagicaVoxel</a> - 轻量级的8位像素编辑和交互路径追踪渲染器。</li>
<li><a href="http://jeremyvizzini.com/screentolayers/" target="_blank" rel="external">ScreenToLayers</a> - 轻松导出桌面分层文件PSD文件。(<a href="https://github.com/jeremyvizzini/ScreenToLayers" target="_blank" rel="external">https://github.com/jeremyvizzini/ScreenToLayers</a>) </li>
<li><a href="http://pixelperfect-app.com/" target="_blank" rel="external">Pixel Perfect</a> - 比较UI模型和开发结果非常容易。 (<a href="https://itunes.apple.com/us/app/pixel-perfect/id916097243" target="_blank" rel="external">https://itunes.apple.com/us/app/pixel-perfect/id916097243</a>) </li>
<li><a href="https://sparkleapp.com/" target="_blank" rel="external">Sparkle</a> - 可视化网页设计工具。</li>
<li><a href="https://www.figma.com/" target="_blank" rel="external">Figma</a> - 一款基于Web的实时协作的云设计软件。 [Recommend]</li>
</ul>
<h4 id="原型流程"><a href="#原型流程" class="headerlink" title="原型流程"></a>原型流程</h4><ul>
<li><a href="http://origami.design/" target="_blank" rel="external">Origami Studio</a> - 一种设计现代界面的新工具，由Facebook设计师构建和使用。</li>
<li><a href="https://www.flinto.com/" target="_blank" rel="external">Flinto</a> - 快速制作高保真的互交原型工具，支持Sketch导入。 <strong>[推荐]</strong>  </li>
<li><a href="https://kiteapp.co/" target="_blank" rel="external">Kite</a> - 一个强大的动画制作工具制作Mac和iOS原型中的应用。 <strong>[推荐]</strong>  </li>
<li><a href="http://www.justinmind.com" target="_blank" rel="external">Justinmind</a> - 功能更丰富团队协作方便。<strong>[推荐]</strong>  </li>
<li><a href="https://www.mockflow.com" target="_blank" rel="external">MockFlow</a> - 用于网页设计和可用性测试的在线原型设计套件。</li>
<li><a href="https://www.axure.com/" target="_blank" rel="external">Axure RP 8</a> - 画原型图工具，团队协作SVN方便好用。</li>
<li><a href="http://pencil.evolus.vn/" target="_blank" rel="external">pencil</a> - 开源免费制作软件原型的工具 (<a href="https://github.com/evolus/pencil" target="_blank" rel="external">https://github.com/evolus/pencil</a>) </li>
<li><a href="http://www.mockplus.com" target="_blank" rel="external">Mockplus</a> - 更快更简单的原型设计工具。</li>
<li><a href="https://www.omnigroup.com/omnigraffle" target="_blank" rel="external">OmniGraffle</a> - 可用来绘制图表、流程图、组织结构图、思维导图以及插图或原型。</li>
<li><a href="http://www.xmind.net" target="_blank" rel="external">XMind</a> - 一款实用的思维导图软件。  <strong>[必备]</strong></li>
<li><a href="http://lighten.xmind.net/" target="_blank" rel="external">Lighten</a> - XMind出品的一款实用的思维导图软件。</li>
<li><a href="http://www.literatureandlatte.com/scapple.php" target="_blank" rel="external">Scapple</a> - 一款实用的思维导图软件。</li>
<li><a href="https://framer.com/" target="_blank" rel="external">Framer</a> - 做交互原型的工具。 </li>
<li><a href="https://balsamiq.com/products/mockups/" target="_blank" rel="external">Balsamiq Mockups</a> - 一个快速的网页设计原型工具，帮助你更快、更聪明的工作。</li>
<li><a href="https://marvelapp.com/" target="_blank" rel="external">Marvel</a> - 简单设计，原型设计和协作。</li>
<li><a href="http://mindnode.com/" target="_blank" rel="external">MindNode</a> - 简洁的风格与人性化的操作，绘制思维脑图。</li>
<li><a href="https://writemapper.com/" target="_blank" rel="external">WriteMapper</a> - 专为写作者而设的脑图工具。</li>
<li><a href="https://simplemind.eu/" target="_blank" rel="external">SimpleMind</a> - 超小体积的思维导图工具。</li>
<li><a href="http://www.adobe.com/products/experience-design.html" target="_blank" rel="external">Adobe XD (Experience Design)</a> - 用于网站和移动应用的设计和原型设计。</li>
</ul>
<h4 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h4><ul>
<li><a href="https://github.com/kyleduo/TinyPNG4Mac" target="_blank" rel="external">TinyPNG4Mac</a> - 图片压缩专用开源工具。 (<a href="https://github.com/kyleduo/TinyPNG4Mac" target="_blank" rel="external">https://github.com/kyleduo/TinyPNG4Mac</a>)</li>
<li><a href="http://www.img2icnsapp.com" target="_blank" rel="external">Image2icon</a> - 将你的图片转换成图标。</li>
<li><a href="https://pngmini.com/" target="_blank" rel="external">ImageAlpha</a> - 压缩PNG图片，去掉无效的透明。(<a href="https://github.com/pornel/ImageAlpha" target="_blank" rel="external">https://github.com/pornel/ImageAlpha</a>) </li>
<li><a href="http://www.boltnev.com/resizemaster/" target="_blank" rel="external">Resize Master</a> - 更快速和容易批量调整图像和加水印。 (<a href="https://itunes.apple.com/app/resize-master/id1025306797" target="_blank" rel="external">https://itunes.apple.com/app/resize-master/id1025306797</a>) * <a href="http://www.jpegmini.com/" target="_blank" rel="external">JPEGmini</a> - 将图像尺寸降低高达80％，而不会影响质量。 (<a href="https://itunes.apple.com/cn/app/jpegmini-lite/id525742250" target="_blank" rel="external">https://itunes.apple.com/cn/app/jpegmini-lite/id525742250</a>) </li>
<li><a href="https://imageoptim.com/mac" target="_blank" rel="external">ImageOptim</a> - 压缩图片，删除EXIF信息。(<a href="https://github.com/ImageOptim/ImageOptim" target="_blank" rel="external">https://github.com/ImageOptim/ImageOptim</a>) </li>
<li><a href="http://theolabrothers.com/" target="_blank" rel="external">Sip</a> - 收集，整理和分享你的颜色拾色器。<strong>[推荐]</strong>  </li>
<li><a href="http://getmarkman.com/" target="_blank" rel="external">马克鳗</a> - 高效的设计稿标注、测量工具。<strong>[推荐]</strong>   </li>
<li><a href="http://jumpzero.com/frank/" target="_blank" rel="external">Frank DeLoupe</a> - 支持 Retina 的屏幕拾色器。</li>
<li><a href="http://www.colorschemer.com/" target="_blank" rel="external">ColorSchemer</a> - 专业的配色、调色软件。</li>
<li><a href="http://appersian.net/" target="_blank" rel="external">IconKit</a> - App图标自动生成器。(<a href="https://itunes.apple.com/cn/app/iconkit-icon-resizer-for-app/id507135296?mt=12" target="_blank" rel="external">https://itunes.apple.com/cn/app/iconkit-icon-resizer-for-app/id507135296?mt=12</a>)</li>
<li><a href="https://github.com/onmyway133/GifCapture" target="_blank" rel="external">GifCapture</a> 开源 macOS 截屏生成 Gif 工具。(<a href="https://github.com/onmyway133/GifCapture" target="_blank" rel="external">https://github.com/onmyway133/GifCapture</a>) </li>
<li><a href="https://gifox.io/" target="_blank" rel="external">Gifox</a> 专业的高颜值 GIF 录制应用。 (<a href="https://itunes.apple.com/cn/app/gifox-gif-recording-and-sharing/id1082624744" target="_blank" rel="external">https://itunes.apple.com/cn/app/gifox-gif-recording-and-sharing/id1082624744</a>)</li>
<li><a href="https://github.com/mancunianetz/APNGb" target="_blank" rel="external">APNGb</a> - 编辑apng图片格式的软件。 (<a href="https://github.com/mancunianetz/APNGb" target="_blank" rel="external">https://github.com/mancunianetz/APNGb</a>) </li>
<li><a href="http://www.cockos.com/licecap/" target="_blank" rel="external">Licecap</a> - 是一款屏幕录制工具输出GIF，录制过程中可以随意改变录屏范围。(<a href="https://github.com/justinfrankel/licecap" target="_blank" rel="external">https://github.com/justinfrankel/licecap</a>)   <strong>[必备]</strong> </li>
<li><a href="https://getkap.co/" target="_blank" rel="external">Kap</a> - 轻量 GIF 录屏小工具。(<a href="https://github.com/wulkano/kap" target="_blank" rel="external">https://github.com/wulkano/kap</a>)   <strong>[必备]</strong> </li>
<li><a href="https://github.com/keycastr/keycastr" target="_blank" rel="external">KeyCastr</a> - 录屏好帮手，实时显示按键操作的小工具。(<a href="https://github.com/keycastr/keycastr" target="_blank" rel="external">https://github.com/keycastr/keycastr</a>) </li>
<li><a href="https://itunes.apple.com/us/app/giphy-capture.-the-gif-maker/id668208984" target="_blank" rel="external">GIPHY Capture</a> - 免费软件的捕捉和分享图片在桌面上</li>
<li><a href="https://evernote.com/intl/zh-cn/skitch/" target="_blank" rel="external">Skitch</a> - 截图附带强大的标注功能。</li>
<li><a href="http://teampaper.me/snap/" target="_blank" rel="external">Teampaper Snap</a> - 为设计师量身定做的屏幕截图兼注释工具。 (<a href="https://itunes.apple.com/cn/app/monosnap/id1199502670" target="_blank" rel="external">https://itunes.apple.com/cn/app/monosnap/id1199502670</a>)</li>
<li><a href="https://monosnap.com/" target="_blank" rel="external">Monosnap</a> - 制作截图，录制视频共享文件。 <strong>[推荐] [必备]</strong> (<a href="https://itunes.apple.com/cn/app/monosnap/id540348655" target="_blank" rel="external">https://itunes.apple.com/cn/app/monosnap/id540348655</a>) </li>
<li><a href="http://jietu.qq.com/" target="_blank" rel="external">截图(Jietu)</a> - 截图附带强大的标注功能，腾讯作品。<strong>[推荐]</strong>   </li>
<li><a href="https://zh.snipaste.com/" target="_blank" rel="external">Snipaste</a> - 一个简单但强大的截图工具。[star3 Icon]</li>
<li><a href="http://txtlabs.com/" target="_blank" rel="external">ScreenShot PSD</a> - 将屏幕捕获存为分层的PSD，便于编辑。 (<a href="https://itunes.apple.com/us/app/screenshot-psd/id489880259" target="_blank" rel="external">https://itunes.apple.com/us/app/screenshot-psd/id489880259</a>)</li>
<li><a href="http://snip.qq.com/" target="_blank" rel="external">Snip</a> - 高效的截图工具，支持滚动截屏，腾讯作品。<strong>[推荐]</strong>  </li>
<li><a href="http://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> - 上传图片至七牛、阿里云等图床，支持 Markdown 链接。(<a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPic_me" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPic_me</a>)</li>
<li><a href="http://geticonjar.com/" target="_blank" rel="external">Iconjar</a> - 图标管理软件，带组织和搜索功能。 <strong>[推荐]</strong>   </li>
<li><a href="http://www.svgs.us/" target="_blank" rel="external">svgus</a> - SVG 图片管理器。(<a href="https://itunes.apple.com/cn/app/svgsus/id1106867065" target="_blank" rel="external">https://itunes.apple.com/cn/app/svgsus/id1106867065</a>)</li>
<li><a href="http://rightfontapp.com/" target="_blank" rel="external">RightFont</a> - 字体管理工具。<strong>[推荐]</strong>   </li>
<li><a href="http://ethanschoonover.com/solarized" target="_blank" rel="external">Solarized</a> - 干净清爽的颜色主题，支持iTerm、Intellij IDEA、Vim等。<strong>[推荐]</strong>  </li>
<li><a href="http://couleursapp.com" target="_blank" rel="external">Couleurs</a> - 简单的屏幕取色应用程序。 </li>
<li><p><a href="https://tropy.org/" target="_blank" rel="external">Tropy</a> - 简单的屏幕取色应用程序。(<a href="https://github.com/tropy/tropy" target="_blank" rel="external">https://github.com/tropy/tropy</a>) </p>
<h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2></li>
<li><p><a href="http://www.parallels.com/" target="_blank" rel="external">Parallels Desktop</a> - 虽然好用但是收费机制，更新花钱、花钱、花钱。</p>
</li>
<li><a href="http://www.virtualbox.org" target="_blank" rel="external">Virtual Box</a> - 免费、免费、免费，带NTFS读写，不用买ParagonNTFS，省100块。<strong>[推荐]</strong>   </li>
<li><a href="http://www.vmware.com/" target="_blank" rel="external">VMWare Fusion</a> - 强大的虚拟机，商业软件。</li>
<li><a href="https://veertu.com" target="_blank" rel="external">Veertu</a> - Mac上轻量级的虚拟机。通过一种高响应，沙箱且本地化的方式在你在 Mac 上运行虚拟机。<strong>[推荐]</strong>  </li>
</ul>
<h2 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h2><p><em>推荐一些通信工具，沟通，团队协同</em></p>
<ul>
<li><a href="http://meetfranz.com/" target="_blank" rel="external">Franz</a> - 一个使用 <a href="https://electronjs.org/" target="_blank" rel="external">Electron</a>开发的，可以同时登录23个平台的即时通讯软件。 </li>
<li><a href="http://im.qq.com/macqq/index.shtml" target="_blank" rel="external">QQ</a> - QQ for Mac App。</li>
<li><a href="http://weixin.qq.com/cgi-bin/readtemplate?t=mac&amp;platform=wx&amp;lang=zh_CN" target="_blank" rel="external">WeChat</a> - 微信 for Mac App。</li>
<li><a href="https://github.com/geeeeeeeeek/electronic-wechat" target="_blank" rel="external">Electronic WeChat</a> - 调用微信接口，使用 <a href="https://github.com/electron/electron" target="_blank" rel="external">Electron</a> 开发的第三方漂亮开源微信应用。 (<a href="https://github.com/geeeeeeeeek/electronic-wechat" target="_blank" rel="external">https://github.com/geeeeeeeeek/electronic-wechat</a>)</li>
<li><a href="https://www.skype.com/" target="_blank" rel="external">Skype</a> - Skype共享、跨平台的短信和电话。</li>
<li><a href="http://weiboformac.sinaapp.com/" target="_blank" rel="external">Maipo脉搏</a> - 微博第三方Mac应用。<strong>[推荐]</strong>   (<a href="https://itunes.apple.com/cn/app/weibox/id789066512" target="_blank" rel="external">https://itunes.apple.com/cn/app/weibox/id789066512</a>) </li>
<li><a href="https://imach.me/gohanapp/" target="_blank" rel="external">御飯</a> - 饭否第三方Mac应用。</li>
<li><a href="https://github.com/stonesam92/ChitChat" target="_blank" rel="external">ChitChat</a> - WhatsApp非官方。 (<a href="https://github.com/stonesam92/ChitChat" target="_blank" rel="external">https://github.com/stonesam92/ChitChat</a>)</li>
<li><a href="https://desktop.telegram.org" target="_blank" rel="external">Telegram</a> - 通讯新时代。</li>
<li><a href="https://fbmacmessenger.rsms.me/" target="_blank" rel="external">Messenger</a> - Facebook第三方聊天工具。 (<a href="https://github.com/rsms/fb-mac-messenger" target="_blank" rel="external">https://github.com/rsms/fb-mac-messenger</a>)</li>
<li><a href="https://adium.im/" target="_blank" rel="external">Adium</a> - 呃这个是老的集成多个平台的聊天客户端。* <a href="https://www.codeux.com/textual" target="_blank" rel="external">Textual</a> - 最受欢迎的世界与我们相关的KPI应用 for OS X。(<a href="https://github.com/Codeux-Software/Textual" target="_blank" rel="external">https://github.com/Codeux-Software/Textual</a>)</li>
<li><a href="https://gitter.im" target="_blank" rel="external">Gitter</a> - 关于GitHub的项目交流，支持 Markdown，对开发者极为友好。</li>
<li><a href="https://github.com/jianliaoim/talk-os" target="_blank" rel="external">简聊</a> - 企业级即时沟通工具，已经下线了，可以自己搭建一套系统玩儿。(<a href="https://github.com/jianliaoim/talk-os" target="_blank" rel="external">https://github.com/jianliaoim/talk-os</a>) </li>
<li><a href="http://www.dingtalk.com/index-b.html#download_block" target="_blank" rel="external">钉钉</a> - 企业级办公通讯免费平台。</li>
<li><a href="https://slack.com/" target="_blank" rel="external">Slack</a> - 团队协作，沟通工具。</li>
<li><a href="https://pubu.im/apps/osx" target="_blank" rel="external">零信</a> - 随时随地工作，跨平台。</li>
<li><a href="http://www.jingoal.com/client/mac/mac.htm" target="_blank" rel="external">今目标</a> - 一款面向中小企业的互联网工作平台。</li>
<li><a href="https://bearychat.com/" target="_blank" rel="external">BearyChat</a> - 互联网团队协作，沟通工具。</li>
<li><a href="https://voluntary.net/bitpost/" target="_blank" rel="external">Bitpost</a> - 私人分散消息。它是一个p2p的去中心化和无须第三方提供信用担保协议。(<a href="https://github.com/Voluntarynet/Bitpost" target="_blank" rel="external">https://github.com/Voluntarynet/Bitpost</a>)</li>
<li><a href="https://www.teambition.com" target="_blank" rel="external">Teambition</a> - 团队协作。提供管理任务、安排日程、查找文件、即时讨论等团队所需要的一切协作功能。</li>
<li><a href="https://www.rishiqing.com" target="_blank" rel="external">日事清</a> - 个人日程管理，团队协作工具。日程安排，计划分配，笔记总结等。</li>
<li><a href="https://coding.net" target="_blank" rel="external">Coding.net</a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。</li>
<li><a href="https://weechat.org/" target="_blank" rel="external">WeeChat</a> - 一个命令行聊天客户端。</li>
<li><a href="http://rambox.pro/" target="_blank" rel="external">Rambox</a> - 消息和电子邮件应用程序，将常见的Web应用程序组合成一个程序。 (<a href="https://github.com/saenzramiro/rambox" target="_blank" rel="external">https://github.com/saenzramiro/rambox</a>) </li>
<li><p><a href="https://keybase.io/" target="_blank" rel="external">Keybase</a> - 一个安全的消息应用程序 (<a href="https://github.com/keybase" target="_blank" rel="external">https://github.com/keybase</a>) </p>
<h4 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h4></li>
<li><p><a href="https://sparkmailapp.com/" target="_blank" rel="external">Spark</a> - 新推出的快速邮件客户端支持Mac和iPhone。</p>
</li>
<li><a href="http://airmailapp.com" target="_blank" rel="external">Airmail</a> - 快速的邮件客户端支持Mac和iPhone。</li>
<li><a href="https://nylas.com/nylas-mail/" target="_blank" rel="external">Nylas Mail</a> - 免费邮件客户端。  (<a href="https://github.com/nylas/nylas-mail" target="_blank" rel="external">https://github.com/nylas/nylas-mail</a>) </li>
<li><a href="http://www.foxmail.com/mac/" target="_blank" rel="external">Foxmail</a> - 快速的邮件客户端。 <strong>[推荐]</strong>  </li>
<li><a href="http://mail.163.com/dashi/" target="_blank" rel="external">网易邮箱大师</a> - 全平台的邮箱管理客户端，网易邮箱大师电脑版。  <strong>[推荐]</strong>  </li>
<li><a href="https://smallcubed.com/mt/" target="_blank" rel="external">MailTags</a> - 管理和组织邮件，日程和标签进行分类邮件。</li>
<li><a href="https://www.nylas.com/" target="_blank" rel="external">N1</a> - 可以扩展的开源收费邮件客户端。</li>
<li><a href="https://www.postbox-inc.com" target="_blank" rel="external">Postbox</a> - 这个貌似也非常强大哦，关键是简洁漂亮的收费邮件客户端。</li>
<li><a href="https://polymail.io/" target="_blank" rel="external">Polymail</a> - 简单，功能强大，长得好看的新晋邮件客户端。</li>
<li><a href="https://newtonhq.com" target="_blank" rel="external">Newton(原Cloudmagic)</a> - 界面非常简洁的一个邮件客户端。</li>
<li><a href="https://www.mozilla.org/zh-CN/thunderbird/" target="_blank" rel="external">ThunderBird</a> - Mozilla 公司出品的强大的Email客户端程序。</li>
<li><p><a href="http://www.yomail.com/" target="_blank" rel="external">Yomail</a> - 新出的国内开发的比较好的邮件客户端。</p>
<h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2></li>
<li><p><a href="http://www.alsoft.com/DiskWarrior/" target="_blank" rel="external">DiskWarrior</a> - 恢复文件系统损坏时，磁盘工具进行选择。</p>
</li>
<li><a href="https://www.prosofteng.com/datarescue-mac-data-recovery/" target="_blank" rel="external">Data Rescue</a> - 多种情况下的全面和专业的数据恢复。</li>
<li><a href="http://www.stellarinfo.com/data-recovery-mac.php" target="_blank" rel="external">Stellar Phoenix Mac Data Recovery</a> - 一个功能强大的恢复文件面向Mac的工具。</li>
<li><a href="http://www.r-studio.com/data_recovery_macintosh/" target="_blank" rel="external">R-Studio for Mac</a> - 可恢复分区被格式化、损坏或被删除的文件。</li>
</ul>
<h2 id="音频和视频"><a href="#音频和视频" class="headerlink" title="音频和视频"></a>音频和视频</h2><ul>
<li><a href="https://www.popcorn-time.to/mac.html" target="_blank" rel="external">Popcorn Time</a> - 电影播放器，观看torrent电影。</li>
<li><a href="https://kodi.tv/" target="_blank" rel="external">Kodi</a> - 一款一流的免费开源媒体中心软件，可用于播放视频、音乐，查看图片，玩游戏等。(<a href="https://github.com/xbmc/xbmc" target="_blank" rel="external">https://github.com/xbmc/xbmc</a>) </li>
<li><a href="https://mpv.io/" target="_blank" rel="external">MPV</a> - 一个免费、开源和跨平台的媒体播放器。(<a href="https://github.com/mpv-player/mpv" target="_blank" rel="external">https://github.com/mpv-player/mpv</a>) </li>
<li><a href="https://lhc70000.github.io/iina/" target="_blank" rel="external">IINA</a> - 基于<a href="https://github.com/mpv-player/mpv" target="_blank" rel="external">MPV</a>的，现代视频播放器，支持多点触摸控制。(<a href="https://github.com/lhc70000/iina" target="_blank" rel="external">https://github.com/lhc70000/iina</a>) </li>
<li><a href="https://www.sodaplayer.com/" target="_blank" rel="external">Soda Player</a> - 一款能够直接播放种子、磁力链接、在线视频、自动获取字幕、链接和本地视频文件的播放器。 </li>
<li><a href="https://coppertino.com/vox/mac" target="_blank" rel="external">VOX Player</a> - 免费全能音乐播放器，撸码之余听听歌是一种享受。 <strong>[推荐] [必备]</strong> </li>
<li><a href="http://radiant-player.github.io/radiant-player-mac/" target="_blank" rel="external">Radiant Player</a> - Google Play音乐播放器。(<a href="https://github.com/radiant-player/radiant-player-mac" target="_blank" rel="external">https://github.com/radiant-player/radiant-player-mac</a>) </li>
<li><a href="https://github.com/sonoramac/Sonora" target="_blank" rel="external">Sonora</a> -  一个很小的音乐播放器。(<a href="https://github.com/sonoramac/Sonora" target="_blank" rel="external">https://github.com/sonoramac/Sonora</a>) </li>
<li><a href="http://www.audacityteam.org/" target="_blank" rel="external">Audacity</a> - 免费开源的编辑音频的软件。(<a href="https://github.com/audacity/audacity" target="_blank" rel="external">https://github.com/audacity/audacity</a>)</li>
<li><a href="http://markvapps.com/metadatics" target="_blank" rel="external">Metadatics</a> - 音频元数据编辑器，支持大多数常见的音频文件。(<a href="https://itunes.apple.com/us/app/tincta/id448340648" target="_blank" rel="external">https://itunes.apple.com/us/app/tincta/id448340648</a>)</li>
<li><a href="https://natron.fr/" target="_blank" rel="external">Natron</a> - 开源的视频合成软件，功能与 Adobe After Effects 或者 Nuke 类似。(<a href="https://github.com/MrKepzie/Natron" target="_blank" rel="external">https://github.com/MrKepzie/Natron</a>)</li>
<li><a href="http://www.audacityteam.org/" target="_blank" rel="external">Ardour</a> - 录制，编辑和混合多轨音频。(<a href="https://github.com/Ardour/ardour" target="_blank" rel="external">https://github.com/Ardour/ardour</a>)</li>
<li><a href="http://www.hydrogen-music.org/hcms/" target="_blank" rel="external">Hydrogen</a> - 专业鼓乐类工具，创建专业但简单而直观的鼓乐节目。(<a href="https://github.com/hydrogen-music/hydrogen" target="_blank" rel="external">https://github.com/hydrogen-music/hydrogen</a>)</li>
<li><a href="http://www.rogueamoeba.com/audiohijack/" target="_blank" rel="external">Audio Hijack</a> - 一个记录任何应用程序的音频，包括网络电话Skype，网络流从Safari，以及更多。</li>
<li><a href="https://itunes.apple.com/us/app/stringed/id698710517?mt=12" target="_blank" rel="external">Stringed 2</a> - 音频编辑处理工具。</li>
<li><a href="http://mixxx.org/" target="_blank" rel="external">Mixxx</a> - 免费的DJ软件，给你一切你需要的表演组合，名副其实的替代Traktor。(<a href="https://github.com/mixxxdj/mixxx" target="_blank" rel="external">https://github.com/mixxxdj/mixxx</a>) </li>
<li><a href="https://musescore.org/" target="_blank" rel="external">MuseScore</a> - 免费的作曲与乐谱软件。(<a href="https://github.com/musescore/MuseScore" target="_blank" rel="external">https://github.com/musescore/MuseScore</a>) * <a href="http://cogx.org/" target="_blank" rel="external">Cog</a> - 一个免费的开源音频播放器。(<a href="https://bitbucket.org/mamburu/cog/" target="_blank" rel="external">https://bitbucket.org/mamburu/cog/</a>) </li>
<li><a href="https://mac.eltima.com/media-player.html" target="_blank" rel="external">Elmedia Player</a> - 支持FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V等格式播放.</li>
<li><a href="http://www.videolan.org/" target="_blank" rel="external">VLC</a> - 开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件。(<a href="https://github.com/videolan/vlc" target="_blank" rel="external">https://github.com/videolan/vlc</a>) </li>
<li><a href="http://tmkk.undo.jp/xld/index_e.html" target="_blank" rel="external">XLD</a> - 解码/解码/转换/播放各种“无损”音频文件。(<a href="https://code.google.com/archive/p/xld/source" target="_blank" rel="external">https://code.google.com/archive/p/xld/source</a>) <strong>[推荐]</strong>  </li>
<li><a href="https://handbrake.fr/" target="_blank" rel="external">HandBrake</a> - 高性能的视频编码和转换工具，具有很好的图形用户界面。(<a href="https://github.com/HandBrake/HandBrake" target="_blank" rel="external">https://github.com/HandBrake/HandBrake</a>)</li>
<li><a href="http://mplayerx.org" target="_blank" rel="external">MPlayerX</a> - 媒体播放器。(<a href="https://github.com/niltsh/MPlayerX" target="_blank" rel="external">https://github.com/niltsh/MPlayerX</a>) </li>
<li><a href="https://mafintosh.github.io/playback/" target="_blank" rel="external">Playback</a> - 实验性质的视频播放器。 (<a href="https://github.com/mafintosh/playback" target="_blank" rel="external">https://github.com/mafintosh/playback</a>)</li>
<li><a href="https://www.shotcut.org" target="_blank" rel="external">Shotcut</a> - 免费开源视频编辑器。 (<a href="https://github.com/mltframework/shotcut" target="_blank" rel="external">https://github.com/mltframework/shotcut</a>) </li>
<li><a href="http://www.telestream.net/screenflow/" target="_blank" rel="external">ScreenFlow</a> - 屏幕和视频编辑软件。</li>
<li><a href="http://www.arctime.org/" target="_blank" rel="external">ArcTime</a> - 跨平台字幕制作软件。 <strong>[推荐] [必备]</strong></li>
<li><a href="http://perian.org/#download" target="_blank" rel="external">Perian</a> - 让QuickTime播放所有常见格式的免费插件。  (<a href="https://github.com/MaddTheSane/perian" target="_blank" rel="external">https://github.com/MaddTheSane/perian</a>)  <strong>[推荐] [必备]</strong></li>
<li><a href="https://macroplant.com/adapter" target="_blank" rel="external">Adapter</a> - 视频，音频和图像转换工具。<strong>[推荐]</strong>  </li>
<li><a href="http://synfig.org" target="_blank" rel="external">Synfig Studio</a> - 工业级、强大的2D矢量动画制作软件。(<a href="https://github.com/synfig/synfig" target="_blank" rel="external">https://github.com/synfig/synfig</a>) <em> <a href="http://www.aegisub.org/" target="_blank" rel="external">Aegisub</a> - 免费、开源、跨平台的专业字幕编辑软件，可以快速打轴，制作特效字幕等，字幕组必备。 (<a href="https://github.com/Aegisub/Aegisub/" target="_blank" rel="external">https://github.com/Aegisub/Aegisub/</a>) <em>*[推荐]</em></em>   </li>
<li><a href="http://www.iffmpeg.com/" target="_blank" rel="external">iFFmpeg</a> - MacOS 上功能强大、易用的视频压制软件。 <strong>[推荐]</strong>   </li>
<li><a href="https://evilcult.github.io/moviecatcher/" target="_blank" rel="external">Movie Catcher</a> - 电影美剧搜索及在线观看离线下载软件，借助百度云实现离线下载以及在线播放功能。 (<a href="https://github.com/EvilCult/moviecatcher" target="_blank" rel="external">https://github.com/EvilCult/moviecatcher</a>)</li>
<li><a href="https://github.com/ddddxxx/LyricsX" target="_blank" rel="external">LyricsX</a> - 一款功能完备的歌词工具。 (<a href="https://github.com/ddddxxx/LyricsX" target="_blank" rel="external">https://github.com/ddddxxx/LyricsX</a>) (<a href="https://itunes.apple.com/us/app/lyricsx/id1254743014?mt=12" target="_blank" rel="external">https://itunes.apple.com/us/app/lyricsx/id1254743014?mt=12</a>) </li>
<li><p><a href="https://github.com/kmikiy/SpotMenu" target="_blank" rel="external">SpotMenu</a> - Spotify和iTunes在状态菜单栏中显示。 (<a href="https://github.com/kmikiy/SpotMenu" target="_blank" rel="external">https://github.com/kmikiy/SpotMenu</a>) </p>
<h4 id="云音乐播放器"><a href="#云音乐播放器" class="headerlink" title="云音乐播放器"></a>云音乐播放器</h4></li>
<li><p><a href="http://music.163.com/" target="_blank" rel="external">网易云音乐</a> </p>
</li>
<li><a href="http://music.163.com/" target="_blank" rel="external">ieaseMusic</a> 基于网易云音乐 (<a href="https://github.com/Binaryify/NeteaseCloudMusicApi" target="_blank" rel="external">https://github.com/Binaryify/NeteaseCloudMusicApi</a>) </li>
<li><a href="https://y.qq.com/download/index.html" target="_blank" rel="external">QQ音乐</a> </li>
<li><a href="http://www.xiami.com/apps/mac" target="_blank" rel="external">虾米音乐</a> </li>
<li><a href="http://kuwo.cn/down/index" target="_blank" rel="external">酷我音乐</a> </li>
<li><p><a href="http://download.kugou.com/mac.html" target="_blank" rel="external">酷狗音乐</a> </p>
<h2 id="书签阅读写作"><a href="#书签阅读写作" class="headerlink" title="书签阅读写作"></a>书签阅读写作</h2></li>
<li><p><a href="http://www.openoffice.org/zh-cn/download/index.html" target="_blank" rel="external">OpenOffice</a> - 是一套跨平台的办公室软件套件。(<a href="http://openoffice.apache.org/source.html" target="_blank" rel="external">http://openoffice.apache.org/source.html</a>)  <strong>[推荐] [必备]</strong></p>
</li>
<li><a href="https://zh-cn.libreoffice.org/" target="_blank" rel="external">LibreOffice</a> - 一款功能强大的免费开源办公软件，默认使用开放文档格式，并支持其他多种文档格式。(<a href="http://zh-cn.libreoffice.org/download/source-code/" target="_blank" rel="external">http://zh-cn.libreoffice.org/download/source-code/</a>) </li>
<li><a href="https://www.kde.org/applications/office/" target="_blank" rel="external">KOffice</a> - 集成化办公套件，包含文字处理器、电子 表格、幻灯片制作、项目管理等多种工具。</li>
<li><a href="https://bananafishsoftware.com/products/spillo/" target="_blank" rel="external">Spillo</a> - 功能强大，美观、快速网络书签网页阅读。</li>
<li><a href="http://www.robinlu.com/ichm" target="_blank" rel="external">iChm</a> - 读chm文件的软件。</li>
<li><a href="http://chmox.sourceforge.net/" target="_blank" rel="external">Chmox</a> - 读chm文件的软件。</li>
<li><a href="http://www.hewbo.com/chm-reader.html" target="_blank" rel="external">CHM Reader</a> - 读chm文件的软件。<strong>[推荐]</strong>  </li>
<li><a href="http://skim-app.sourceforge.net" target="_blank" rel="external">Skim</a> - PDF阅读器和笔记本。 (<a href="https://sourceforge.net/projects/skim-app/" target="_blank" rel="external">https://sourceforge.net/projects/skim-app/</a>) </li>
<li><a href="https://pdfexpert.com/" target="_blank" rel="external">PDF Expert</a> - PDF阅读、批注，编辑文本，添加照片，填写表单。</li>
<li><a href="https://marginnote.com/?lang=zh-hans" target="_blank" rel="external">MarginNote</a> - 一款优秀的 PDF 有标注软件，批注、抽认卡、思维导图、汇总视图等功能。 </li>
<li><a href="http://www.amazon.com/gp/help/customer/display.html?nodeId=201246110" target="_blank" rel="external">Kindle App</a> - 亚马逊 Kindle App 电子书阅读器。</li>
<li><a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> - 全新的 Kindle、iBooks 标注管理工具。(<a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me</a>)</li>
<li><a href="https://www.texpad.com/" target="_blank" rel="external">texpad</a> - Mac下非常棒的LaTeX编辑器。 支持自动编译预览，自动补全等。</li>
<li><a href="http://www.bear-writer.com/" target="_blank" rel="external">Bear Writer</a> - 漂亮，灵活的写作应用程序，用于制作笔记和散文。 (<a href="https://itunes.apple.com/us/app/bear-beautiful-writing-app/id1091189122?ls=1&amp;mt=12" target="_blank" rel="external">https://itunes.apple.com/us/app/bear-beautiful-writing-app/id1091189122?ls=1&amp;mt=12</a>)</li>
<li><a href="https://boostnote.io/" target="_blank" rel="external">Boostnote</a> - 为程序员量身定做的笔记应用。 (<a href="https://github.com/BoostIO/Boostnote" target="_blank" rel="external">https://github.com/BoostIO/Boostnote</a>) <strong>[推荐]</strong>  </li>
<li><p><a href="http://www.qownnotes.org/" target="_blank" rel="external">QOwnNotes</a> - 是开源记事本，带有markdown支持和待办事项列表管理器。 (<a href="https://github.com/pbek/QOwnNotes" target="_blank" rel="external">https://github.com/pbek/QOwnNotes</a>) </p>
</li>
<li><p><a href="http://www.feedsapp.com/" target="_blank" rel="external">Feeds 2</a> - 监控任何RSS。(<a href="https://github.com/nfarina/feeds" target="_blank" rel="external">https://github.com/nfarina/feeds</a>)     </p>
</li>
<li><a href="http://readkitapp.com/" target="_blank" rel="external">ReadKit</a> - 书签RSS管理客户端。</li>
<li><a href="http://reederapp.com/mac/" target="_blank" rel="external">Reeder 3</a> - RSS 服务订阅。 <strong>[推荐] [必备]</strong></li>
<li><a href="http://www.rockysandstudio.com/" target="_blank" rel="external">Leaf</a> - RSS 客户端程序。</li>
<li><a href="http://viennarss.github.io/" target="_blank" rel="external">Vienna</a> - RSS/Atom 新闻阅读客户端。(<a href="https://github.com/ViennaRSS/vienna-rss" target="_blank" rel="external">https://github.com/ViennaRSS/vienna-rss</a>) * Markdown</li>
<li><a href="https://ivarptr.github.io/yu-writer.site/" target="_blank" rel="external">Yu Writer</a> - 一款能找到写作乐趣的 Markdown 文本编辑器。  <strong>[推荐] [必备]</strong></li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a> - 免费 Markdown 编辑神器。</li>
<li><a href="https://yhatt.github.io/marp/" target="_blank" rel="external">Marp</a> -  Markdown 制作幻灯片编辑器。(<a href="https://github.com/yhatt/marp" target="_blank" rel="external">https://github.com/yhatt/marp</a>)    </li>
<li><a href="http://www.textnutwriter.com/" target="_blank" rel="external">TextNut</a> - Markdown编辑器，富文本之间自由切换。    </li>
<li><a href="http://zh.mweb.im/" target="_blank" rel="external">MWeb</a> - 专业的 Markdown 写作、记笔记、静态博客生成软件。</li>
<li><a href="http://www.typora.io/" target="_blank" rel="external">Typora</a> - 基于 Electron 的“读写一体” Markdown 编辑器。 <strong>[推荐]</strong>  </li>
<li><a href="http://macdown.uranusjr.com/" target="_blank" rel="external">MacDown</a> - 一款开源的Markdown编辑器，深受<a href="http://25.io/mou/" target="_blank" rel="external">Mou</a>的影响。 <strong>[推荐]</strong>       </li>
<li><a href="https://github.com/egoist/eme" target="_blank" rel="external">EME</a> - 最近刚出的一款Markdown编辑器，界面很像Chrome浏览器的界面，很简约。</li>
<li><a href="http://lightpaper.42squares.in/" target="_blank" rel="external">LightPaper</a> - 简单的Markdown文本编辑器。</li>
<li><a href="http://marked2app.com/" target="_blank" rel="external">Marked 2</a> - Markdown文本预览编辑。</li>
<li><a href="https://ia.net/writer/" target="_blank" rel="external">iA Writer</a> - Markdown文本预览编辑，注重语法检查，专门为作家提供的编辑器。</li>
<li><a href="https://www.ulyssesapp.com/features/" target="_blank" rel="external">Ulysses</a> - 适用于Mac，iPad和iPhone的写作应用程序，支持Markdown。</li>
<li><a href="https://www.zybuluo.com/" target="_blank" rel="external">Cmd Markdown</a> - Cmd Markdown 编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。 </li>
<li><a href="http://happenapps.com/#quiver" target="_blank" rel="external">Quiver</a> - 程序猿的笔记本。</li>
<li><a href="http://note.youdao.com/" target="_blank" rel="external">有道云笔记</a> - 支持多目录，Markdown，iWork/Office预览。<strong>[推荐] [必备]</strong></li>
<li><a href="http://www.wiz.cn/download.html" target="_blank" rel="external">为知笔记</a> - 支持Markdown，搜集整理图片链接导入文档。<strong>[推荐] [必备]</strong></li>
<li><a href="http://app.leanote.com" target="_blank" rel="external">leanote</a> - 支持Markdown的一款开源笔记软件，支持直接成为个人博客。(<a href="https://github.com/leanote/leanote" target="_blank" rel="external">https://github.com/leanote/leanote</a>)    </li>
<li><a href="https://evernote.com/" target="_blank" rel="external">Evernote</a> - 笔记本应用程序。  <strong>[推荐] [必备]</strong></li>
<li><a href="https://www.onenote.com/" target="_blank" rel="external">OneNote</a> - 微软备注应用。  <strong>[推荐] [必备]</strong> </li>
<li><a href="https://www.inkdrop.info/" target="_blank" rel="external">Inkdrop</a> - Markdown爱好者的笔记本应用程序。</li>
<li><a href="http://www.get-notes.com/" target="_blank" rel="external">Notes</a> - 简洁的笔记应用。 (<a href="https://github.com/nuttyartist/notes" target="_blank" rel="external">https://github.com/nuttyartist/notes</a>)     </li>
<li><p><a href="https://www.zoho.com/notebook/notebook-for-mac.html" target="_blank" rel="external">Notebook</a> 漂亮的笔记本应用程序。 </p>
<h2 id="制作电子书"><a href="#制作电子书" class="headerlink" title="制作电子书"></a>制作电子书</h2></li>
<li><p><a href="http://calibre-ebook.com/" target="_blank" rel="external">Calibre</a> - 丑陋的软件，但强大的软件电子书管理和转换。(<a href="https://github.com/kovidgoyal/calibre" target="_blank" rel="external">https://github.com/kovidgoyal/calibre</a>) </p>
</li>
<li><a href="https://sigil-ebook.com/" target="_blank" rel="external">Sigil</a> - 多平台EPUB编辑器。 (<a href="https://github.com/Sigil-Ebook/Sigil" target="_blank" rel="external">https://github.com/Sigil-Ebook/Sigil</a>) </li>
<li><p><a href="https://www.scribus.net/" target="_blank" rel="external">Scribus</a> - 开源电子杂志制作软件。 (<a href="https://sourceforge.net/projects/scribus/" target="_blank" rel="external">https://sourceforge.net/projects/scribus/</a>) </p>
<h2 id="FTP客户端"><a href="#FTP客户端" class="headerlink" title="FTP客户端"></a>FTP客户端</h2></li>
<li><p><a href="https://panic.com/transmit/" target="_blank" rel="external">Transmit</a> - 一个FTP客户端，支持FTP + SFTP + S3。</p>
</li>
<li><a href="http://fivedetails.com/flow/" target="_blank" rel="external">Flow</a> - 支持简单的 FTP + SFTP 客户端。</li>
<li><a href="http://www.yummysoftware.com" target="_blank" rel="external">Yummy FTP</a> - 专业快速，可靠的FTP客户端。</li>
<li><a href="https://cyberduck.io" target="_blank" rel="external">Cyberduck</a> - 免费FTP，SFTP，S3和WebDAV客户端 &amp; OpenStack Swift Client。</li>
<li><a href="https://filezilla-project.org" target="_blank" rel="external">FileZilla</a> - 跨平台的FTP，FTPS和SFTP客户端。</li>
</ul>
<h2 id="软件打包工具"><a href="#软件打包工具" class="headerlink" title="软件打包工具"></a>软件打包工具</h2><ul>
<li><a href="https://github.com/sindresorhus/create-dmg" target="_blank" rel="external">create-dmg</a> - 快速创建一个压缩镜像文件。 (<a href="https://github.com/sindresorhus/create-dmg" target="_blank" rel="external">https://github.com/sindresorhus/create-dmg</a>)</li>
<li><a href="https://johnste.github.io/finicky/" target="_blank" rel="external">Finicky</a> - Web应用程序转化为苹果的应用程序。(<a href="https://github.com/johnste/finicky" target="_blank" rel="external">https://github.com/johnste/finicky</a>) </li>
<li><a href="http://nwjs.io" target="_blank" rel="external">nw.js</a> - 使用HTML和JavaScript来制作桌面应用。(<a href="https://github.com/nwjs/nw.js" target="_blank" rel="external">https://github.com/nwjs/nw.js</a>) </li>
<li><a href="https://electronjs.org/" target="_blank" rel="external">Electron</a> - 前身是 AtomShell，使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。(<a href="https://github.com/electron/electron" target="_blank" rel="external">https://github.com/electron/electron</a>) </li>
<li><a href="https://github.com/pojala/electrino" target="_blank" rel="external">Electrino</a> - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序，构建出的应用体积比Electron小。(<a href="https://github.com/pojala/electrino" target="_blank" rel="external">https://github.com/pojala/electrino</a>) </li>
<li><a href="http://reactdesktop.js.org" target="_blank" rel="external">react-desktop</a> - 为 macOS Sierra带来React UI组件。(<a href="https://github.com/gabrielbull/react-desktop" target="_blank" rel="external">https://github.com/gabrielbull/react-desktop</a>) </li>
<li><a href="https://microsoft.github.io/reactxp/" target="_blank" rel="external">ReactXP</a> - 微软官方出品，支持平台Web，iOS，Android和Windows UWP仍然是一项正在进行的工作。(<a href="https://github.com/microsoft/reactxp" target="_blank" rel="external">https://github.com/microsoft/reactxp</a>) </li>
<li><a href="https://github.com/ptmt/react-native-desktop" target="_blank" rel="external">React Native macOS</a> - 用 React Native 技术构建 OS X 下的桌面应用程序。(<a href="https://github.com/ptmt/react-native-desktop" target="_blank" rel="external">https://github.com/ptmt/react-native-desktop</a>) <strong>[推荐]</strong>  </li>
<li><a href="https://github.com/CanonicalLtd/react-native" target="_blank" rel="external">React Native Desktop for Ubuntu</a> - 用 React Native 技术构建 Ubuntu 下的桌面应用程序。(<a href="https://github.com/CanonicalLtd/react-native" target="_blank" rel="external">https://github.com/CanonicalLtd/react-native</a>) <strong>[推荐]</strong>  </li>
<li><a href="http://appjs.com/" target="_blank" rel="external">AppJS</a> - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。(<a href="https://github.com/appjs/appjs" target="_blank" rel="external">https://github.com/appjs/appjs</a>) <em> <a href="http://hex.youdao.com/zh-cn/index.html" target="_blank" rel="external">HEX</a> - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序，有道出品。(<a href="https://github.com/netease-youdao/hex" target="_blank" rel="external">https://github.com/netease-youdao/hex</a>) </em> <a href="https://github.com/AlloyTeam/webtop" target="_blank" rel="external">AlloyDesktop</a> - 同上，腾讯出品，给个差评。(<a href="https://github.com/AlloyTeam/webtop" target="_blank" rel="external">https://github.com/AlloyTeam/webtop</a>) * <a href="http://macgapproject.github.io/" target="_blank" rel="external">MacGap</a> - 桌面WebKit打包HTML、CSS、JS应用。(<a href="https://github.com/MacGapProject" target="_blank" rel="external">https://github.com/MacGapProject</a>) </li>
<li><p><a href="http://ionicframework.com/" target="_blank" rel="external">ionic</a> - 一个用来开发混合手机应用的，开源的，免费的代码库。 (<a href="https://github.com/driftyco/ionic" target="_blank" rel="external">https://github.com/driftyco/ionic</a>) </p>
<h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2></li>
<li><p><a href="https://www.transmissionbt.com/" target="_blank" rel="external">Transmission</a> - 免费的BitTorrent客户端 (<a href="https://github.com/transmission/transmission" target="_blank" rel="external">https://github.com/transmission/transmission</a>) </p>
</li>
<li><a href="https://aria2.github.io/" target="_blank" rel="external">aria2</a> - 一款支持多种协议的轻量级命令行下载工具。(<a href="https://github.com/aria2" target="_blank" rel="external">https://github.com/aria2</a>) </li>
<li><a href="http://jdownloader.org/" target="_blank" rel="external">JDownloader</a> - 下载工具，下载文件的一键式托管。</li>
<li><a href="https://you-get.org/" target="_blank" rel="external">You-Get</a> - 网络富媒体命令行下载工具。(<a href="https://github.com/soimort/you-get" target="_blank" rel="external">https://github.com/soimort/you-get</a>) </li>
<li><a href="http://www.freedownloadmanager.org/" target="_blank" rel="external">Free Download Manager</a> - 功能强大的下载加速器。</li>
<li><a href="http://mac.eltima.com/download-manager.html" target="_blank" rel="external">FOLX</a> - 一个Mac osx 系统风格界面的下载管理工具。 </li>
<li><a href="https://software.charliemonroe.net/downie.php" target="_blank" rel="external">Downie</a> - 支持多达近 1200 个视频站点的视频下载工具。</li>
</ul>
<h2 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h2><p>*推荐一些有Mac客户端的网盘。</p>
<ul>
<li><a href="http://www.dropboxchina.com/Download/dropbox-for-mac.html" target="_blank" rel="external">Dropbox</a> - 非常好用的免费网络文件同步工具，提供在线存储服务。* <a href="http://pan.baidu.com/download?from=header#pan" target="_blank" rel="external">百度云</a> - 百度云客户端。</li>
<li><a href="https://www.weiyun.com/" target="_blank" rel="external">腾讯微云</a> - 腾讯云客户端。</li>
<li><a href="https://www.jianguoyun.com/s/downloads" target="_blank" rel="external">坚果云</a> - 坚果云客户端。</li>
<li><a href="http://pc.115.com/" target="_blank" rel="external">115</a> - 115云客户端。</li>
<li>~~<a href="http://c49.yunpan.360.cn/" target="_blank" rel="external">360</a> - 360云客户端。~</li>
<li>~~<a href="http://web.kuaipan.cn/d/mac" target="_blank" rel="external">快盘</a> - 金山快盘。 ~</li>
<li><a href="https://owncloud.org" target="_blank" rel="external">ownCloud</a> - 私有云网盘。</li>
<li><a href="https://nextcloud.com/" target="_blank" rel="external">NextCloud</a> - 基于ownCloud完全开源免费开源，企业文件同步和共享。 </li>
<li><a href="https://mega.nz" target="_blank" rel="external">Mega</a> - 免费的云服务，提供50GB的免费存储空间。</li>
<li><a href="https://www.fangcloud.com/" target="_blank" rel="external">亿方云</a> - 硅谷团队打造，个人免费。</li>
<li><p><a href="https://www.seafile.com/" target="_blank" rel="external">Seafile</a> - 是由国内团队开发的国际化的开源云存储软件项目。</p>
<h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2></li>
<li><p>~~<a href="http://qq.pinyin.cn/" target="_blank" rel="external">QQ输入法</a> - 腾讯出品的输入法。~</p>
</li>
<li><a href="http://pinyin.sogou.com/mac/" target="_blank" rel="external">搜狗输入法</a> - 搜狗输入法。</li>
<li><a href="https://srf.baidu.com/input/mac.html" target="_blank" rel="external">百度输入法</a> - 支持拼音五笔输入。</li>
<li><a href="https://im.logcg.com/loginputmac" target="_blank" rel="external">落格输入法</a> - 打破 Mac 双拼多年来的窘境。</li>
<li><a href="https://qingg.im/index.html" target="_blank" rel="external">清歌五笔输入法</a> - 为 iOS 和 Mac 专门打造的五笔输入法。</li>
<li><a href="http://www.pawpawsoft.com" target="_blank" rel="external">WBIM</a> - 五笔输入法。</li>
<li><a href="https://itunes.apple.com/cn/app/yan-wen-zi/id914708191?mt=12" target="_blank" rel="external">颜文字</a> - 颜文字输入。</li>
<li><a href="http://rime.im/" target="_blank" rel="external">RIME</a> - 中州韻輸入法引擎。(<a href="https://github.com/rime" target="_blank" rel="external">https://github.com/rime</a>) <strong>[推荐] [必备]</strong></li>
<li><a href="https://github.com/dongyuwei/hallelujahIM" target="_blank" rel="external">哈利路亚英文输入法</a> - 智能英文输入法，具备自动补全，自动纠错功能。 </li>
<li><a href="http://matthewpalmer.net/rocket/" target="_blank" rel="external">Rocket</a> - 使用冒号快捷键可以更快捷地输入表情符号。</li>
<li><a href="http://matthewpalmer.net/rocket/" target="_blank" rel="external">Type2Phone</a> - 把Macbook键盘变为iPhone的蓝牙键盘。 (<a href="https://itunes.apple.com/cn/app/type2phone-bluetooth-keyboard/id472717129?mt=12" target="_blank" rel="external">https://itunes.apple.com/cn/app/type2phone-bluetooth-keyboard/id472717129?mt=12</a>)</li>
<li><a href="https://github.com/utatti/kawa" target="_blank" rel="external">Kawa</a> - 给每个输入法定义一个快捷键. (<a href="https://github.com/utatti/kawa" target="_blank" rel="external">https://github.com/utatti/kawa</a>) <h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2></li>
</ul>
<p><em>这里放Mac的浏览器应用</em></p>
<ul>
<li><a href="http://www.apple.com/cn/safari/" target="_blank" rel="external">Safari</a> - Mac预装自带浏览器。</li>
<li><a href="http://www.google.cn/chrome/browser/" target="_blank" rel="external">Chrome</a> - Chrome浏览器谷歌出品。</li>
<li><a href="http://www.firefox.com.cn/" target="_blank" rel="external">Firefox</a> - 迎接 Firefox Quantum。快，只为更好。火狐浏览器。</li>
<li><a href="http://www.opera.com/zh-cn" target="_blank" rel="external">Opera</a> - Opera 浏览器。</li>
<li><a href="http://browser.qq.com/mac/" target="_blank" rel="external">QQ浏览器</a> - QQ浏览器－腾讯出品。</li>
<li><a href="http://www.maxthon.cn/mac/" target="_blank" rel="external">傲游云浏览器</a> - 傲游云浏览器。</li>
<li><a href="https://vivaldi.com/" target="_blank" rel="external">Vivaldi</a> - Opera开发商出品新的浏览器。</li>
<li><a href="http://oryoki.io/" target="_blank" rel="external">Ōryōki</a> - 小的web浏览器。这是一个试验性的项目，目前正在开发中</li>
<li><p><a href="https://brave.com/" target="_blank" rel="external">Brave</a> - 用Brave浏览更快更安全。 </p>
<h2 id="翻译工具"><a href="#翻译工具" class="headerlink" title="翻译工具"></a>翻译工具</h2></li>
<li><p><a href="http://cidian.youdao.com/multi.html" target="_blank" rel="external">有道翻译</a> - 有道词典桌面版</p>
</li>
<li><a href="http://cidian.dict.cn/mac.html" target="_blank" rel="external">辞海词典</a> - 学单词、背单词、辞海词典。</li>
<li><a href="http://www.eudic.net/eudic/mac_dictionary.aspx" target="_blank" rel="external">eudic</a> - 欧路词典词典。</li>
<li><a href="http://www.itranslate.com/" target="_blank" rel="external">iTranslate</a> - 支持全世界超过 80 种语言发音和输出。 </li>
<li><a href="https://app.grammarly.com/" target="_blank" rel="external">Grammarly</a> - 修正英语语法及用语</li>
<li><a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> - 截图识别文字、翻译  (<a href="https://itunes.apple.com/cn/app/id1314980676?mt=12" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1314980676?mt=12</a>)</li>
</ul>
<h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><p><em>假设你是个勤奋的同学，你总有一天会强烈需要它们，上帝保佑他们吧。</em></p>
<ul>
<li><a href="https://github.com/zhuhaow/SpechtLite" target="_blank" rel="external">SpechtLite</a> - 支持 Shadowsocks 及规则管理的高效率代理。(<a href="https://github.com/shadowsocks" target="_blank" rel="external">https://github.com/shadowsocks</a>) </li>
<li><a href="http://shadowsocks.org/" target="_blank" rel="external">ShadowsocksX</a> - 一个快速的隧道代理，可以帮助你绕过防火墙。(<a href="https://github.com/shadowsocks" target="_blank" rel="external">https://github.com/shadowsocks</a>) </li>
<li><a href="https://github.com/qiuyuzhou/ShadowsocksX-NG" target="_blank" rel="external">ShadowsocksX-NG</a> - 一款ShadowsocksX客户端软件。(<a href="https://github.com/qiuyuzhou/ShadowsocksX-NG" target="_blank" rel="external">https://github.com/qiuyuzhou/ShadowsocksX-NG</a>) </li>
<li><a href="https://getlantern.org" target="_blank" rel="external">Lantern</a> - 科学上网。(<a href="https://github.com/getlantern/lantern" target="_blank" rel="external">https://github.com/getlantern/lantern</a>) <strong>[推荐] [必备]</strong> </li>
<li><a href="https://ybb1024.com/" target="_blank" rel="external">鱼摆摆</a> - 科学上网。</li>
<li><a href="https://www.tunnelbear.com" target="_blank" rel="external">Tunnelbear</a> - 简单的私人VPN。 </li>
<li><a href="https://tunnelblick.net/downloads.html" target="_blank" rel="external">Tunnelblick</a> - OpenVPN的免费软件。* <a href="https://github.com/OldFrank/GoAgentX" target="_blank" rel="external">GoAgentX</a> - 科学上网。(<a href="https://github.com/getlantern/lantern" target="_blank" rel="external">https://github.com/getlantern/lantern</a>) </li>
<li><a href="https://nssurge.com/" target="_blank" rel="external">Surge</a> - 科学上网。(<a href="https://itunes.apple.com/us/app/surge-web-developer-tool-proxy/id1040100637" target="_blank" rel="external">https://itunes.apple.com/us/app/surge-web-developer-tool-proxy/id1040100637</a>)</li>
<li><a href="https://www.ytpub.com/" target="_blank" rel="external">云梯</a> - 在圈内小有名气的VPN服务提供商。<strong>[推荐]</strong>  </li>
<li><a href="http://50r.cn/ifn76I" target="_blank" rel="external">srocket</a> - 开启科学上网。</li>
<li><a href="https://www.locovpn.co/mannul/" target="_blank" rel="external">LoCoVPN</a> - 每天签到可获得2小时免费VPN加速。<em> <a href="http://www.2-vpn4.cc/home.action" target="_blank" rel="external">二师兄VPN</a> - 提供无限流量、无限续期免费VPN账号。</em> <a href="http://www.jsqgtx.cc/DownLoad" target="_blank" rel="external">GTX加速器</a> - 每天签到领取500M流量。</li>
<li><a href="https://www.greenjsq.me/" target="_blank" rel="external">GreenVPN</a> - 注册激活送免费VPN加速流量。</li>
<li><a href="https://www.wisevpn.net" target="_blank" rel="external">WiseVPN</a> - 无限流量，免费VPN。</li>
<li><a href="http://fengchinet2.com/" target="_blank" rel="external">风驰VPN</a> - 无限流量、无限续期的免费VPN加速服务。</li>
<li><a href="https://www.plutox.top/" target="_blank" rel="external">PlutoX</a> - 一款网络调试工具，科学上网工具。(<a href="https://itunes.apple.com/us/app/manico/id1176077430" target="_blank" rel="external">https://itunes.apple.com/us/app/manico/id1176077430</a>)</li>
<li><a href="https://www.tinc-vpn.org" target="_blank" rel="external">tinc</a> - VPN软件. (<a href="https://www.tinc-vpn.org/git/browse?p=tinc" target="_blank" rel="external">https://www.tinc-vpn.org/git/browse?p=tinc</a>) </li>
<li><a href="https://www.shimovpn.com/" target="_blank" rel="external">Shimo</a> - 连接大量VPN的应用</li>
<li><a href="https://www.v2ray.com/" target="_blank" rel="external">V2Ray</a> - 原生支持Socks、HTTP、Shadowsocks、VMess 等协议。</li>
<li><a href="https://www.freevpn.pw/mac-vpn" target="_blank" rel="external">FreeVPN Plus</a> - 永不过期Mac免费VPN。 (<a href="https://itunes.apple.com/cn/app/freevpn-plus-永不过期mac免费vpn/id1202726435" target="_blank" rel="external">https://itunes.apple.com/cn/app/freevpn-plus-永不过期mac免费vpn/id1202726435</a>)</li>
<li><a href="https://github.com/yinghuocho/firefly-proxy" target="_blank" rel="external">Firefly 萤火虫</a> - 免费科学上网。</li>
</ul>
<h2 id="其它实用工具"><a href="#其它实用工具" class="headerlink" title="其它实用工具"></a>其它实用工具</h2><ul>
<li><a href="https://github.com/fancymax/12306ForMac" target="_blank" rel="external">12306ForMac</a> - Mac版12306 订票/捡票 助手。(<a href="https://github.com/fancymax/12306ForMac" target="_blank" rel="external">https://github.com/fancymax/12306ForMac</a>) <strong>[推荐]</strong>    </li>
<li><a href="http://www.airserver.com/Download" target="_blank" rel="external">AirServer</a> - 将手机投影到电脑上。</li>
<li><a href="https://manta.life/" target="_blank" rel="external">Manta</a> - 灵活的发票桌面应用程序，漂亮和可定制模板。(<a href="https://github.com/hql287/Manta" target="_blank" rel="external">https://github.com/hql287/Manta</a>) </li>
<li><a href="https://www.mediaatelier.com/CheatSheet/" target="_blank" rel="external">CheatSheet</a> - CheatSheet 是一款Mac上的非常实用的快捷键快速提醒工具。 </li>
<li><a href="http://indragie.com/snap" target="_blank" rel="external">Snap</a> - 一款可以给 Dock 上的程序添加快捷键的小工具。 (<a href="https://itunes.apple.com/cn/app/id418073146" target="_blank" rel="external">https://itunes.apple.com/cn/app/id418073146</a>)</li>
<li><a href="https://github.com/insidegui/WWDC" target="_blank" rel="external">WWDC</a> - Mac OS的非官方的WWDC APP。(<a href="https://github.com/insidegui/WWDC" target="_blank" rel="external">https://github.com/insidegui/WWDC</a>) </li>
<li><a href="http://xscopeapp.com/" target="_blank" rel="external">xScope</a> - 测量、检查和测试屏幕上的图形和布局的工具。搜索你的苹果和网络，快速打开应用程序。</li>
<li><a href="https://justgetflux.com/" target="_blank" rel="external">f.lux</a> - 自动调整您的电脑屏幕，以匹配亮度。</li>
<li><a href="https://todoist.com/mac" target="_blank" rel="external">Todoist</a> - 跨平台的任务管理器与移动应用程序。</li>
<li><a href="https://help.dida365.com/" target="_blank" rel="external">滴答清单</a> - 轻便的待办事项应用。</li>
<li><a href="https://www.taskpaper.com/" target="_blank" rel="external">TaskPaper</a> - 漂亮的纯文本任务列表。</li>
<li><a href="https://todoist.com/mac" target="_blank" rel="external">Wunderlist</a> - 奇妙清单跨平台的任务管理器与移动应用程序。</li>
<li><a href="http://scripts.sil.org/ukelele" target="_blank" rel="external">Ukelele</a> - Unicode键盘布局编辑器。</li>
<li><a href="https://pqrs.org/osx/karabiner/" target="_blank" rel="external">Karabiner</a> - 一个强大的和稳定的OS X的键盘定制。(<a href="https://github.com/tekezo/Karabiner" target="_blank" rel="external">https://github.com/tekezo/Karabiner</a>) </li>
<li><a href="http://www.keyboardmaestro.com" target="_blank" rel="external">Keyboard Maestro</a> - 根据键盘，菜单，位置，添加的设备等触发器自动执行日常操作。</li>
<li><a href="http://keytty.com" target="_blank" rel="external">Keytty</a> - 让你通过键盘使用鼠标。</li>
<li><a href="http://mos.u2sk.com/indexCN.html" target="_blank" rel="external">Mos</a> - 让你的鼠标滚轮丝滑如触控板。(<a href="https://github.com/Caldis/Mos" target="_blank" rel="external">https://github.com/Caldis/Mos</a>) </li>
<li><a href="http://freemacsoft.net/appcleaner/" target="_blank" rel="external">AppCleaner</a> - 一个小应用程序，让你彻底卸载不需要的应用程序。<strong>[推荐]</strong>  </li>
<li><a href="https://github.com/waylybaye/XcodeCleaner" target="_blank" rel="external">Cleaner for Xcode</a> - Xcode 的清理工具，清理几十G应该不是问题。(<a href="https://github.com/waylybaye/XcodeCleaner" target="_blank" rel="external">https://github.com/waylybaye/XcodeCleaner</a>) [推荐]</li>
<li><a href="https://macitbetter.com/" target="_blank" rel="external">BetterZip 3</a> - 压缩解压缩工具支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。 <strong>[推荐] [必备]</strong></li>
<li><a href="https://github.com/greenboxal/dns-heaven" target="_blank" rel="external">DNS Heaven</a> - 可以令基于 glibc 的 macOS 应用直接使用原生栈来解析 DNS，主要适用于 VPN。 (<a href="https://github.com/greenboxal/dns-heaven" target="_blank" rel="external">https://github.com/greenboxal/dns-heaven</a>) </li>
<li><a href="https://theunarchiver.com/" target="_blank" rel="external">The Unarchiver</a> - 解压许多不同种类的归档压缩文件。 (<a href="https://bitbucket.org/kosovan/theunarchiver" target="_blank" rel="external">https://bitbucket.org/kosovan/theunarchiver</a>) </li>
<li><a href="http://www.kekaosx.com" target="_blank" rel="external">Keka</a> - 一个免费的 macOS 文件解压缩程序。 (<a href="https://sourceforge.net/projects/keka/" target="_blank" rel="external">https://sourceforge.net/projects/keka/</a>) <code>[推荐]</code></li>
<li><a href="http://numi.io/" target="_blank" rel="external">Numi</a> - 漂亮的计算器应用。</li>
<li><a href="http://memo-app.net/" target="_blank" rel="external">Memo</a> - 给你的便笺加个密。(<a href="https://itunes.apple.com/app/id1212409035" target="_blank" rel="external">https://itunes.apple.com/app/id1212409035</a>)</li>
<li><a href="https://flexibits.com/fantastical" target="_blank" rel="external">Fantastical</a> - 日历应用程序，你将管理好生活。[推荐]</li>
<li><a href="http://www.shauninman.com/archive/2016/10/20/day_o_2_mac_menu_bar_clock" target="_blank" rel="external">Day-O 2</a> - 菜单日历更换内置日历。</li>
<li><a href="http://www.titanium.free.fr/" target="_blank" rel="external">OnyX</a> - 多功能实用工具来验证磁盘和文件，运行清洁和系统维护任务，配置隐藏选项等。</li>
<li><a href="https://masterbuilders.io" target="_blank" rel="external">Focus</a> - 一个漂亮的番茄工作法为基础的时间管理工具。 (<a href="https://itunes.apple.com/us/app/focus-productivity-timer/id777233759?mt=12" target="_blank" rel="external">https://itunes.apple.com/us/app/focus-productivity-timer/id777233759?mt=12</a>)</li>
<li><a href="https://codinn.com/products/ssh-tunnel/" target="_blank" rel="external">SSH Tunnel</a> - 管理你的SSH。</li>
<li><a href="http://enjoygineering.com/mounty/" target="_blank" rel="external">Mounty</a> - NTFS 分区读写组件。</li>
<li><a href="https://www.paragon-software.com/home/ntfs-mac/" target="_blank" rel="external">Paragon NTFS</a> - 在Mac OS X中完全读写、修改、访问Windows NTFS硬盘、U盘等外接设备的文件。</li>
<li><a href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/" target="_blank" rel="external">Tuxera NTFS</a> - Mac上的NTFS文件系统驱动。</li>
<li><a href="https://gfx.io/" target="_blank" rel="external">gfxCardStatus</a> - 控制Mac独立显卡与集成显卡之间的切换。[推荐]</li>
<li><a href="http://openemu.org/" target="_blank" rel="external">openEmu</a> - 模拟器，可以玩魂斗罗之类，放松回到小时候。(<a href="https://github.com/OpenEmu/OpenEmu" target="_blank" rel="external">https://github.com/OpenEmu/OpenEmu</a>) [推荐]</li>
<li><a href="http://portingkit.com/" target="_blank" rel="external">Porting Kit</a> - 在Mac中安装Windows®游戏</li>
<li><a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a> - 效率神器。[推荐] </li>
<li><a href="http://www.hammerspoon.org/" target="_blank" rel="external">Hammerspoon</a> - 功能强大的自动化工具，Lua 脚本驱动，支持窗口管理。(<a href="https://github.com/Hammerspoon/hammerspoon" target="_blank" rel="external">https://github.com/Hammerspoon/hammerspoon</a>) </li>
<li><a href="https://daisydiskapp.com/" target="_blank" rel="external">DaisyDisk</a> - 磁盘空间使用扫描工具。</li>
<li><a href="https://www.omnigroup.com/more" target="_blank" rel="external">OmniDiskSweeper</a> - 磁盘空间使用扫描工具。 [推荐]</li>
<li><a href="https://bjango.com/mac/istatmenus/" target="_blank" rel="external">iStat pro</a> - 免费的Mac OS电脑硬件信息检测软件。</li>
<li><a href="https://getbitbar.com/" target="_blank" rel="external">BitBar</a> - 支持使用各种语言将信息展示到Mac OS的菜单栏。(<a href="https://github.com/matryer/bitbar" target="_blank" rel="external">https://github.com/matryer/bitbar</a>) </li>
<li><a href="https://hluk.github.io/CopyQ" target="_blank" rel="external">CopyQ</a> - 高级功能剪贴板管理工具。 (<a href="https://github.com/hluk/CopyQ" target="_blank" rel="external">https://github.com/hluk/CopyQ</a>) </li>
<li><a href="http://www.clipmenu.com" target="_blank" rel="external">ClipMenu</a> - 一个剪贴板操作的管理器。(<a href="https://github.com/naotaka/ClipMenu" target="_blank" rel="external">https://github.com/naotaka/ClipMenu</a>) </li>
<li><a href="http://pasteapp.me" target="_blank" rel="external">Paste</a> - 智能剪贴板历史片段管理。 (<a href="https://itunes.apple.com/us/app/paste-clipboard-history-manager/id967805235" target="_blank" rel="external">https://itunes.apple.com/us/app/paste-clipboard-history-manager/id967805235</a>)</li>
<li><a href="https://toolinbox.net/iPaste" target="_blank" rel="external">iPaste</a> - 简洁高效的剪贴板增加工具。(<a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_me" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_me</a>)</li>
<li><a href="http://www.controlplaneapp.com/" target="_blank" rel="external">ControlPlane</a> - 自定义Mac情景模式。某些场景让Mac自动静音或是自动打开Mail客户端等等。(<a href="https://github.com/dustinrue/ControlPlane" target="_blank" rel="external">https://github.com/dustinrue/ControlPlane</a>) </li>
<li><a href="http://lightheadsw.com/caffeine/" target="_blank" rel="external">Caffeine</a> - 实用工具，菜单栏按钮，点击休眠。</li>
<li><a href="https://www.mowglii.com/itsycal/" target="_blank" rel="external">Itsycal</a> - 一款简洁实用的开源日历工具。(<a href="https://github.com/sfsam/itsycal" target="_blank" rel="external">https://github.com/sfsam/itsycal</a>) </li>
<li><a href="http://zythum.sinaapp.com/youkuhtml5playerbookmark/" target="_blank" rel="external">HTML5 Player</a> - Chrome插件解决中国视频网站播放视频电脑发热的情况。</li>
<li><a href="http://www.monityapp.com/" target="_blank" rel="external">Monity</a> - 帮助用户实时监控系统的一款非常漂亮的软件。</li>
<li><a href="https://boastr.net" target="_blank" rel="external">BetterTouchTool</a> - 代替默认的系统操作方式（组合键、修饰键、手势等）。</li>
<li><a href="https://github.com/Chris911/iStats" target="_blank" rel="external">iStats</a> - iStats 是一个可以让你快速查看电脑 CPU 温度，磁盘转速和电池等信息的命令行工具。 (<a href="https://github.com/Chris911/iStats" target="_blank" rel="external">https://github.com/Chris911/iStats</a>)</li>
<li><a href="https://github.com/brianmichel/Juice" target="_blank" rel="external">Juice</a> - 让电池显示更有趣 (<a href="https://github.com/brianmichel/Juice" target="_blank" rel="external">https://github.com/brianmichel/Juice</a>) </li>
<li><a href="https://nitroshare.net/" target="_blank" rel="external">NitroShare</a> - 跨平台网络文件传输应用程序。 (<a href="https://github.com/nitroshare/nitroshare-desktop" target="_blank" rel="external">https://github.com/nitroshare/nitroshare-desktop</a>) </li>
<li><a href="https://www.macupdate.com/app/mac/22211/insomniax" target="_blank" rel="external">InsomniaX</a> - 合上盖子不眠不休，继续听歌下载。</li>
<li><a href="https://www.macupdate.com/app/mac/37991/nosleep" target="_blank" rel="external">NoSleep</a> - 合上盖子不休眠，可根据是否连接电源单独设置。</li>
<li><a href="https://coolantformac.com" target="_blank" rel="external">Coolant</a> - 这是能让你知道什么应用程序造成你CPU100%让Mac电脑过热电池耗尽的菜单应用程序。</li>
<li><a href="http://www.smartisan.com/apps/handshaker" target="_blank" rel="external">HandShaker</a> -  Mac 电脑上也可以方便自如地管理您在 Android 手机中的内容。 </li>
<li><a href="http://magnet.crowdcafe.com/" target="_blank" rel="external">Magnet</a> - 一个窗口管理器，可以保持工作空间的组织。 (<a href="https://itunes.apple.com/app/id441258766" target="_blank" rel="external">https://itunes.apple.com/app/id441258766</a>)</li>
<li><a href="https://qotoqot.com/qbserve/" target="_blank" rel="external">Qbserve</a> - 观察你如何度过你的时间。</li>
<li><a href="http://vanilla.matthewpalmer.net" target="_blank" rel="external">Vanilla</a> - 隐藏系统菜单栏。 </li>
<li><a href="http://www.httrack.com" target="_blank" rel="external">HTTrack</a> - 可以下载整个网站和离线浏览。</li>
<li>窗口管理</li>
<li><a href="https://github.com/fikovnik/ShiftIt" target="_blank" rel="external">ShiftIt</a> - 窗口位置和大小管理软件。 (<a href="https://github.com/fikovnik/ShiftIt" target="_blank" rel="external">https://github.com/fikovnik/ShiftIt</a>)  <strong>[推荐] [必备]</strong> </li>
<li><a href="http://manytricks.com/moom/" target="_blank" rel="external">Moom</a> - 多任务多窗口的软件。</li>
<li><a href="https://github.com/jigish/slate" target="_blank" rel="external">Slate</a> - 窗口管理器，可用JavaScript写配置。(<a href="https://github.com/jigish/slate" target="_blank" rel="external">https://github.com/jigish/slate</a>)     </li>
<li><a href="http://ianyh.com/amethyst/" target="_blank" rel="external">Amethyst</a> - 窗口管理器（自动保持窗口大小的窗口）。(<a href="https://github.com/ianyh/Amethyst" target="_blank" rel="external">https://github.com/ianyh/Amethyst</a>)     </li>
<li><a href="https://www.spectacleapp.com" target="_blank" rel="external">Spectacle</a> - 简单的移动和调整大小的窗口，和可定制的键盘快捷键。 (<a href="https://github.com/eczarny/spectacle" target="_blank" rel="external">https://github.com/eczarny/spectacle</a>) </li>
<li>密码管理</li>
<li><a href="https://www.remembear.com/" target="_blank" rel="external">RememBear</a> - 治愈系密码管理工具。     </li>
<li><a href="https://1password.com/" target="_blank" rel="external">1password</a> - 跨平台帐号密码管理软件。 <strong>[推荐] [必备]</strong></li>
<li><a href="https://www.lastpass.com/" target="_blank" rel="external">LastPass</a> - 密码管理器和安全的数字笔记。</li>
<li><a href="https://www.keepassx.org" target="_blank" rel="external">KeePassX</a> - 一个免费的，开源的，体积小的密码管理器。(<a href="https://github.com/keepassx/keepassx" target="_blank" rel="external">https://github.com/keepassx/keepassx</a>)    </li>
<li><a href="http://mstarke.github.io/MacPass/" target="_blank" rel="external">MacPass</a> - 密码管理器。(<a href="https://github.com/mstarke/MacPass" target="_blank" rel="external">https://github.com/mstarke/MacPass</a>)     </li>
<li><a href="https://keeweb.info/" target="_blank" rel="external">Keeweb</a> - 与KeePass兼容的免费跨平台密码管理器。 (<a href="https://github.com/keeweb/keeweb" target="_blank" rel="external">https://github.com/keeweb/keeweb</a>) </li>
<li><a href="https://github.com/sindresorhus/quick-look-plugins" target="_blank" rel="external">Quicklook-Plugins</a> - Finder快速预览文件插件。</li>
<li><a href="https://fman.io" target="_blank" rel="external">fman</a> - 先进的双窗口文件管理器, 拥有很多特性。</li>
<li><a href="http://binarynights.com/forklift/" target="_blank" rel="external">ForkLift</a> - 先进的双窗口文件管理器和文件传输客户端。</li>
<li><a href="http://www.cocoatech.com/pathfinder/" target="_blank" rel="external">Path Finder</a> - 强大的Finder替代者，拥有很多特性。</li>
<li><a href="http://totalfinder.binaryage.com/" target="_blank" rel="external">TotalFinder</a> - 强大的Finder替代者，界面风格像Chrome。</li>
<li><a href="https://www.trankynam.com/xtrafinder/" target="_blank" rel="external">XtraFinder</a> - 给Finder添加有用的新特性。    </li>
<li><a href="https://www.noodlesoft.com" target="_blank" rel="external">Hazel</a> - 设计精美的自动文件管理软件。</li>
<li><p><a href="https://github.com/vanshg/MacAssistant/releases" target="_blank" rel="external">MacAssistant</a> - Google 助手 (<a href="https://github.com/vanshg/MacAssistant" target="_blank" rel="external">https://github.com/vanshg/MacAssistant</a>) </p>
<h2 id="远程协助"><a href="#远程协助" class="headerlink" title="远程协助"></a>远程协助</h2></li>
<li><p><a href="https://www.teamviewer.com" target="_blank" rel="external">TeamViewer</a> - 远程协助及在线协作和会议功能的软件，商业软件个人使用免费。<strong>[推荐] [必备]</strong> </p>
</li>
<li><a href="https://www.realvnc.com" target="_blank" rel="external">RealVNC</a> 是一款免费的远程控制跨多平台的程序。 </li>
<li><a href="https://anydesk.com" target="_blank" rel="external">AnyDesk</a> 是一款远程控制跨多平台的程序。</li>
</ul>
<h2 id="QuickLook插件"><a href="#QuickLook插件" class="headerlink" title="QuickLook插件"></a>QuickLook插件</h2><p>*使用 <a href="https://github.com/phinze/homebrew-cask" target="_blank" rel="external">Homebrew Cask</a> 将通过命令安装即为简单。</p>
<ul>
<li><a href="https://github.com/whomwah/qlstephen" target="_blank" rel="external">QuicklookStephen</a> - 可以让您查看没有文件扩展名的纯文本文件，如README、INSTALL、Capfile、CHANGELOG…<code>brew cask install qlstephen</code></li>
<li><a href="https://github.com/anthonygelibert/QLColorCode" target="_blank" rel="external">QLColorCode</a> - 在预览源代码文件，高亮代码。<code>brew cask install qlcolorcode</code></li>
<li><a href="https://github.com/toland/qlmarkdown" target="_blank" rel="external">QLMarkdown</a> - Markdown文件转换成静态页面预览。<code>brew cask install qlmarkdown</code></li>
<li><a href="http://www.sagtau.com/quicklookjson.html" target="_blank" rel="external">QuickLookJSON</a> - 格式化预览JSON文件。<code>brew cask install quicklook-json</code></li>
<li><a href="https://github.com/atnan/QLPrettyPatch" target="_blank" rel="external">QLPrettyPatch</a> - 预览<code>.patch</code>文件。<code>brew cask install qlprettypatch</code></li>
<li><a href="https://github.com/p2/quicklook-csv" target="_blank" rel="external">QuickLookCSV</a> - 预览<code>.CSV</code>文件。<code>brew cask install quicklook-csv</code></li>
<li><a href="http://macitbetter.com/BetterZip-Quick-Look-Generator/" target="_blank" rel="external">BetterZipQL</a> - 预览BetterZip软件的压缩格式文件。<code>brew cask install betterzipql</code></li>
<li><a href="https://github.com/Nyx0uf/qlImageSize" target="_blank" rel="external">qlImageSize</a> - 显示图像大小和分辨率。<code>brew cask install qlimagesize</code></li>
<li><a href="https://github.com/dchest/webp-quicklook" target="_blank" rel="external">WebP</a> - 预览WebP图像。<code>brew cask install webpquicklook</code></li>
<li><a href="http://www.mothersruin.com/software/SuspiciousPackage/" target="_blank" rel="external">Suspicious Package</a> - 预览Apple安装程序包的标准内容。<code>brew cask install suspicious-package</code></li>
<li><a href="https://github.com/rsodre/QuickLookASE" target="_blank" rel="external">QuickLookASE</a> - 预览使用Photoshop，Illustrator，Prisma等生成的Adobe ASE Color色板等。<code>brew cask install quicklookase</code></li>
<li><a href="https://github.com/Marginal/QLVideo" target="_blank" rel="external">QLVideo</a> - 预览大多数类型的视频文件，以及它们的缩略图，封面和元数据。<code>brew cask install qlvideo</code></li>
<li><a href="https://github.com/hezi/QuickLookAPK" target="_blank" rel="external">QuickLookAPK</a> - 预览Android APK文件。<code>brew cask install quicklookapk</code></li>
<li><a href="https://github.com/ealeksandrov/ProvisionQL" target="_blank" rel="external">ProvisionQL</a> - 预览 iOS/macOS 应用和配置信息。<code>brew cask install provisionql</code></li>
<li><a href="https://github.com/pixelrowdies/quicklook-pat" target="_blank" rel="external">quicklook-pat</a> - 预览Adobe Photoshop图案文件。<code>brew cask install quicklook-pat</code></li>
</ul>
<h2 id="第三方应用市场APP"><a href="#第三方应用市场APP" class="headerlink" title="第三方应用市场APP"></a>第三方应用市场APP</h2><p><em><a href="https://github.com/jaywcjlove/awesome-mac/issues/17" target="_blank" rel="external">这里讨论盗版问题或者提供黑名单？</a>，拒绝盗版从我做起，欢迎大家监督。</em></p>
<h3 id="正版"><a href="#正版" class="headerlink" title="正版"></a>正版</h3><p><em>这里只提供正版软件购买下载的应用商店。</em></p>
<ul>
<li><a href="http://hack-store.com/" target="_blank" rel="external">HackStore</a> - 一个类似于cydia的第三方Mac应用市场，平台拒绝盗版。 [推荐] </li>
<li><a href="https://www.macupdate.com/" target="_blank" rel="external">MacUpdate Desktop</a> - 管理/更新/下载App，跟踪优惠信息。</li>
<li><a href="http://caskroom.github.io" target="_blank" rel="external">Homebrew Cask</a> - 基于<a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a>扩展的，通过命令行安装Mac GUI软件的工具。(<a href="https://github.com/caskroom/homebrew-cask" target="_blank" rel="external">https://github.com/caskroom/homebrew-cask</a>)  <em> <a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a> - 体验通过命令行安装Mac软件的工具(大部分是命令行工具)。(<a href="https://github.com/Homebrew/brew/" target="_blank" rel="external">https://github.com/Homebrew/brew/</a>)  </em> <a href="https://www.macports.org/" target="_blank" rel="external">MacPorts</a> - 一个软件包管理系统，可用于简化OS X和Darwin操作系统内软件的安装。 (<a href="https://github.com/macports/" target="_blank" rel="external">https://github.com/macports/</a>)</li>
</ul>
<h3 id="应用商店黑名单"><a href="#应用商店黑名单" class="headerlink" title="应用商店黑名单"></a>应用商店黑名单</h3><p><em>第三方应用市场APP黑名单，存在盗版软件传播和下载，拒绝盗版从我做起，欢迎大家监督它们。</em></p>
<ul>
<li><del><a href="http://mac.guanjia.qq.com/" target="_blank" rel="external">腾讯电脑管家</a></del> - 电脑管家for Mac 带应用市场。</li>
<li><del><a href="http://mac.xunlei.com/app/" target="_blank" rel="external">迅雷Thunder Store</a></del> - 迅雷Thunder for Mac 带应用市场。</li>
<li><del><a href="http://box.macx.cn/" target="_blank" rel="external">Mac软件宝箱</a></del> - Macx推出软件宝箱。</li>
<li><del><a href="http://www.machunter.net/" target="_blank" rel="external">MacHunter</a></del> - Mac应用市场。</li>
</ul>
<h2 id="Mac软件下载网站"><a href="#Mac软件下载网站" class="headerlink" title="Mac软件下载网站"></a>Mac软件下载网站</h2><p><em>这里主要是推荐一些软件下载的网站，还有一些Mac OSX软件分享网站</em></p>
<h3 id="正版-介绍"><a href="#正版-介绍" class="headerlink" title="正版/介绍"></a>正版/介绍</h3><ul>
<li>MacUpdate：<a href="https://www.macupdate.com/" target="_blank" rel="external">https://www.macupdate.com/</a></li>
<li>App Shopper：<a href="http://appshopper.com/" target="_blank" rel="external">http://appshopper.com/</a></li>
<li>类似于iOS上Cydia一样的第三方软件商店：<a href="http://hack-store.com" target="_blank" rel="external">http://hack-store.com</a></li>
<li>少数派：<a href="http://sspai.com/tag/Mac" target="_blank" rel="external">http://sspai.com/tag/Mac</a></li>
<li>Mac玩儿法：<a href="http://www.waerfa.com" target="_blank" rel="external">http://www.waerfa.com</a> [推荐]  </li>
</ul>
<h3 id="盗版软件下载网站黑名单"><a href="#盗版软件下载网站黑名单" class="headerlink" title="盗版软件下载网站黑名单"></a>盗版软件下载网站黑名单</h3><p><em>上面有大量的开源软件或者免费软件，拒绝盗版从我做起，下面被删除的网站提供大量破解软件下载，欢迎大家监督它们。</em></p>
<ul>
<li>玩转苹果：<del><code>http://www.ifunmac.com</code></del></li>
<li>Mac软件下载站：<del><code>http://www.pshezi.com</code></del></li>
<li>MacPeers：<del><code>http://www.macpeers.com</code></del></li>
<li>Mac志：<del><code>http://www.isofts.org</code></del></li>
<li>Mac软件分享：<del><code>http://www.waitsun.com</code></del></li>
<li>AppKed：<del><code>http://www.macbed.com</code></del></li>
<li>苹果软件园：<del><code>http://www.maczapp.com</code></del></li>
<li>Mac精品软件：<del><code>http://xclient.info/</code></del></li>
<li>Macx：<del><code>https://www.macx.cn/</code></del></li>
<li>腾牛网：<del><code>http://www.qqtn.com/mac/r_17_1.html</code></del></li>
<li>未来软件园：<del><code>http://www.orsoon.com/mac/</code></del></li>
</ul>
<p><strong><a href="#目录">⬆ 返回顶部</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Awesome-Mac&quot;&gt;&lt;a href=&quot;#Awesome-Mac&quot; class=&quot;headerlink&quot; title=&quot;Awesome Mac&quot;&gt;&lt;/a&gt;Awesome Mac&lt;/h1&gt;&lt;p&gt;这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开
    
    </summary>
    
    
      <category term="mac" scheme="http://kingle.online/tags/mac/"/>
    
      <category term="软件" scheme="http://kingle.online/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>三栏布局</title>
    <link href="http://kingle.online/2018/01/13/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/"/>
    <id>http://kingle.online/2018/01/13/三栏布局/</id>
    <published>2018-01-13T14:32:15.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h2><p>问题描述：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Layout<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="undefined"></span></div><div class="line">      html *&#123;</div><div class="line">        padding: 0;</div><div class="line">        margin: 0;</div><div class="line">      &#125;</div><div class="line">      .layout article div&#123;</div><div class="line">        min-height: 100px;</div><div class="line">      &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--浮动布局  --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"layout float"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="undefined"></span></div><div class="line">      .layout.float .left&#123;</div><div class="line">        float:left;</div><div class="line">        width:300px;</div><div class="line">        background: red;</div><div class="line">      &#125;</div><div class="line">      .layout.float .center&#123;</div><div class="line">        background: yellow;</div><div class="line">      &#125;</div><div class="line">      .layout.float .right&#123;</div><div class="line">        float:right;</div><div class="line">        width:300px;</div><div class="line">        background: blue;</div><div class="line">      &#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"left-right-center"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>浮动解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">          1.这是三栏布局的浮动解决方案；</div><div class="line">          2.这是三栏布局的浮动解决方案；</div><div class="line">          3.这是三栏布局的浮动解决方案；</div><div class="line">          4.这是三栏布局的浮动解决方案；</div><div class="line">          5.这是三栏布局的浮动解决方案；</div><div class="line">          6.这是三栏布局的浮动解决方案；</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 绝对布局 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"layout absolute"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">        .layout.absolute .left-center-right&gt;div&#123;</div><div class="line">          position: absolute;</div><div class="line">        &#125;</div><div class="line">        .layout.absolute .left&#123;</div><div class="line">          left:0;</div><div class="line">          width: 300px;</div><div class="line">          background: red;</div><div class="line">        &#125;</div><div class="line">        .layout.absolute .center&#123;</div><div class="line">          left: 300px;</div><div class="line">          right: 300px;</div><div class="line">          background: yellow;</div><div class="line">        &#125;</div><div class="line">        .layout.absolute .right&#123;</div><div class="line">          right:0;</div><div class="line">          width: 300px;</div><div class="line">          background: blue;</div><div class="line">        &#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"left-center-right"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>绝对定位解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">          1.这是三栏布局的浮动解决方案；</div><div class="line">          2.这是三栏布局的浮动解决方案；</div><div class="line">          3.这是三栏布局的浮动解决方案；</div><div class="line">          4.这是三栏布局的浮动解决方案；</div><div class="line">          5.这是三栏布局的浮动解决方案；</div><div class="line">          6.这是三栏布局的浮动解决方案；</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- flexbox布局 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"layout flexbox"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">        .layout.flexbox&#123;</div><div class="line">          margin-top: 110px;</div><div class="line">        &#125;</div><div class="line">        .layout.flexbox .left-center-right&#123;</div><div class="line">          display: flex;</div><div class="line">        &#125;</div><div class="line">        .layout.flexbox .left&#123;</div><div class="line">          width: 300px;</div><div class="line">          background: red;</div><div class="line">        &#125;</div><div class="line">        .layout.flexbox .center&#123;</div><div class="line">          flex:1;</div><div class="line">          background: yellow;</div><div class="line">        &#125;</div><div class="line">        .layout.flexbox .right&#123;</div><div class="line">          width: 300px;</div><div class="line">          background: blue;</div><div class="line">        &#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"left-center-right"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>flexbox解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">          1.这是三栏布局的浮动解决方案；</div><div class="line">          2.这是三栏布局的浮动解决方案；</div><div class="line">          3.这是三栏布局的浮动解决方案；</div><div class="line">          4.这是三栏布局的浮动解决方案；</div><div class="line">          5.这是三栏布局的浮动解决方案；</div><div class="line">          6.这是三栏布局的浮动解决方案；</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 表格布局 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"layout table"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">        .layout.table .left-center-right&#123;</div><div class="line">          width:100%;</div><div class="line">          height: 100px;</div><div class="line">          display: table;</div><div class="line">        &#125;</div><div class="line">        .layout.table .left-center-right&gt;div&#123;</div><div class="line">          display: table-cell;</div><div class="line">        &#125;</div><div class="line">        .layout.table .left&#123;</div><div class="line">          width: 300px;</div><div class="line">          background: red;</div><div class="line">        &#125;</div><div class="line">        .layout.table .center&#123;</div><div class="line">          background: yellow;</div><div class="line">        &#125;</div><div class="line">        .layout.table .right&#123;</div><div class="line">          width: 300px;</div><div class="line">          background: blue;</div><div class="line">        &#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"left-center-right"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>表格布局解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">          1.这是三栏布局的浮动解决方案；</div><div class="line">          2.这是三栏布局的浮动解决方案；</div><div class="line">          3.这是三栏布局的浮动解决方案；</div><div class="line">          4.这是三栏布局的浮动解决方案；</div><div class="line">          5.这是三栏布局的浮动解决方案；</div><div class="line">          6.这是三栏布局的浮动解决方案；</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 网格布局 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"layout grid"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">        .layout.grid .left-center-right&#123;</div><div class="line">          width:100%;</div><div class="line">          display: grid;</div><div class="line">          grid-template-rows: 100px;</div><div class="line">          grid-template-columns: 300px auto 300px;</div><div class="line">        &#125;</div><div class="line">        .layout.grid .left-center-right&gt;div&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        .layout.grid .left&#123;</div><div class="line">          width: 300px;</div><div class="line">          background: red;</div><div class="line">        &#125;</div><div class="line">        .layout.grid .center&#123;</div><div class="line">          background: yellow;</div><div class="line">        &#125;</div><div class="line">        .layout.grid .right&#123;</div><div class="line"></div><div class="line">          background: blue;</div><div class="line">        &#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"left-center-right"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网格布局解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">          1.这是三栏布局的浮动解决方案；</div><div class="line">          2.这是三栏布局的浮动解决方案；</div><div class="line">          3.这是三栏布局的浮动解决方案；</div><div class="line">          4.这是三栏布局的浮动解决方案；</div><div class="line">          5.这是三栏布局的浮动解决方案；</div><div class="line">          6.这是三栏布局的浮动解决方案；</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>效果</strong></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/%E5%B8%83%E5%B1%80.png" width="" height="350px" alt="picture is gone"><br></div>



]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;三栏布局&quot;&gt;&lt;a href=&quot;#三栏布局&quot; class=&quot;headerlink&quot; title=&quot;三栏布局&quot;&gt;&lt;/a&gt;三栏布局&lt;/h2&gt;&lt;p&gt;问题描述：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应.&lt;/p&gt;
&lt;figure class=
    
    </summary>
    
    
      <category term="html" scheme="http://kingle.online/tags/html/"/>
    
      <category term="布局" scheme="http://kingle.online/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>百度云倍速播放解决办法</title>
    <link href="http://kingle.online/2018/01/10/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%80%8D%E9%80%9F%E6%92%AD%E6%94%BE%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://kingle.online/2018/01/10/百度云倍速播放解决办法/</id>
    <published>2018-01-10T15:50:28.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>我平时在慕课或者其他视频网站上学习的时候，非常需要将速度加快播放，但是一些在百度云保存的视频用它网络自带的播放器一般都不能倍速播放。于是….</p>
<h2 id="chrome-Firefox插件安装"><a href="#chrome-Firefox插件安装" class="headerlink" title="chrome/Firefox插件安装"></a>chrome/Firefox插件安装</h2><ul>
<li>对于chrome:<br><a href="https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk?utm_source=chrome-ntp-icon" target="_blank" rel="external">video-speed-controller</a></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-ec489df9ce5ec6e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="插件" title="">
                </div>
                <div class="image-caption">插件</div>
            </figure>
<ul>
<li>对于Firefox<br><a href="https://addons.mozilla.org/zh-CN/firefox/addon/videospeed/?src=search" target="_blank" rel="external">video-speed-controller</a></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-37963a51e951b0f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="插件.png" title="">
                </div>
                <div class="image-caption">插件.png</div>
            </figure>
<h2 id="效果以及使用方法"><a href="#效果以及使用方法" class="headerlink" title="效果以及使用方法"></a>效果以及使用方法</h2><p>可以看见安装之后播放视频，在左上角就有一个播放按钮，如下图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-8939046e18cf8223.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="加速按钮" title="">
                </div>
                <div class="image-caption">加速按钮</div>
            </figure><br><code>特别注意</code>：只有在这种页面下才会显示按钮，如下图（请仔细观察）也就是说，比如我给你分享一个慕课的实战课程：<br>链接: <a href="https://pan.baidu.com/s/1thB7rXBD1Poo0Wn8oipEsQ" target="_blank" rel="external">https://pan.baidu.com/s/1thB7rXBD1Poo0Wn8oipEsQ</a> 密码: qfcx<br>点击进去就是下面这个页面，也就能加速播放<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-db51413ca030086c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="能加速播放的页面" title="">
                </div>
                <div class="image-caption">能加速播放的页面</div>
            </figure><br>但是如果在自己的百度云账号下，是不能显示加速按钮的：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-6a2ab49c8adb17b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="无法看见加速按钮" title="">
                </div>
                <div class="image-caption">无法看见加速按钮</div>
            </figure><br>所以我的解决办法，自己申请两个百度云账号，一个用来分享视频，另外一个在点击分享链接的时候就可以加速播放了。<br>如下图就是两个百度云账号：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-e23ae930233cda8c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="账号" title="">
                </div>
                <div class="image-caption">账号</div>
            </figure><br>另外，自己给自己分享也是不能加速播放的，如下图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1435921-d3e790a31727e0bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="无法加速" title="">
                </div>
                <div class="image-caption">无法加速</div>
            </figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我平时在慕课或者其他视频网站上学习的时候，非常需要将速度加快播放，但是一些在百度云保存的视频用它网络自带的播放器一般都不能倍速播放。于是….&lt;/p&gt;
&lt;h2 id=&quot;chrome-Firefox插件安装&quot;&gt;&lt;a href=&quot;#chrome-Firefox插件安装&quot; clas
    
    </summary>
    
    
      <category term="百度云" scheme="http://kingle.online/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Debian8-Server安装LEMP-nginx,MySQL/MariaDB,PHP</title>
    <link href="http://kingle.online/2017/05/29/Debian8-Server%E5%AE%89%E8%A3%85LEMP-nginx-MySQL-MariaDB-PHP%20(kingle%E7%9A%84MacBook%20Pro%20%E7%9A%84%E5%86%B2%E7%AA%81%E5%89%AF%E6%9C%AC%202018-04-09)/"/>
    <id>http://kingle.online/2017/05/29/Debian8-Server安装LEMP-nginx-MySQL-MariaDB-PHP (kingle的MacBook Pro 的冲突副本 2018-04-09)/</id>
    <published>2017-05-28T22:29:29.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自linux大神博客</p>
<p><a href="https://www.linuxdashen.com/debian8-jessie" target="_blank" rel="external">原文链接</a></p>
<blockquote>
<p>LNMP是一组用于搭建网站的开源软件。LNMP代表Linux操作系统、Ngnix HTTP服务器(发音为Engine X)、MySQL/MariaDB数据库和PHP。在这篇教程中，我将介绍如何在Debian 8 服务器上安装LNMP。数据库选择MariaDB, 并安装最新的PHP7. 以下命令在Debian服务器上执行。</p>
</blockquote>
<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>相对于Apache，Nginx是一个轻量级的高性能web服务器并在近年来越来越流行。Nginx也可以同时作为一个反向代理。在Debian8上安装Nginx, 输入下面的命令。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install nginx -y</div></pre></td></tr></table></figure>
<p>安装完成后，Nginx会自动运行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo service nginx status</div><div class="line">[ ok ] nginx is running.</div></pre></td></tr></table></figure></p>
<p>查看Nginx版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ nginx -v</div><div class="line">nginx version: nginx/1.6.2</div></pre></td></tr></table></figure></p>
<p>在浏览器地址栏中输入Debian服务器的IP, 回车。如果你看到下面的文字，说明Nginx正确地安装好了。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_642.png" width="" height="200px" alt="picture is gone"><br></div>

<p>你可以使用下面的命令查看服务器的IP。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://icanhazip.com</div></pre></td></tr></table></figure></p>
<h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><p>MariaDB是MySQL的一个替代品。使用下面的命令安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y mariadb-server mariadb-client</div></pre></td></tr></table></figure></p>
<p>在安装过程中会要求你为MariaDB root用户设置一个密码。输入密码后按回车。记住，MariaDB root用户是数据库的管理员，与Linux的root用户是不同的。</p>
<div style="text-align: center"><br><img src="https://static.jedsk.com/wp-content/uploads/Selection_645.png" width="" height="200px" alt="picture is gone"><br></div>

<p>再次输入密码并回车。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_646.png" width="" height="200px" alt="picture is gone"><br></div>


<p>查看MariaDB版本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mysql --version</div><div class="line">mysql Ver 15.1 Distrib 10.0.22-MariaDB, <span class="keyword">for</span> debian-linux-gnu (x86_64) using readline 5.2</div></pre></td></tr></table></figure>
<p>运行安全脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mysql_secure_installation</div></pre></td></tr></table></figure>
<p>输入MariaDB root用户密码。当它问你是否要更改root密码时，选择n. 然后你可以一路按回车键来回答其他所有的问题。</p>
<p>MariaDB数据库安装完成。</p>
<p><code>或者安装mysql</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server mysql-client</div></pre></td></tr></table></figure></p>
<p>过程中会提示你设置Mysql的密码，就跟平时的密码设置一样，一 次输入，一次确认。密码确认完毕后基本等一会就安装好了。尝试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure></p>
<p>如果登录成功，那Mysql就正确安装了.</p>
<hr>
<h2 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h2><p>在/etc/apt/sources.list文件中添加下面两行文字以安装dotdeb.org软件源。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb http://packages.dotdeb.org jessie all</div><div class="line">deb-src http://packages.dotdeb.org jessie all</div></pre></td></tr></table></figure></p>
<p>下载并安装GnuPG key<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://www.dotdeb.org/dotdeb.gpg</div><div class="line">sudo apt-key add dotdeb.gpg</div></pre></td></tr></table></figure></p>
<p>更新本地软件包索引并安装PHP7<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-gd php7.0-json php7.0-cli php7.0-curl</div></pre></td></tr></table></figure></p>
<hr>
<p>配置PHP7</p>
<p>编辑php.ini文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php/7.0/fpm/php.ini</div></pre></td></tr></table></figure></p>
<p>找到如下一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;cgi.fix_pathinfo=1</div></pre></td></tr></table></figure></p>
<p>去掉前面的分号，并将1改为0</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cgi.fix_pathinfo=0</div></pre></td></tr></table></figure>
<p>保存文件后重启php7.0-fpm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service php7.0-fpm restart</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="配置Nginx-Virtual-Host"><a href="#配置Nginx-Virtual-Host" class="headerlink" title="配置Nginx Virtual Host"></a>配置Nginx Virtual Host</h2><p>在/etc/nginx/sites-available目录下创建一个新的virtual host配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/nginx/sites-available/yourdomain.conf</div></pre></td></tr></table></figure>
<p>将yourdomain替换成你实际的域名。然后在文件中添加下面的配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen 80;</div><div class="line">server_name yourdoman.com www.yourdomain.com;</div><div class="line">root /var/www/html;</div><div class="line">index index.php index.html index.htm index.nginx-debian.html;</div><div class="line"></div><div class="line">location / &#123;</div><div class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</div><div class="line">&#125;</div><div class="line"></div><div class="line">error_page 404 /404.html;</div><div class="line">error_page 500 502 503 504 /50x.html;</div><div class="line"></div><div class="line">location = /50x.html &#123;</div><div class="line">root /var/www/html;</div><div class="line">&#125;</div><div class="line"></div><div class="line">location ~ \.php$ &#123;</div><div class="line">try_files <span class="variable">$uri</span> =404;</div><div class="line">fastcgi_pass unix:/run/php/php7.0-fpm.sock;</div><div class="line">fastcgi_index index.php;</div><div class="line">fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</div><div class="line">include fastcgi_params;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意，上面第4行 root /var/www/html; 中的root是指网站的根目录，而不是指Linux系统的root用户。</p>
<p>保存文件后，创建一个软链接。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln <span class="_">-s</span> /etc/nginx/sites-available/yourdomain.conf /etc/nginx/sites-enabled/yourdomain.conf</div></pre></td></tr></table></figure></p>
<p>测试Nginx配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -t</div></pre></td></tr></table></figure></p>
<p>测试成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</div></pre></td></tr></table></figure></p>
<p>重新加载Nginx配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx reload</div></pre></td></tr></table></figure></p>
<p>将/var/www/html目录的所有者更改为Nginx用户www-data<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chown www-data:www-data /var/www/* -R</div></pre></td></tr></table></figure></p>
<p>测试PHP</p>
<p>在/var/www/html/目录下新建一个文件info.php<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /var/www/html/info.php</div></pre></td></tr></table></figure></p>
<p>将下面的内容粘贴到info.php文件中。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">   phpinfo();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>保存文件。然后在浏览器的地址栏输入下面的地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yourdomain.com/info.php</div></pre></td></tr></table></figure></p>
<p>用你的实际域名替换yourdomain.com. 如果你看见下面的文字，说明PHP运行正常。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/arch_Selection_001.png" width="" height="200px" alt="picture is gone"><br></div>

<p>请确保你已经为你的域名设置好了一个A记录。</p>
<p>info.php文件只是用于测试的。为了安全起见，你可以删除它。好了！现在你应该成功地在Debian 8 Jessie上搭建好了LNMP.</p>
<p><code>502 Bad Gateway</code><br>如果你在测试PHP时网页显示502 Bad Gateway错误。那么很有可能是nginx服务器fastcgi_pass的值与PHP www.conf文件中 listen的值不一致造成的。</p>
<p>打开你的virtual host文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/nginx/sites-available/yourdomain.conf</div></pre></td></tr></table></figure></p>
<p>查看fastcgi_pass的值。</p>
<div style="text-align: center"><br>    <img src="https://www.linuxdashen.com/wp-content/uploads/2016/01/Selection_653.png" width="" height="200px" alt="picture is gone"><br></div>

<p>再打开php的www.conf文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php/7.0/fpm/pool.d/www.conf</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_654.png" width="" height="200px" alt="picture is gone"><br></div>

<p>找到文件中的listen这一行，我们需要让nginx fastcgi_pass的值与php listen的值一致。修改完后重启nginx进程和php-fpm进程，这时502 bad gateway错误应该就解决了，可以正常打开网页了。</p>
<p>另外/run/php/php7.0-dpm.sock文件的所有者要与nginx进程用户www-data一致．<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls /run/php/php7.0-fpm.sock -lh</div><div class="line"></div><div class="line">srw-rw---- 1 www-data www-data 0 Mar 19 03:31 /run/php/php7.0-fpm.sock</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自linux大神博客&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linuxdashen.com/debian8-jessie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LNMP
    
    </summary>
    
    
      <category term="Debian" scheme="http://kingle.online/tags/Debian/"/>
    
      <category term="nginx" scheme="http://kingle.online/tags/nginx/"/>
    
      <category term="mysql" scheme="http://kingle.online/tags/mysql/"/>
    
      <category term="php" scheme="http://kingle.online/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Debian8-Server安装LEMP-nginx,MySQL/MariaDB,PHP</title>
    <link href="http://kingle.online/2017/05/29/Debian8-Server%E5%AE%89%E8%A3%85LEMP-nginx-MySQL-MariaDB-PHP/"/>
    <id>http://kingle.online/2017/05/29/Debian8-Server安装LEMP-nginx-MySQL-MariaDB-PHP/</id>
    <published>2017-05-28T22:29:29.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自linux大神博客</p>
<p><a href="https://www.linuxdashen.com/debian8-jessie" target="_blank" rel="external">原文链接</a></p>
<blockquote>
<p>LNMP是一组用于搭建网站的开源软件。LNMP代表Linux操作系统、Ngnix HTTP服务器(发音为Engine X)、MySQL/MariaDB数据库和PHP。在这篇教程中，我将介绍如何在Debian 8 服务器上安装LNMP。数据库选择MariaDB, 并安装最新的PHP7. 以下命令在Debian服务器上执行。</p>
</blockquote>
<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>相对于Apache，Nginx是一个轻量级的高性能web服务器并在近年来越来越流行。Nginx也可以同时作为一个反向代理。在Debian8上安装Nginx, 输入下面的命令。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install nginx -y</div></pre></td></tr></table></figure>
<p>安装完成后，Nginx会自动运行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo service nginx status</div><div class="line">[ ok ] nginx is running.</div></pre></td></tr></table></figure></p>
<p>查看Nginx版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ nginx -v</div><div class="line">nginx version: nginx/1.6.2</div></pre></td></tr></table></figure></p>
<p>在浏览器地址栏中输入Debian服务器的IP, 回车。如果你看到下面的文字，说明Nginx正确地安装好了。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_642.png" width="" height="200px" alt="picture is gone"><br></div>

<p>你可以使用下面的命令查看服务器的IP。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://icanhazip.com</div></pre></td></tr></table></figure></p>
<h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><p>MariaDB是MySQL的一个替代品。使用下面的命令安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y mariadb-server mariadb-client</div></pre></td></tr></table></figure></p>
<p>在安装过程中会要求你为MariaDB root用户设置一个密码。输入密码后按回车。记住，MariaDB root用户是数据库的管理员，与Linux的root用户是不同的。</p>
<div style="text-align: center"><br><img src="https://static.jedsk.com/wp-content/uploads/Selection_645.png" width="" height="200px" alt="picture is gone"><br></div>

<p>再次输入密码并回车。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_646.png" width="" height="200px" alt="picture is gone"><br></div>


<p>查看MariaDB版本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mysql --version</div><div class="line">mysql Ver 15.1 Distrib 10.0.22-MariaDB, <span class="keyword">for</span> debian-linux-gnu (x86_64) using readline 5.2</div></pre></td></tr></table></figure>
<p>运行安全脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mysql_secure_installation</div></pre></td></tr></table></figure>
<p>输入MariaDB root用户密码。当它问你是否要更改root密码时，选择n. 然后你可以一路按回车键来回答其他所有的问题。</p>
<p>MariaDB数据库安装完成。</p>
<p><code>或者安装mysql</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server mysql-client</div></pre></td></tr></table></figure></p>
<p>过程中会提示你设置Mysql的密码，就跟平时的密码设置一样，一 次输入，一次确认。密码确认完毕后基本等一会就安装好了。尝试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure></p>
<p>如果登录成功，那Mysql就正确安装了.</p>
<hr>
<h2 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h2><p>在/etc/apt/sources.list文件中添加下面两行文字以安装dotdeb.org软件源。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb http://packages.dotdeb.org jessie all</div><div class="line">deb-src http://packages.dotdeb.org jessie all</div></pre></td></tr></table></figure></p>
<p>下载并安装GnuPG key<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://www.dotdeb.org/dotdeb.gpg</div><div class="line">sudo apt-key add dotdeb.gpg</div></pre></td></tr></table></figure></p>
<p>更新本地软件包索引并安装PHP7<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-gd php7.0-json php7.0-cli php7.0-curl</div></pre></td></tr></table></figure></p>
<hr>
<p>配置PHP7</p>
<p>编辑php.ini文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php/7.0/fpm/php.ini</div></pre></td></tr></table></figure></p>
<p>找到如下一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;cgi.fix_pathinfo=1</div></pre></td></tr></table></figure></p>
<p>去掉前面的分号，并将1改为0</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cgi.fix_pathinfo=0</div></pre></td></tr></table></figure>
<p>保存文件后重启php7.0-fpm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service php7.0-fpm restart</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="配置Nginx-Virtual-Host"><a href="#配置Nginx-Virtual-Host" class="headerlink" title="配置Nginx Virtual Host"></a>配置Nginx Virtual Host</h2><p>在/etc/nginx/sites-available目录下创建一个新的virtual host配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/nginx/sites-available/yourdomain.conf</div></pre></td></tr></table></figure>
<p>将yourdomain替换成你实际的域名。然后在文件中添加下面的配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen 80;</div><div class="line">server_name yourdoman.com www.yourdomain.com;</div><div class="line">root /var/www/html;</div><div class="line">index index.php index.html index.htm index.nginx-debian.html;</div><div class="line"></div><div class="line">location / &#123;</div><div class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</div><div class="line">&#125;</div><div class="line"></div><div class="line">error_page 404 /404.html;</div><div class="line">error_page 500 502 503 504 /50x.html;</div><div class="line"></div><div class="line">location = /50x.html &#123;</div><div class="line">root /var/www/html;</div><div class="line">&#125;</div><div class="line"></div><div class="line">location ~ \.php$ &#123;</div><div class="line">try_files <span class="variable">$uri</span> =404;</div><div class="line">fastcgi_pass unix:/run/php/php7.0-fpm.sock;</div><div class="line">fastcgi_index index.php;</div><div class="line">fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</div><div class="line">include fastcgi_params;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意，上面第4行 root /var/www/html; 中的root是指网站的根目录，而不是指Linux系统的root用户。</p>
<p>保存文件后，创建一个软链接。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln <span class="_">-s</span> /etc/nginx/sites-available/yourdomain.conf /etc/nginx/sites-enabled/yourdomain.conf</div></pre></td></tr></table></figure></p>
<p>测试Nginx配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -t</div></pre></td></tr></table></figure></p>
<p>测试成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</div></pre></td></tr></table></figure></p>
<p>重新加载Nginx配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx reload</div></pre></td></tr></table></figure></p>
<p>将/var/www/html目录的所有者更改为Nginx用户www-data<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chown www-data:www-data /var/www/* -R</div></pre></td></tr></table></figure></p>
<p>测试PHP</p>
<p>在/var/www/html/目录下新建一个文件info.php<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /var/www/html/info.php</div></pre></td></tr></table></figure></p>
<p>将下面的内容粘贴到info.php文件中。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">   phpinfo();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>保存文件。然后在浏览器的地址栏输入下面的地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yourdomain.com/info.php</div></pre></td></tr></table></figure></p>
<p>用你的实际域名替换yourdomain.com. 如果你看见下面的文字，说明PHP运行正常。</p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/arch_Selection_001.png" width="" height="200px" alt="picture is gone"><br></div>

<p>请确保你已经为你的域名设置好了一个A记录。</p>
<p>info.php文件只是用于测试的。为了安全起见，你可以删除它。好了！现在你应该成功地在Debian 8 Jessie上搭建好了LNMP.</p>
<p><code>502 Bad Gateway</code><br>如果你在测试PHP时网页显示502 Bad Gateway错误。那么很有可能是nginx服务器fastcgi_pass的值与PHP www.conf文件中 listen的值不一致造成的。</p>
<p>打开你的virtual host文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/nginx/sites-available/yourdomain.conf</div></pre></td></tr></table></figure></p>
<p>查看fastcgi_pass的值。</p>
<div style="text-align: center"><br>    <img src="https://www.linuxdashen.com/wp-content/uploads/2016/01/Selection_653.png" width="" height="200px" alt="picture is gone"><br></div>

<p>再打开php的www.conf文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php/7.0/fpm/pool.d/www.conf</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="https://static.jedsk.com/wp-content/uploads/Selection_654.png" width="" height="200px" alt="picture is gone"><br></div>

<p>找到文件中的listen这一行，我们需要让nginx fastcgi_pass的值与php listen的值一致。修改完后重启nginx进程和php-fpm进程，这时502 bad gateway错误应该就解决了，可以正常打开网页了。</p>
<p>另外/run/php/php7.0-dpm.sock文件的所有者要与nginx进程用户www-data一致．<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls /run/php/php7.0-fpm.sock -lh</div><div class="line"></div><div class="line">srw-rw---- 1 www-data www-data 0 Mar 19 03:31 /run/php/php7.0-fpm.sock</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自linux大神博客&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linuxdashen.com/debian8-jessie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LNMP
    
    </summary>
    
    
      <category term="Debian" scheme="http://kingle.online/tags/Debian/"/>
    
      <category term="nginx" scheme="http://kingle.online/tags/nginx/"/>
    
      <category term="mysql" scheme="http://kingle.online/tags/mysql/"/>
    
      <category term="php" scheme="http://kingle.online/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>python-Matplotlib基础绘图函数</title>
    <link href="http://kingle.online/2017/05/14/python-Matplotlib%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E5%87%BD%E6%95%B0/"/>
    <id>http://kingle.online/2017/05/14/python-Matplotlib基础绘图函数/</id>
    <published>2017-05-13T16:48:37.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pyplot的基础图标函数列表"><a href="#pyplot的基础图标函数列表" class="headerlink" title="pyplot的基础图标函数列表"></a>pyplot的基础图标函数列表</h2><p>一共有16种</p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.1.png" width="" height="" alt="picture is gone"><br></div><br><div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.2.png" width="" height="" alt="picture is gone"><br></div><br><div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.3.png" width="" height="" alt="picture is gone"><br></div>

<hr>
<h2 id="pyplot饼图的绘制"><a href="#pyplot饼图的绘制" class="headerlink" title="pyplot饼图的绘制"></a>pyplot饼图的绘制</h2><p><code>plt.pie()</code><br>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">labels = <span class="string">'Frogs'</span>, <span class="string">'Hogs'</span>, <span class="string">'Dogs'</span>, <span class="string">'Logs'</span></div><div class="line">sizes = [<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>, <span class="number">10</span>]</div><div class="line">explode = (<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line"></div><div class="line">plt.pie(sizes, explode=explode, labels=labels, autopct=<span class="string">'%1.1f%%'</span>, shadow=<span class="keyword">False</span>, startangle=<span class="number">90</span>)</div><div class="line"></div><div class="line">plt.axis(<span class="string">'equal'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.4.png" width="500px" height="400px" alt="picture is gone"><br></div>

<h2 id="pyplot直方图的绘制"><a href="#pyplot直方图的绘制" class="headerlink" title="pyplot直方图的绘制"></a>pyplot直方图的绘制</h2><p><code>plt.hist()</code><br>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">np.random.seed(<span class="number">0</span>)</div><div class="line">mu, sigma = <span class="number">100</span>, <span class="number">20</span> <span class="comment">#均值和标准差</span></div><div class="line">a = np.random.normal(mu, sigma, size = <span class="number">100</span>)</div><div class="line"></div><div class="line"><span class="comment"># 20可以控制区间分级的数量,即直方图的个数</span></div><div class="line">plt.hist(a, <span class="number">20</span>, normed = <span class="number">1</span>, histtype = <span class="string">'stepfilled'</span>, facecolor=<span class="string">'b'</span>, alpha=<span class="number">0.75</span>)</div><div class="line">plt.title(<span class="string">'Histogram'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.5.png" width="500px" height="400px" alt="picture is gone"><br></div>

<h2 id="pyplot极坐标图的绘制"><a href="#pyplot极坐标图的绘制" class="headerlink" title="pyplot极坐标图的绘制"></a>pyplot极坐标图的绘制</h2><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">N = <span class="number">20</span></div><div class="line">theta = np.linspace(<span class="number">0.0</span>, <span class="number">2</span> * np.pi, N, endpoint = <span class="keyword">False</span>)</div><div class="line">radii = <span class="number">10</span> * np.random.rand(N)</div><div class="line">width = np.pi / <span class="number">4</span> * np.random.rand(N)</div><div class="line"></div><div class="line">ax = plt.subplot(<span class="number">111</span>, projection=<span class="string">'polar'</span>)</div><div class="line">bars = ax.bar(theta, radii, width=width, bottom=<span class="number">0.0</span>) <span class="comment">#分别对应left, height, width</span></div><div class="line"><span class="keyword">for</span> r, bar <span class="keyword">in</span> zip(radii, bars):</div><div class="line">    bar.set_facecolor(plt.cm.viridis(r / <span class="number">10.</span>))</div><div class="line">    bar.set_alpha(<span class="number">0.5</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<p>效果:</p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.6.png" width="500px" height="400px" alt="picture is gone"><br></div>

<h2 id="pyplot散点图的绘制"><a href="#pyplot散点图的绘制" class="headerlink" title="pyplot散点图的绘制"></a>pyplot散点图的绘制</h2><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">fig, ax = plt.subplots()</div><div class="line">ax.plot(<span class="number">10</span> * np.random.randn(<span class="number">100</span>), <span class="number">10</span> * np.random.randn(<span class="number">100</span>), <span class="string">'o'</span>)</div><div class="line">ax.set_title(<span class="string">'Simple Scatter'</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.7.png" width="500px" height="400px" alt="picture is gone"><br></div>


]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pyplot的基础图标函数列表&quot;&gt;&lt;a href=&quot;#pyplot的基础图标函数列表&quot; class=&quot;headerlink&quot; title=&quot;pyplot的基础图标函数列表&quot;&gt;&lt;/a&gt;pyplot的基础图标函数列表&lt;/h2&gt;&lt;p&gt;一共有16种&lt;/p&gt;
&lt;div st
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="Matplotlib" scheme="http://kingle.online/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>python-Matplotlib库入门笔记</title>
    <link href="http://kingle.online/2017/05/13/python-Matplotlib%E5%BA%93%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://kingle.online/2017/05/13/python-Matplotlib库入门笔记/</id>
    <published>2017-05-12T21:33:28.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://matplotlib.org/" target="_blank" rel="external">http://matplotlib.org/</a></p>
<p>Matplotlib库由各种可视化类构成，内部结构复杂，受Matlab启发 matplotlib.pyplot是绘制各类可视化图形的命令子库，相当于快捷方式</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#引入模块的别名</span></div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div></pre></td></tr></table></figure>
<h2 id="Matplotlib库小测"><a href="#Matplotlib库小测" class="headerlink" title="Matplotlib库小测"></a>Matplotlib库小测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.plot([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>])</div><div class="line">plt.ylabel(<span class="string">"Grade"</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<div style="text-align: center;"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot1.png" width="500px" height="400px" alt="picture is gone"><br></div>

<hr>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.plot([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>])</div><div class="line">plt.ylabel(<span class="string">"Grade"</span>)</div><div class="line">plt.savefig(<span class="string">'test'</span>, dpi=<span class="number">600</span>) <span class="comment">#PNG文件</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<blockquote>
<p>plt.savefig()将输出图形存储为文件，默认PNG格式，可以通过dpi修改输出质量</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line">plt.plot([<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>], [<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>])</div><div class="line">plt.ylabel(<span class="string">"Grade"</span>)</div><div class="line">plt.axis([<span class="number">-1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">6</span>]) <span class="comment">#x, y的取值范围</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot2.png" width="500px" height="400px" alt="picture is gone"><br></div>

<blockquote>
<p>plt.plot(x,y)当有两个以上参数时，按照X轴和Y轴顺序绘制数据点</p>
</blockquote>
<hr>
<h2 id="pyplot的绘图区域"><a href="#pyplot的绘图区域" class="headerlink" title="pyplot的绘图区域"></a>pyplot的绘图区域</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.subplot(nrows, ncols, plot_number)</div></pre></td></tr></table></figure>
<p>在全局绘图区域中创建一个 分区体系，并定位到一个子 绘图区域<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plt.subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>)</div><div class="line"><span class="comment">#plt.subplot(324)</span></div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot3.png" width="500px" height="400px" alt="picture is gone"><br></div>

<hr>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(t)</span>:</span></div><div class="line">    <span class="keyword">return</span> np.exp(-t) * np.cos(<span class="number">2</span> * np.pi * t)</div><div class="line">a = np.arange(<span class="number">0.0</span>, <span class="number">5.0</span>, <span class="number">0.02</span>)</div><div class="line">plt.subplot(<span class="number">211</span>)</div><div class="line">plt.plot(a, f(a))</div><div class="line"></div><div class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</div><div class="line">plt.plot(a, np.cos(<span class="number">2</span> * np.pi * a), <span class="string">'g--'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot4.png" width="500px" height="400px" alt="picture is gone"><br></div>

<hr>
<h2 id="pyplot的plot-函数"><a href="#pyplot的plot-函数" class="headerlink" title="pyplot的plot()函数"></a>pyplot的plot()函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.plot(x, y, format_string, **kwargs)</div></pre></td></tr></table></figure>
<ul>
<li><code>x</code>: X轴数据，列表或数组，可选</li>
<li><code>y</code>: Y轴数据，列表或数组</li>
<li><code>format_string</code>: 控制曲线的格式字符串，可选</li>
<li><code>**kwargs</code>: 第二组或更多(x,y,format_string)</li>
</ul>
<blockquote>
<p>当绘制多条曲线时，各条曲线的x不能省略</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">a = np.arange(<span class="number">10</span>)</div><div class="line">plt.plot(a, a*<span class="number">1.5</span>, a, a*<span class="number">2</span>,<span class="number">5</span>, a, a*<span class="number">3.5</span>, a, a*<span class="number">4.5</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot5.png" width="500px" height="" alt="picture is gone"><br></div>

<hr>
<p>format_string: 控制曲线的格式字符串，可选 由颜色字符、风格字符和标记字符组成</p>
<table>
<thead>
<tr>
<th style="text-align:center">颜色字符</th>
<th style="text-align:center">说明</th>
<th style="text-align:center">颜色字符</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">‘b’</td>
<td style="text-align:center">蓝色</td>
<td style="text-align:center">‘m’</td>
<td style="text-align:center">洋红色 magenta</td>
</tr>
<tr>
<td style="text-align:center">‘g’</td>
<td style="text-align:center">绿色</td>
<td style="text-align:center">‘y’</td>
<td style="text-align:center">黄色</td>
</tr>
<tr>
<td style="text-align:center">‘r’</td>
<td style="text-align:center">红色</td>
<td style="text-align:center">‘k’</td>
<td style="text-align:center">黑色</td>
</tr>
<tr>
<td style="text-align:center">‘c’</td>
<td style="text-align:center">青绿色cyan</td>
<td style="text-align:center">‘w’</td>
<td style="text-align:center">白色</td>
</tr>
<tr>
<td style="text-align:center">‘#008000’</td>
<td style="text-align:center">RGB某颜色</td>
<td style="text-align:center">‘0.8’</td>
<td style="text-align:center">灰度字符串</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">风格字符</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">‘-‘</td>
<td style="text-align:center">实现</td>
</tr>
<tr>
<td style="text-align:center">‘–’</td>
<td style="text-align:center">破折线</td>
</tr>
<tr>
<td style="text-align:center">‘-.’</td>
<td style="text-align:center">点画线</td>
</tr>
<tr>
<td style="text-align:center">‘:’</td>
<td style="text-align:center">虚线</td>
</tr>
<tr>
<td style="text-align:center">‘’ ‘’</td>
<td style="text-align:center">无线条</td>
</tr>
</tbody>
</table>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot6.png" width="100%" height="" alt="picture is gone"><br></div>

<hr>
<h2 id="pyplot的中文显示"><a href="#pyplot的中文显示" class="headerlink" title="pyplot的中文显示"></a>pyplot的中文显示</h2><blockquote>
<p>pyplot并不默认支持中文显示，需要rcParams修改字体实现</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib</div><div class="line"></div><div class="line">matplotlib.rcParams[<span class="string">'font.family'</span>] = <span class="string">'SimHei'</span></div><div class="line">plt.plot([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>])</div><div class="line">plt.ylabel(<span class="string">"纵轴值"</span>)</div><div class="line">plt.savefig(<span class="string">'test'</span>, dpi=<span class="number">600</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<p>但是在Mac上依旧有些中文字体不支持，所以可以通过<code>字体册</code>软件，找到对应的字体，然后添加进来，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib</div><div class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</div><div class="line">fonts = FontProperties(fname = <span class="string">"/System/Library/Fonts/STHeiti Light.ttc"</span>, size = <span class="number">14</span>)</div><div class="line">plt.plot([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>])</div><div class="line">plt.ylabel(<span class="string">"纵轴值"</span>, FontProperties = fonts)</div><div class="line">plt.savefig(<span class="string">'test'</span>, dpi = <span class="number">600</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot7.png" width="500px" height="400px" alt="picture is gone"><br></div>

<hr>
<h2 id="pyplot的文本显示函数"><a href="#pyplot的文本显示函数" class="headerlink" title="pyplot的文本显示函数"></a>pyplot的文本显示函数</h2><div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot8.png" width="600px" height="" alt="picture is gone"><br></div>

<p><code>实例</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span>  matplotlib.font_manager <span class="keyword">import</span> FontProperties</div><div class="line">fonts = FontProperties(fname = <span class="string">"/System/Library/Fonts/STHeiti Light.ttc"</span>, size = <span class="number">14</span>)</div><div class="line"></div><div class="line">a = np.arange(<span class="number">0.0</span>, <span class="number">5.0</span>, <span class="number">0.02</span>)</div><div class="line">plt.plot(a, np.cos(<span class="number">2</span> * np.pi * a), <span class="string">'r--'</span>)</div><div class="line"></div><div class="line">plt.xlabel(<span class="string">'横轴：时间'</span>, fontproperties = fonts, color = <span class="string">'green'</span>)</div><div class="line">plt.ylabel(<span class="string">'纵轴：振幅'</span>, fontproperties = fonts)</div><div class="line">plt.title(<span class="string">r'正玄波实例$y = cos(2\pi x)$'</span>, FontProperties =fonts, fontsize = <span class="number">25</span>)</div><div class="line">plt.text(<span class="number">2</span>, <span class="number">1</span>, <span class="string">r'$\mu = 100$'</span>) <span class="comment">#Latex，2，1表示位置</span></div><div class="line"></div><div class="line">plt.axis([<span class="number">-1</span>, <span class="number">6</span>, <span class="number">-2</span>, <span class="number">2</span>])</div><div class="line">plt.grid(<span class="keyword">True</span>) <span class="comment">#显示网格</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot9.png" width="500px" height="400px" alt="picture is gone"><br></div>

<hr>
<h2 id="pyplot的子绘图区域"><a href="#pyplot的子绘图区域" class="headerlink" title="pyplot的子绘图区域"></a>pyplot的子绘图区域</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.subplot2grid(GridSpec, CurSpec, colspan=<span class="number">1</span>, rowspan=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>理念:设定网格，选中网格，确定选中行列区域数量，编号从0开始</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.subplot2grid((<span class="number">3</span>,<span class="number">3</span>), (<span class="number">1</span>,<span class="number">0</span>), colspan=<span class="number">2</span>) <span class="comment"># rowspan</span></div></pre></td></tr></table></figure>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot10.png" width="300px" height="" alt="picture is gone"><br></div>

<p><code>GridSpec类</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec</div><div class="line"></div><div class="line">gs = gridspec.GridSpec(<span class="number">3</span>, <span class="number">3</span>)</div><div class="line"></div><div class="line">ax1 = plt.subplot(gs[<span class="number">0</span>, :])</div><div class="line">ax1 = plt.subplot(gs[<span class="number">1</span>, :<span class="number">-1</span>])</div><div class="line">ax1 = plt.subplot(gs[<span class="number">1</span>:, <span class="number">-1</span>])</div><div class="line">ax1 = plt.subplot(gs[<span class="number">2</span>, <span class="number">0</span>])</div><div class="line">ax1 = plt.subplot(gs[<span class="number">2</span>, <span class="number">1</span>])</div></pre></td></tr></table></figure></p>
<div style="text-align: center"><br>    <img src="http://ojlmcfp94.bkt.clouddn.com/image/pyplot11.png" width="300px" height="" alt="picture is gone"><br></div>






]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://matplotlib.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://matplotlib.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Matplotlib库由各种可视化类构成，内部结构复杂，受Matlab启发 m
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="Matplotlib" scheme="http://kingle.online/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>atom/sublimeText/vscode插件</title>
    <link href="http://kingle.online/2017/05/07/atom-sublimeText-vscode/"/>
    <id>http://kingle.online/2017/05/07/atom-sublimeText-vscode/</id>
    <published>2017-05-06T21:57:39.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="atom"><a href="#atom" class="headerlink" title="atom"></a>atom</h2><ul>
<li>atom-beautify</li>
<li>autocomplete-paths</li>
<li>busy-signal</li>
<li>color-picker</li>
<li>csscomb</li>
<li>docblockr</li>
<li>emmet</li>
<li>file-icons</li>
<li>git-plus</li>
<li>intentions</li>
<li>javascript-snippets</li>
<li>linter</li>
<li>linter-eslint</li>
<li>linter-ui-default</li>
<li>livestyle-atom</li>
<li>minimap</li>
<li>pigments</li>
<li>platformio-ide-terminal</li>
</ul>
<hr>
<h2 id="sublime-text"><a href="#sublime-text" class="headerlink" title="sublime-text"></a>sublime-text</h2><ul>
<li>A File Icon</li>
<li>Alignment</li>
<li>All Autocomplete</li>
<li>AutoFileName</li>
<li>Autoprefixer</li>
<li>Bootstrap 3 Snippets</li>
<li>BracketHighlighter</li>
<li>Color Highlighter</li>
<li>Emmet</li>
<li>Git</li>
<li>HTML-CSS-JS Prettify</li>
<li>HTML5</li>
<li>Jquery</li>
<li>Markdown Preview</li>
<li>One Dark Material - Theme</li>
<li>Package Control</li>
<li>Sass</li>
<li>SideBarEnhancements</li>
<li>SublimeLinter</li>
<li>SublimeLinter-contrib-eslint</li>
<li>Terminal</li>
<li>Theme -Soda</li>
</ul>
<hr>
<h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><ul>
<li>Auto Rename Tag</li>
<li>AutoFileName</li>
<li>Beautify</li>
<li>c/c++</li>
<li>Color Picker</li>
<li>ESLint</li>
<li>Git History</li>
<li>HTML CSS Support</li>
<li>jQuery Code Snippets</li>
<li>motss HTML snippets</li>
<li>vscode-icons</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;atom&quot;&gt;&lt;a href=&quot;#atom&quot; class=&quot;headerlink&quot; title=&quot;atom&quot;&gt;&lt;/a&gt;atom&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;atom-beautify&lt;/li&gt;
&lt;li&gt;autocomplete-paths&lt;/li&gt;
&lt;li&gt;busy-
    
    </summary>
    
    
      <category term="atom" scheme="http://kingle.online/tags/atom/"/>
    
      <category term="sublimeText" scheme="http://kingle.online/tags/sublimeText/"/>
    
      <category term="vscode" scheme="http://kingle.online/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>iTerm2快捷键</title>
    <link href="http://kingle.online/2017/05/01/iTerm2%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://kingle.online/2017/05/01/iTerm2快捷键/</id>
    <published>2017-05-01T14:12:17.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a><a href="#标签" title="标签"></a>标签</h2><p>新建标签：<strong>command + t</strong></p>
<p>关闭标签：<strong>command + w</strong></p>
<p>切换标签：<br><strong>command + 数字</strong> <strong>command + 左右方向键</strong></p>
<p>切换全屏：<strong>command + enter</strong></p>
<p>查找：<strong>command + f</strong><br><a id="more"></a></p>
<h2 id="分屏"><a href="#分屏" class="headerlink" title="分屏"></a><a href="#分屏" title="分屏"></a>分屏</h2><p>垂直分屏：<strong>command + d</strong></p>
<p>水平分屏：<strong>command + shift + d</strong></p>
<p>切换屏幕：<br><strong>command + option + 方向键</strong><br><strong>command + [</strong>  或 <strong>command + ]</strong></p>
<p>查看历史命令：<strong>command + ;</strong></p>
<p>查看剪贴板历史：<strong>command + shift + h</strong></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><a href="#其他" title="其他"></a>其他</h2><p>清除当前行：<strong>ctrl + u</strong></p>
<p>到行首：<strong>ctrl + a</strong></p>
<p>到行尾：<strong>ctrl + e</strong></p>
<p>前进后退：<strong>ctrl + f/b</strong> (相当于左右方向键)</p>
<p>上一条命令：<strong>ctrl + p</strong></p>
<p>搜索命令历史：<strong>ctrl + r</strong></p>
<p>删除当前光标的字符：<strong>ctrl + d</strong></p>
<p>删除光标之前的字符：<strong>ctrl + h</strong></p>
<p>删除光标之前的单词：<strong>ctrl + w</strong></p>
<p>删除到文本末尾：<strong>ctrl + k</strong></p>
<p>交换光标处文本：<strong>ctrl + t</strong></p>
<p>清屏1：<strong>command + r</strong></p>
<p>清屏2：<strong>ctrl + l</strong></p>
<h2 id="自带有哪些很实用的功能-快捷键"><a href="#自带有哪些很实用的功能-快捷键" class="headerlink" title="自带有哪些很实用的功能/快捷键"></a><a href="#自带有哪些很实用的功能-快捷键" title="自带有哪些很实用的功能/快捷键"></a>自带有哪些很实用的功能/快捷键</h2><p><strong>⌘ + 数字</strong> 在各 tab 标签直接来回切换</p>
<p>选择即复制 + 鼠标中键粘贴，这个很实用</p>
<p><strong>⌘ + f</strong> 所查找的内容会被自动复制</p>
<p><strong>⌘ + d</strong> 横着分屏 /<br><strong>⌘ + shift + d</strong> 竖着分屏</p>
<p><strong>⌘ + r = clear</strong>，而且只是换到新一屏，不会想 clear 一样创建一个空屏</p>
<p><strong>ctrl + u</strong> 清空当前行，无论光标在什么位置</p>
<p>输入开头命令后 按 <strong>⌘ + ;</strong> 会自动列出输入过的命令</p>
<p><strong>⌘ + shift + h</strong> 会列出剪切板历史</p>
<p>可以在 Preferences &gt; keys 设置全局快捷键调出 iterm，这个也可以用过 Alfred 实现</p>
<h2 id="常用的一些快捷键"><a href="#常用的一些快捷键" class="headerlink" title="常用的一些快捷键"></a><a href="#常用的一些快捷键" title="常用的一些快捷键"></a>常用的一些快捷键</h2><p><strong>⌘ + 1 / 2</strong> 左右 tab 之间来回切换，这个在 前面 已经介绍过了</p>
<p><strong>⌘←</strong> / <strong>⌘→</strong> 到一行命令最左边/最右边 ，这个功能同 <strong>C+a</strong> / <strong>C+e</strong></p>
<p><strong>⌥←</strong> / <strong>⌥→</strong>按单词前移/后移，相当与 <strong>C+f</strong> / <strong>C+b</strong>，其实这个功能在Iterm中已经预定义好了，<strong>⌥f</strong> / <strong>⌥b</strong>，看个人习惯了</p>
<p>好像就这几个</p>
<p>设置方法如下</p>
<p>当然除了这些可以自定义的也不能忘了 linux 下那些好用的组合</p>
<p><strong>C+a</strong> / <strong>C+e</strong> 这个几乎在哪都可以使用</p>
<p><strong>C+p</strong> / <strong>!!</strong> 上一条命令</p>
<p><strong>C+k</strong> 从光标处删至命令行尾 (本来 C+u 是删至命令行首，但iterm中是删掉整行)</p>
<p><strong>C+w</strong> <strong>A+d</strong> 从光标处删至字首/尾</p>
<p><strong>C+h</strong> <strong>C+d</strong> 删掉光标前后的字符</p>
<p><strong>C+y</strong> 粘贴至光标后</p>
<p><strong>C+r</strong> 搜索命令历史，这个较常用</p>
<h2 id="选中即复制"><a href="#选中即复制" class="headerlink" title="选中即复制"></a><a href="#选中即复制" title="选中即复制"></a>选中即复制</h2><p>iterm2 有 2 种好用的选中即复制模式。</p>
<p>一种是用鼠标，在 iterm2 中，选中某个路径或者某个词汇，那么，iterm2 就自 动复制了。  </p>
<p>另一种是无鼠标模式，command+f,弹出 iterm2 的查找模式，输入要查找并复制的内容的前几个字母，确认找到的是自己的内容之后，输入 tab，查找窗口将自动变化内容，并将其复制。如果输入的是 shift+tab，则自动将查找内容的左边选中并复制。</p>
<p>自动完成<br>输入打头几个字母，然后输入 <strong>command+;</strong> iterm2 将自动列出之前输入过的类似命令。 　　</p>
<h2 id="剪切历史"><a href="#剪切历史" class="headerlink" title="剪切历史"></a><a href="#剪切历史" title="剪切历史"></a>剪切历史</h2><p>输入 command+shift+h，iterm2 将自动列出剪切板的历史记录。如果需要将剪切板的历史记录保存到磁盘，在 Preferences &gt; General &gt; Save copy/paste history to disk 中设置。</p>
<blockquote>
<p>转载自<a href="https://microzz.com/2017/04/22/iterm2/" target="_blank" rel="external">https://microzz.com/2017/04/22/iterm2/</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标签&quot;&gt;&lt;a href=&quot;#标签&quot; class=&quot;headerlink&quot; title=&quot;标签&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#标签&quot; title=&quot;标签&quot;&gt;&lt;/a&gt;标签&lt;/h2&gt;&lt;p&gt;新建标签：&lt;strong&gt;command + t&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
    
      <category term="iTerm2" scheme="http://kingle.online/tags/iTerm2/"/>
    
      <category term="快捷键" scheme="http://kingle.online/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Numpy数据存取与函数</title>
    <link href="http://kingle.online/2017/04/29/Numpy%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96%E4%B8%8E%E5%87%BD%E6%95%B0/"/>
    <id>http://kingle.online/2017/04/29/Numpy数据存取与函数/</id>
    <published>2017-04-29T14:07:43.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据的CSV文件存取"><a href="#数据的CSV文件存取" class="headerlink" title="数据的CSV文件存取"></a><a href="#数据的CSV文件存取" title="数据的CSV文件存取"></a>数据的CSV文件存取</h2><p>CSV (Comma‐Separated Value, 逗号分隔值) CSV是一种常见的文件格式，用来存储批量数据</p>
<ul>
<li>frame : 文件、字符串或产生器，可以是.gz或.bz2的压缩文件</li>
<li>array : 存入文件的数组</li>
<li>array : 存入文件的数组</li>
<li><p>array : 存入文件的数组</p>
</li>
<li><p>frame : 文件、字符串或产生器，可以是.gz或.bz2的压缩文件</p>
</li>
<li>dtype : 数据类型，可选</li>
<li>delimiter : 分割字符串，默认是任何空格</li>
<li>unpack : 如果True，读入属性将分别写入不同变量</li>
</ul>
<blockquote>
<p>CSV只能有效存储一维和二维数组 np.savetxt() np.loadtxt()只能有效存取一维和二维数组</p>
</blockquote>
<hr>
<h2 id="任意维度如何存取呢？"><a href="#任意维度如何存取呢？" class="headerlink" title="任意维度如何存取呢？"></a><a href="#任意维度如何存取呢？" title="任意维度如何存取呢？"></a>任意维度如何存取呢？</h2><ul>
<li>frame : 文件、字符串</li>
<li>dtype : 读取的数据类型</li>
<li>count : 读入元素个数，‐1表示读入整个文件</li>
<li>sep : 数据分割字符串，如果是空串，写入文件为二进制</li>
</ul>
<blockquote>
<p>该方法需要读取时知道存入文件时数组的维度和元素类型 a.tofile()和np.fromfile()需要配合使用 可以通过元数据文件来存储额外信息</p>
</blockquote>
<h2 id="Numpy的便捷文件存取"><a href="#Numpy的便捷文件存取" class="headerlink" title="Numpy的便捷文件存取"></a><a href="#Numpy的便捷文件存取" title="Numpy的便捷文件存取"></a>Numpy的便捷文件存取</h2><ul>
<li>fname: 文件名，以.npy为扩展名，压缩扩展名为.npz</li>
<li><p>array: 数组变量</p>
</li>
<li><p>fname: 文件名，以.npy为扩展名，压缩扩展名为.npz</p>
</li>
</ul>
<h2 id="NumPy的随机函数子库"><a href="#NumPy的随机函数子库" class="headerlink" title="NumPy的随机函数子库"></a><a href="#NumPy的随机函数子库" title="NumPy的随机函数子库"></a>NumPy的随机函数子库</h2><p>np.random</p>
<ul>
<li>rand(do, d1, …, dn): 根据d0‐dn创建随机数数组，浮点数，[0,1)，均匀分布</li>
<li>randn(do, d1, .., dn): 根据d0‐dn创建随机数数组，标准正态分布</li>
<li>randint(low[, high, shape]): 根据shape创建随机整数或整数数组，范围是[low, high)</li>
<li><p>sdde(s): 随机数种子，s是给定的种子值</p>
</li>
<li><p>shuffle(a): 根据数组a的第1轴进行随排列，改变数组x</p>
</li>
<li><p>permutation(a): 根据数组a的第1轴产生一个新的乱序数组，不改变数组x</p>
</li>
<li><p>choice(a[, size, replace, p]): 从一维数组a中以概率p抽取元素，形成size形状新数组 replace表示是否可以重用元素，默认为False</p>
</li>
<li><p>uniform(low, high, size): 产生具有均匀分布的数组,low起始值,high结束值,size形状</p>
</li>
<li><p>normal(loc, scale, size): 产生具有正态分布的数组,loc均值,scale标准差,size形状</p>
</li>
<li>poisson(lam, size): 产生具有泊松分布的数组,lam随机事件发生率,size形状</li>
</ul>
<h2 id="NumPy的统计函数"><a href="#NumPy的统计函数" class="headerlink" title="NumPy的统计函数"></a><a href="#NumPy的统计函数" title="NumPy的统计函数"></a>NumPy的统计函数</h2><ul>
<li>sum(a, axis = None): 根据给定轴axis计算数组a相关元素之和， axis整数或元组</li>
<li>mean(a, axis = None): 根据给定轴axis计算数组a相关元素的期望， axis整数或元组</li>
<li>average(a, axis = None, weights=None): 根据给定轴axis计算数组a相关元素的加权平均值</li>
<li>std(a, axis = None): 根据给定轴axis计算数组a相关元素的标准差</li>
<li><p>var(a, axis = None): 根据给定轴axis计算数组a相关元素的方差</p>
</li>
<li><p>min(a) max(a):计算数组a中元素的最小值、最大值</p>
</li>
<li><p>argmin(a) argmax(a): 计算数组a中元素最小值、最大值的降一维后下标</p>
</li>
<li>unravel_index(index, shape): 根据shape将一维下标index转换成多维下标</li>
<li>ptp(a): 计算数组a中元素最大值与最小值的差</li>
<li><p>median(a): 计算数组a中元素的中位数（中值）</p>
</li>
<li><p>np.gradient(f): 计算数组f中元素的梯度，当f为多维时，返回每个维度梯度</p>
<blockquote>
<p>梯度：连续值之间的变化率，即斜率XY坐标轴连续三个X坐标对应的Y轴值：a, b, c，其中，b的梯度是： (c‐a)/2</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据的CSV文件存取&quot;&gt;&lt;a href=&quot;#数据的CSV文件存取&quot; class=&quot;headerlink&quot; title=&quot;数据的CSV文件存取&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#数据的CSV文件存取&quot; title=&quot;数据的CSV文件存取&quot;&gt;&lt;/a&gt;数据的CSV文件存取&lt;
    
    </summary>
    
    
      <category term="numpy" scheme="http://kingle.online/tags/numpy/"/>
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python-numpy库</title>
    <link href="http://kingle.online/2017/04/17/Python-numpy%E5%BA%93/"/>
    <id>http://kingle.online/2017/04/17/Python-numpy库/</id>
    <published>2017-04-17T13:43:15.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="列表和数组"><a href="#列表和数组" class="headerlink" title="列表和数组"></a>列表和数组</h2><p>区别:</p>
<ul>
<li>列表：数据类型可以不同</li>
<li>数组：数据类型相同<h2 id="NumPy简介"><a href="#NumPy简介" class="headerlink" title="NumPy简介"></a>NumPy简介</h2>NumPy是一个开源的Python科学计算基础库，包含：<br>一个强大的N维数组对象 ndarray</li>
<li>广播功能函数</li>
<li>整合C/C++/Fortran代码的工具</li>
<li>线性代数、傅里叶变换、随机数生成等功能</li>
</ul>
<h3 id="ndarray对象的属性"><a href="#ndarray对象的属性" class="headerlink" title="ndarray对象的属性"></a>ndarray对象的属性</h3><ul>
<li>.ndim: 秩，即轴的数量或纬度的数量</li>
<li>.shape: ndarray对象的尺度，对于矩阵，n行m列</li>
<li>.size : ndarray对象的个数，相当于.shape中n*m的值</li>
<li>dtype: ndarray对象的元素类型</li>
<li>itemsize: ndarray对象中每个元素的大小，以字节为单位</li>
</ul>
<hr>
<h3 id="ndarray的元素类型"><a href="#ndarray的元素类型" class="headerlink" title="ndarray的元素类型"></a>ndarray的元素类型</h3><ul>
<li>bool: 布尔类型，True或False</li>
<li>intc:  与C语言中的int类型一致，一般是int32或int64</li>
<li>intp:用于索引的整数，与C语言中ssize_t一致，int32或int64</li>
<li>int8, int16, int32, int64</li>
<li>uint8, uint16, uint32, uint64,无符号位</li>
<li>float16, float32, float64</li>
<li>complex64, complex128: 实部和虚部都是32 / 64位浮点数</li>
</ul>
<p><strong>ndarray数组可以由非同质对象构成非,同质ndarray元素为对象类型,非同质ndarray对象无法有效发挥NumPy优势，尽量避免使用</strong></p>
<hr>
<h3 id="ndarray数组的创建方法"><a href="#ndarray数组的创建方法" class="headerlink" title="ndarray数组的创建方法"></a>ndarray数组的创建方法</h3><p>(1)从Python中的列表、元组等类型创建ndarray数组:</p>
<ul>
<li>x = np.array(list/tuple)<ul>
<li>x = np.array(list/tuple, dtype=np.float32)</li>
</ul>
</li>
</ul>
<p>(2)使用NumPy中函数创建ndarray数组，如:arange, ones, zeros等:</p>
<ul>
<li>np.arange(n):类似range()函数，返回ndarray类型，元素从0到n‐1</li>
<li>np.ones(shape): 根据shape生成一个全1数组，shape是元组类型</li>
<li>np.zeros(shape): 根据shape生成一个全0数组，shape是元组类型</li>
<li>np.full(shape, val): 根据shape生成一个数组，每个元素值都是val</li>
<li>np.eye(n): 创建一个正方的n*n单位矩阵，对角线为1，其余为0</li>
<li>np.ones_like(a): 根据数组a的形状生成一个全1数组</li>
<li>np.zeros_like(a): 根据数组a的形状生成一个全0数组</li>
<li>np.full_like(a): 根据数组a的形状生成一个数组，每个元素值都是val</li>
</ul>
<p>(3)使用NumPy中其他函数创建ndarray数组</p>
<ul>
<li>np.linspace(): 根据起止数据等间距地填充数据，形成数组,有endpoint参数，可以设置成False</li>
<li>np.concatenate(): 将两个或多个数组合并成一个新的数组</li>
</ul>
<hr>
<h3 id="ndarray数组的维度变换"><a href="#ndarray数组的维度变换" class="headerlink" title="ndarray数组的维度变换"></a>ndarray数组的维度变换</h3><ul>
<li>.reshape(shape): 不改变数组元素，返回一个shape形状的数组，原数组不变</li>
<li>.resize(shape): 与.reshape()功能一样，但是修改原数组</li>
<li>.swapaxes(ax1, ax2): 将数组n个维度中两个维度进行调换</li>
<li>.flatten(): 对数组进行降维，返回折叠后的一维数组，原数组不变</li>
</ul>
<h3 id="ndarray数组的类型变换"><a href="#ndarray数组的类型变换" class="headerlink" title="ndarray数组的类型变换"></a>ndarray数组的类型变换</h3><p>new_a = a.astype(new_type)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b = a.astype(np.float)</div></pre></td></tr></table></figure></p>
<p>ndarray数组向列表的转换: ls = a.tolist()</p>
<h3 id="数组的索引和切片"><a href="#数组的索引和切片" class="headerlink" title="数组的索引和切片"></a>数组的索引和切片</h3><p>索引:获取数组中特定位置元素的过程,一般以逗号分隔<br>切片:获取数组元素子集的过程，一般以分号分隔</p>
<h3 id="数组与标量之间的运算"><a href="#数组与标量之间的运算" class="headerlink" title="数组与标量之间的运算"></a>数组与标量之间的运算</h3><p>数组与标量之间的运算作用于数组的每一个元素<br>NumPy一元函数</p>
<ul>
<li>np.abs(x) np.fab(x):计算数组各元素的绝对值</li>
<li>np.sqrt(x): 计算数组各元素的平方根</li>
<li>np.square(x): 计算数组各元素的平方</li>
<li>np.log(x) np.log10(x) np.log2(x): 计算数组各元素的自然对数、10底对数和2底对数</li>
<li>np.ceil(x) np.floor(x): 计算数组各元素的ceiling值 或 floor值</li>
<li>np.rint(x): 计算数组各元素的四舍五入值</li>
<li>np.modf(x): 将数组各元素的小数和整数部分以两个独立数组形式返回</li>
<li>np.cos(x) np.cosh(x) np.sin(x) np.sinh(x) np.tan(x) np.tanh(x): 计算数组各元素的普通型和双曲型三角函数</li>
<li>np.exp(x): 计算数组各元素的指数值</li>
<li>np.sign(x): 计算数组各元素的符号值，1(+), 0, ‐1(‐)<br><strong> 注意数组是否被真实改变</strong></li>
</ul>
<p>NumPy二元函数:</p>
<ul>
<li>np.maximum(x,y) np.fmax() np.minimum(x,y) np.fmin(): 元素级的最大值/最小值计算</li>
<li>np.mod(x, y): 元素级的模运算</li>
<li>np.copysign(x,y): 将数组y中各元素值的符号赋值给数组x对应元素</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;列表和数组&quot;&gt;&lt;a href=&quot;#列表和数组&quot; class=&quot;headerlink&quot; title=&quot;列表和数组&quot;&gt;&lt;/a&gt;列表和数组&lt;/h2&gt;&lt;p&gt;区别:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表：数据类型可以不同&lt;/li&gt;
&lt;li&gt;数组：数据类型相同&lt;h2 id=&quot;Num
    
    </summary>
    
    
      <category term="numpy" scheme="http://kingle.online/tags/numpy/"/>
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记-c/c++快速入门</title>
    <link href="http://kingle.online/2017/03/31/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-c-c++%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>http://kingle.online/2017/03/31/算法笔记-c-c++快速入门/</id>
    <published>2017-03-31T13:39:53.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="c-c-快速入门"><a href="#c-c-快速入门" class="headerlink" title="c/c++快速入门"></a>c/c++快速入门</h2><ol>
<li>在C++标准中，stdio.h更为推荐的等价方法是：cstdio</li>
<li>绝对值在10^9范围内的整数都可以定义成int型，否则用long long，在初值后需要加上LL</li>
<li>尽量使用double来存储浮点型数据</li>
<li>0-9：48-57，A-Z: 65-90，a-z: 97-122</li>
<li>#define pi 3.14,末尾不加分号，但更推荐const double pi = 3.14， = acos(-1)</li>
<li>位运算符没有算术运算符高</li>
<li>除了%c外，scanf对其他格式符的输入是以空白符（空格，换行等）为结束标志</li>
<li>printf,%0md,不足位前面补充0</li>
<li>typedef long long LL; //给long long起一个别名LL</li>
<li>fabs(), pow(), floor(), ceil(),sqrt(),round()四舍五入</li>
<li>数组的大小必须是整数常亮，不能是变量</li>
<li>如果数组大小较大（大概10^6），则需要将其定义在主函数外面</li>
<li>对于scanf，%c格式能够识别空格跟换行并将其输入，而%s通过空格或换行来识别一个字符串的结束</li>
<li>gets识别\n作为结束</li>
<li>string.h: strlen(), strcmp(), strcpy(), strcat()</li>
<li>sscanf(str, “%d”, &amp;n);从左读到右，sprintf(str, “%d”, n);从右读到左</li>
<li>数组第二维度必须定义</li>
<li>两个int型的指针相减，等价于在求两个指针之间相差了几个int</li>
<li>指针是一个unsigned的整数，引用是产生变量的别名，因此常量不可使用引用</li>
<li><p>如果自己定义了构造函数，则不能不经过初始化就定义结构体变量</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">studentInfo</span> &#123;</span></div><div class="line">    <span class="keyword">int</span> id;</div><div class="line">    <span class="keyword">char</span> gender;</div><div class="line">    <span class="comment">//结构体的构造函数初始化</span></div><div class="line">    studnetInfo(<span class="keyword">int</span> _id, <span class="keyword">char</span> _gender): id(_id), gender(_gender) &#123;&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p>浮点数的比较，引入极小的数进行修正，eps取1e-8基本上可以满足要求。</p>
</li>
<li>一般的OJ系统，一秒钟的运算次数大概是10^7 ~ 10^8左右，因此O(n^2)的算法，n的规模为10000时是可以承受的。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;c-c-快速入门&quot;&gt;&lt;a href=&quot;#c-c-快速入门&quot; class=&quot;headerlink&quot; title=&quot;c/c++快速入门&quot;&gt;&lt;/a&gt;c/c++快速入门&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在C++标准中，stdio.h更为推荐的等价方法是：cstdio&lt;/li&gt;

    
    </summary>
    
    
      <category term="算法笔记" scheme="http://kingle.online/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
      <category term="c/c++" scheme="http://kingle.online/tags/c-c/"/>
    
  </entry>
  
  <entry>
    <title>vim配置</title>
    <link href="http://kingle.online/2017/03/29/vim%E9%85%8D%E7%BD%AE/"/>
    <id>http://kingle.online/2017/03/29/vim配置/</id>
    <published>2017-03-29T13:38:35.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>所需即所获：像 IDE 一样使用 vim, 参考<a href="https://github.com/yangyangwithgnu/use_vim_as_ide#01-vimrc-文件" target="_blank" rel="external">https://github.com/yangyangwithgnu/use_vim_as_ide#01-vimrc-文件</a></p>
</blockquote>
<h2 id="0-vim-必知"><a href="#0-vim-必知" class="headerlink" title="0 vim 必知"></a>0 vim 必知</h2><p>在正式开始前先介绍几个 vim 的必知会，这不是关于如何使用而是如何配置 vim 的要点，这对理解后续相关配置非常有帮助。</p>
<h3 id="0-1-vimrc-文件"><a href="#0-1-vimrc-文件" class="headerlink" title="0.1 .vimrc 文件"></a>0.1 .vimrc 文件</h3><p>.vimrc 是控制 vim 行为的配置文件，位于 ~/.vimrc，不论 vim 窗口外观、显示字体，还是操作方式、快捷键、插件属性均可通过编辑该配置文件将 vim 调教成最适合你的编辑器。<br>很多人之所以觉得 vim 难用，是因为 vim 缺少默认设置，甚至安装完后你连配置文件自身都找不到，不进行任何配置的 vim 的确难看、难用。不论用于代码还是普通文本编辑，有必要将如下基本配置加入 .vimrc 中。<br>前缀键。各类 vim 插件帮助文档中经常出现 <leader>，即，前缀键。vim 自带有很多快捷键，再加上各类插件的快捷键，大量快捷键出现在单层空间中难免引起冲突，为缓解该问题，引入了前缀键 <leader>，这样，键 r 可以配置成 r、<leader>r、<leader><leader>r 等等多个快捷键。前缀键是 vim 使用率较高的一个键（最高的当属 Esc），选一个最方便输入的键作为前缀键，将有助于提高编辑效率。找个无须眼睛查找、无须移动手指的键 —— 分号键，挺方便的，就在你右手小指处：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 定义快捷键的前缀，即&lt;Leader&gt;</span></div><div class="line">let mapleader=";<span class="string">"</span></div></pre></td></tr></table></figure></leader></leader></leader></leader></leader></p>
<p>既然前缀键是为快捷键服务的，那随便说下快捷键设定原则：不同快捷键尽量不要有同序的相同字符。比如，<leader>e 执行操作 0 和 <leader>eb 执行操作 1，在你键入 <leader>e 后，vim 不会立即执行操作 0，而是继续等待用户键入 b，即便你只想键入 <leader>e，vim 也不得不花时间等待输入以确认是哪个快捷键，显然，这让 <leader>e 响应速度变慢。<leader>ea 和 <leader>eb 就没问题。<br>文件类型侦测。允许基于不同语言加载不同插件（如，C++ 的语法高亮插件与 python 的不同）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 开启文件类型侦测</span></div><div class="line">filetype on</div><div class="line">" 根据侦测到的不同类型加载对应的插件</div><div class="line">filetype plugin on</div></pre></td></tr></table></figure></leader></leader></leader></leader></leader></leader></leader></p>
<p>快捷键。把 vim（非插件）常用操作设定成快捷键，提升效率：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 定义快捷键到行首和行尾</span></div><div class="line">nmap LB 0</div><div class="line">nmap LE $</div><div class="line">" 设置快捷键将选中文本块复制至系统剪贴板</div><div class="line">vnoremap &lt;Leader&gt;y <span class="string">"+y</span></div><div class="line">" 设置快捷键将系统剪贴板内容粘贴至 vim</div><div class="line">nmap &lt;Leader&gt;p <span class="string">"+p</span></div><div class="line">" 定义快捷键关闭当前分割窗口</div><div class="line">nmap &lt;Leader&gt;q :q&lt;CR&gt;</div><div class="line"><span class="string">" 定义快捷键保存当前窗口内容</span></div><div class="line">nmap &lt;Leader&gt;w :w&lt;CR&gt;</div><div class="line">" 定义快捷键保存所有窗口内容并退出 vim</div><div class="line">nmap &lt;Leader&gt;WQ :wa&lt;CR&gt;:q&lt;CR&gt;</div><div class="line"><span class="string">" 不做任何保存，直接退出 vim</span></div><div class="line">nmap &lt;Leader&gt;Q :qa!&lt;CR&gt;</div><div class="line">" 依次遍历子窗口</div><div class="line">nnoremap nw &lt;C-W&gt;&lt;C-W&gt;</div><div class="line"><span class="string">" 跳转至右方的窗口</span></div><div class="line">nnoremap &lt;Leader&gt;lw &lt;C-W&gt;l</div><div class="line">" 跳转至左方的窗口</div><div class="line">nnoremap &lt;Leader&gt;hw &lt;C-W&gt;h</div><div class="line"><span class="string">" 跳转至上方的子窗口</span></div><div class="line">nnoremap &lt;Leader&gt;kw &lt;C-W&gt;k</div><div class="line">" 跳转至下方的子窗口</div><div class="line">nnoremap &lt;Leader&gt;jw &lt;C-W&gt;j</div><div class="line"><span class="string">" 定义快捷键在结对符之间跳转</span></div><div class="line">nmap &lt;Leader&gt;M %</div></pre></td></tr></table></figure></p>
<p>立即生效。全文频繁变更 .vimrc，要让变更内容生效，一般的做法是先保存 .vimrc 再重启 vim，太繁琐了，增加如下设置，可以实现保存 .vimrc 时自动重启加载它：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 让配置变更立即生效</span></div><div class="line">autocmd BufWritePost <span class="variable">$MYVIMRC</span> source <span class="variable">$MYVIMRC</span></div></pre></td></tr></table></figure></p>
<p>其他。搜索、vim 命令补全等设置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 开启实时搜索功能</span></div><div class="line">set incsearch</div><div class="line">" 搜索时大小写不敏感</div><div class="line"><span class="built_in">set</span> ignorecase</div><div class="line"><span class="string">" 关闭兼容模式</span></div><div class="line">set nocompatible</div><div class="line">" vim 自身命令行模式智能补全</div><div class="line"><span class="built_in">set</span> wildmenu</div></pre></td></tr></table></figure></p>
<blockquote>
<p>快捷键还是得注意一些，快捷键的前缀的使用还需要多试几次，需要比较快的手速，多试几次就可以适应了。</p>
</blockquote>
<p>以上的四类配置不仅影响 vim，而且影响插件是否能正常运行。很多插件不仅要在 .vimrc 中添加各自特有的配置信息，还要增加 vim 自身的配置信息，在后文的各类插件介绍中，我只介绍对应插件特有配置信息，当你发现按文中介绍操作后插件未生效，很可能是 vim 自身配置信息未添加，所以一定要把上述配置拷贝至到你的 .vimrc 中，再对照本文介绍一步步操作。.vimrc 完整配置信息参见附录，每个配置项都有对应注释。另外，由于有些插件还未来得及安装，在你实验前面的插件是否生效时，vim 可能有报错信息提示，先别理会，安装完所有插件后自然对了。</p>
<h2 id="1-源码安装编辑器-vim"><a href="#1-源码安装编辑器-vim" class="headerlink" title="1 源码安装编辑器 vim"></a>1 源码安装编辑器 vim</h2><blockquote>
<p>对于MAC，一般自带的vim是7.4版本，这个和源码安装并不会冲突，会自动替换到8.0.之后的版本，可以用vim –version查看。</p>
</blockquote>
<p>发行套件的软件源中预编译的 vim 要么不是最新版本，要么功能有阉割，有必要升级成全功能的最新版，当然，源码安装必须滴：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git@github.com:vim/vim.git</div><div class="line"><span class="built_in">cd</span> vim/</div><div class="line">./configure --with-features=huge --enable-pythoninterp --enable-rubyinterp --enable-luainterp --enable-perlinterp --with-python-config-dir=/usr/lib/python2.7/config/ --enable-gui=gtk2 --enable-cscope --enable-multibyte --enable-python3interp --with-python-config-dir=/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/config-3.6m-darwin --prefix=/usr</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure></p>
<p>其中，已经打开了Python3的使用，但是config的路径还是得根据自己的需求进行配置。<br>而 –enable-pythoninterp、–enable-rubyinterp、–enable-perlinterp、–enable-luainterp 等分别表示支持 ruby、python、perl、lua 编写的插件，–enable-gui=gtk2 表示生成采用 GNOME2 风格的 gvim，–enable-cscope 支持 cscope，–with-python-config-dir=/usr/lib/python2.7/config/ 指定 python 路径（先自行安装 python 的头文件 python-devel），这几个特性非常重要，影响后面各类插件的使用。注意，你得预先安装相关依赖库的头文件，python-devel、python3-devel、ruby-devel、lua-devel、libX11-devel、gtk-devel、gtk2-devel、gtk3-devel、ncurses-devel，如果缺失，源码构建过程虽不会报错，但最终生成的 vim 很可能缺失某些功能。构建完成后在 vim 中执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="built_in">echo</span> has(<span class="string">'python'</span>)</div></pre></td></tr></table></figure></p>
<p>若输出 1 则表示构建出的 vim 已支持 python，反之，0 则不支持。</p>
<h2 id="2-插件管理"><a href="#2-插件管理" class="headerlink" title="2 插件管理"></a>2 插件管理</h2><p>vim 自身希望通过在 .vim/ 目录中预定义子目录管理所有插件（比如，子目录 doc/ 存放插件帮助文档、plugin/ 存放通用插件脚本），vim 的各插件打包文档中通常也包含上述两个（甚至更多）子目录，用户将插件打包文档中的对应子目录拷贝至 .vim/ 目录即可完成插件的安装。一般情况下这种方式没问题，但我等重度插件用户，.vim/ 将变得混乱不堪，至少存在如下几个问题：<br>插件名字冲突。所有插件的帮助文档都在 doc/ 子目录、插件脚本都在 plugin/ 子目录，同个名字空间下必然引发名字冲突；<br>插件卸载易误。你需要先知道 doc/ 和 plugin/ 子目录下哪些文件是属于该插件的，再逐一删除，容易多删/漏删。<br>我希望每个插件在 .vim/ 下都有各自独立子目录，这样需要升级、卸载插件时，直接找到对应插件目录变更即可；另外，我希望所有插件清单能在某个配置文件中集中罗列，通过某种机制实现批量自动安装/更新/升级所有插件。vundle（<a href="https://github.com/VundleVim/Vundle.vim" target="_blank" rel="external">https://github.com/VundleVim/Vundle.vim</a> ）为此而生，它让管理插件变得更清晰、智能。<br>vundle 会接管 .vim/ 下的所有原生目录，所以先清空该目录，再通过如下命令安装 vundle：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</div></pre></td></tr></table></figure></p>
<p>接下来在 .vimrc 增加相关配置信息(具体可以去看GitHub <a href="https://github.com/yangyangwithgnu/use_vim_as_ide#01-vimrc-文件)：" target="_blank" rel="external">https://github.com/yangyangwithgnu/use_vim_as_ide#01-vimrc-文件)：</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="string">" vundle 环境设置</span></div><div class="line">filetype off</div><div class="line">set rtp+=~/.vim/bundle/Vundle.vim</div><div class="line">" vundle 管理的插件列表必须位于 vundle<span class="comment">#begin() 和 vundle#end() 之间</span></div><div class="line">call vundle<span class="comment">#begin()</span></div><div class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></div><div class="line">Plugin <span class="string">'altercation/vim-colors-solarized'</span></div><div class="line">Plugin <span class="string">'tomasr/molokai'</span></div><div class="line">Plugin <span class="string">'vim-scripts/phd'</span></div><div class="line">Plugin <span class="string">'Lokaltog/vim-powerline'</span></div><div class="line">Plugin <span class="string">'octol/vim-cpp-enhanced-highlight'</span></div><div class="line">Plugin <span class="string">'nathanaelkane/vim-indent-guides'</span></div><div class="line">Plugin <span class="string">'derekwyatt/vim-fswitch'</span></div><div class="line">Plugin <span class="string">'kshenoy/vim-signature'</span></div><div class="line">Plugin <span class="string">'vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines'</span></div><div class="line">Plugin <span class="string">'majutsushi/tagbar'</span></div><div class="line">Plugin <span class="string">'vim-scripts/indexer.tar.gz'</span></div><div class="line">Plugin <span class="string">'vim-scripts/DfrankUtil'</span></div><div class="line">Plugin <span class="string">'vim-scripts/vimprj'</span></div><div class="line">Plugin <span class="string">'dyng/ctrlsf.vim'</span></div><div class="line">Plugin <span class="string">'terryma/vim-multiple-cursors'</span></div><div class="line">Plugin <span class="string">'scrooloose/nerdcommenter'</span></div><div class="line">Plugin <span class="string">'vim-scripts/DrawIt'</span></div><div class="line">Plugin <span class="string">'SirVer/ultisnips'</span></div><div class="line">Plugin <span class="string">'Valloric/YouCompleteMe'</span></div><div class="line">Plugin <span class="string">'derekwyatt/vim-protodef'</span></div><div class="line">Plugin <span class="string">'scrooloose/nerdtree'</span></div><div class="line">Plugin <span class="string">'fholgado/minibufexpl.vim'</span></div><div class="line">Plugin <span class="string">'gcmt/wildfire.vim'</span></div><div class="line">Plugin <span class="string">'sjl/gundo.vim'</span></div><div class="line">Plugin <span class="string">'Lokaltog/vim-easymotion'</span></div><div class="line">Plugin <span class="string">'suan/vim-instant-markdown'</span></div><div class="line">Plugin <span class="string">'lilydjwg/fcitx.vim'</span></div><div class="line"><span class="string">" 插件列表结束</span></div><div class="line">call vundle#end()</div><div class="line">filetype plugin indent on</div></pre></td></tr></table></figure></p>
<p>其中，每项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Plugin <span class="string">'dyng/ctrlsf.vim'</span></div></pre></td></tr></table></figure></p>
<p>对应一个插件（这与 go 语言管理不同代码库的机制类似），后续若有新增插件，只需追加至该列表中即可。vundle 支持源码托管在 <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 的插件，同时 vim 官网 <a href="http://www.vim.org/" target="_blank" rel="external">http://www.vim.org/</a> 上的所有插件均在 <a href="https://github.com/vim-scripts/" target="_blank" rel="external">https://github.com/vim-scripts/</a> 有镜像，所以，基本上主流插件都可以纳入 vundle 管理。具体而言，仍以 ctrlsf.vim 为例，它在 .vimrc 中配置信息为 dyng/ctrlsf.vim，vundle 很容易构造出其真实下载地址 <a href="https://github.com/dyng/ctrlsf.vim.git" target="_blank" rel="external">https://github.com/dyng/ctrlsf.vim.git</a> ，然后借助 git 工具进行下载及安装。<br>此后，需要安装插件，先找到其在 github.com 的地址，再将配置信息其加入 .vimrc 中的call vundle#begin() 和 call vundle#end() 之间，最后进入 vim 执行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:PluginInstall</div></pre></td></tr></table></figure></p>
<p>要卸载插件，先在 .vimrc 中注释或者删除对应插件配置信息，然后在 vim 中执行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:PluginClean</div></pre></td></tr></table></figure></p>
<p>即可删除对应插件。插件更新频率较高，差不多每隔一个月你应该看看哪些插件有推出新版本，批量更新，只需执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:PluginUpdate</div></pre></td></tr></table></figure></p>
<p>即可。<br>你得注意插件的下载源。同名插件在 github.com 上可能有多个，比如，indexer 插件，至少就有 <a href="https://github.com/vim-scripts/indexer.tar.gz" target="_blank" rel="external">https://github.com/vim-scripts/indexer.tar.gz</a> 、<a href="https://github.com/everzet/vim-indexer" target="_blank" rel="external">https://github.com/everzet/vim-indexer</a> 、<a href="https://github.com/shemerey/vim-indexer" target="_blank" rel="external">https://github.com/shemerey/vim-indexer</a> 等三个，到底应该选哪个呢？以我的经验来看，对于钟意的插件，我会先找其作者的个人网站，上面通常会罗列出托管在 github.com 的具体地址；若没有，我会找该插件在 vim.org 的页面，上面也会有 github.com 托管地址；若还是没有，再以 github 和插件名作为关键字搜索，点赞数多的，通常是你想找的。为节约你找插件地址的时间，本文中出现的每个插件我都会附上其地址。非特殊情况，后文介绍到的插件不再累述如何安装。<br>通过 vundle 管理插件后，切勿通过发行套件自带的软件管理工具安装任何插件，不然 .vim/ 又要混乱了。</p>
<h2 id="3-界面美化"><a href="#3-界面美化" class="headerlink" title="3 界面美化"></a>3 界面美化</h2><p>玉不琢不成器，vim 不配不算美。刚安装好的 vim 朴素得吓人，这是与我同时代的软件么？<br><img src="http://ojlmcfp94.bkt.clouddn.com/imgae/%E9%BB%98%E8%AE%A4vim%E7%95%8C%E9%9D%A2.png"></p>
<h3 id="3-1-主题风格"><a href="#3-1-主题风格" class="headerlink" title="3.1  主题风格"></a>3.1  主题风格</h3><p>一套好的配色方案绝对会影响你的编码效率，vim 内置了 10 多种配色方案供你选择，GUI 下，可以通过菜单（Edit -&gt; Color Scheme）试用不同方案，字符模式下，需要你手工调整配置信息，再重启 vim 查看效果（csExplorer 插件，可在字符模式下不用重启即可查看效果）。不满意，可以去 <a href="http://vimcolorschemetest.googlecode.com/svn/html/index-c.html" target="_blank" rel="external">http://vimcolorschemetest.googlecode.com/svn/html/index-c.html</a> 慢慢选。我自认为“阅美无数”，目前最夯三甲：</p>
<ul>
<li>素雅 solarized（<a href="https://github.com/altercation/vim-colors-solarized" target="_blank" rel="external">https://github.com/altercation/vim-colors-solarized</a> ）</li>
<li>多彩 molokai（<a href="https://github.com/tomasr/molokai" target="_blank" rel="external">https://github.com/tomasr/molokai</a> ）</li>
<li>复古 phd（<a href="http://www.vim.org/scripts/script.php?script_id=3139" target="_blank" rel="external">http://www.vim.org/scripts/script.php?script_id=3139</a> ）<br>但是我自己还是比较喜欢：</li>
<li>lucius <a href="https://github.com/jonathanfilip/vim-lucius" target="_blank" rel="external">https://github.com/jonathanfilip/vim-lucius</a><br><img src="http://ojlmcfp94.bkt.clouddn.com/imgae/%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88.png"><br>“ 配色方案<br>set background=dark<br>colorscheme solarized<br>“colorscheme molokai<br>“colorscheme phd<br>“colorscheme lucius</li>
</ul>
<h3 id="3-2-营造专注氛围"><a href="#3-2-营造专注氛围" class="headerlink" title="3.2 营造专注氛围"></a>3.2 营造专注氛围</h3><p>如今的 UX 设计讲究的是内容至上，从 GNOME3 的变化就能看出。编辑器界面展示的应全是代码，不应该有工具条、菜单、滚动条浪费空间的元素，另外，编程是种精神高度集中的脑力劳动，不应出现闪烁光标、花哨鼠标这些分散注意力的东东。配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 禁止光标闪烁</span></div><div class="line">set gcr=a:block-blinkon0</div><div class="line">" 禁止显示滚动条</div><div class="line"><span class="built_in">set</span> guioptions-=l</div><div class="line"><span class="built_in">set</span> guioptions-=L</div><div class="line"><span class="built_in">set</span> guioptions-=r</div><div class="line"><span class="built_in">set</span> guioptions-=R</div><div class="line"><span class="string">" 禁止显示菜单和工具条</span></div><div class="line">set guioptions-=m</div><div class="line">set guioptions-=T</div></pre></td></tr></table></figure></p>
<p>我们把 vim 弄成全屏模式。vim 自身无法实现全屏，必须借助第三方工具 wmctrl，一个控制窗口 XYZ 坐标、窗口尺寸的命令行工具。先自行安装 wmctrl，再在 .vimrc 中增加如下信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 将外部命令 wmctrl 控制窗口最大化的命令行参数封装成一个 vim 的函数</span></div><div class="line">fun! ToggleFullscreen()</div><div class="line">    call system("wmctrl -ir <span class="string">" . v:windowid . "</span> -b toggle,fullscreen<span class="string">")</span></div><div class="line">endf</div><div class="line">" 全屏开/关快捷键</div><div class="line">map &lt;silent&gt; &lt;F11&gt; :call ToggleFullscreen()&lt;CR&gt;</div><div class="line"><span class="string">" 启动 vim 时自动全屏</span></div><div class="line">autocmd VimEnter * call ToggleFullscreen()</div></pre></td></tr></table></figure></p>
<h3 id="3-3-添加辅助信息"><a href="#3-3-添加辅助信息" class="headerlink" title="3.3 添加辅助信息"></a>3.3 添加辅助信息</h3><p>去除了冗余元素让 vim 界面清爽多了，为那些实用辅助信息腾出了空间。光标当前位置、显示行号、高亮当前行/列等等都很有用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 总是显示状态栏</span></div><div class="line">set laststatus=2</div><div class="line">" 显示光标当前位置</div><div class="line"><span class="built_in">set</span> ruler</div><div class="line"><span class="string">" 开启行号显示</span></div><div class="line">set number</div><div class="line">" 高亮显示当前行/列</div><div class="line"><span class="built_in">set</span> cursorline</div><div class="line"><span class="built_in">set</span> cursorcolumn</div><div class="line"><span class="string">" 高亮显示搜索结果</span></div><div class="line">set hlsearch</div></pre></td></tr></table></figure></p>
<h3 id="3-4-其他美化"><a href="#3-4-其他美化" class="headerlink" title="3.4 其他美化"></a>3.4 其他美化</h3><p>默认字体不好看，挑个自己喜欢的，前提是你得先安装好该字体。中文字体，我喜欢饱满方正的（微软雅黑），英文字体喜欢圆润的（Consolas），vim 无法同时使用两种字体，怎么办？有人制作发布了一款中文字体用微软雅黑、英文字体用 Consolas 的混合字体 —— yahei consolas hybrid 字体，号称最适合中国程序员使用的字体，效果非常不错（本文全文采用该字体）。在 .vimrc 中设置下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 设置 gvim 显示字体</span></div><div class="line">set guifont=YaHei\ Consolas\ Hybrid\ 11.5</div></pre></td></tr></table></figure></p>
<p>其中，由于字体名存在空格，需要用转义符“\”进行转义；最后的 11.5 用于指定字体大小。<br>代码折行也不太美观，禁止掉：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 禁止折行</span></div><div class="line">set nowrap</div></pre></td></tr></table></figure></p>
<p>前面介绍的主题风格对状态栏不起作用，需要借助插件 Powerline（<a href="https://github.com/Lokaltog/vim-powerline" target="_blank" rel="external">https://github.com/Lokaltog/vim-powerline</a> ）美化状态栏，在 .vimrc 中设定状态栏主题风格：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 设置状态栏主题风格</span></div><div class="line">let g:Powerline_colorscheme='solarized256'</div></pre></td></tr></table></figure></p>
<p>效果见上图。</p>
<h2 id="4-代码分析"><a href="#4-代码分析" class="headerlink" title="4 代码分析"></a>4 代码分析</h2><p>阅读优秀开源项目源码是提高能力的重要手段，营造舒适、便利的阅读环境至关重要。</p>
<h3 id="4-1-语法高亮"><a href="#4-1-语法高亮" class="headerlink" title="4.1 语法高亮"></a>4.1 语法高亮</h3><p>代码只有一种颜色的编辑器，就好像红绿灯只有一种颜色的路口，全然无指引。现在已是千禧年后的十年了，早已告别上世纪六、七十年代黑底白字的时代，即使在字符模式下编程（感谢伟大的 fbterm），我也需要语法高亮。所幸 vim 自身支持语法高亮，只需显式打开即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 开启语法高亮功能</span></div><div class="line">syntax enable</div><div class="line">" 允许用指定语法高亮配色方案替换默认方案</div><div class="line">syntax on</div></pre></td></tr></table></figure></p>
<p>vim 对 C++ 语法高亮支持不够好（特别是 C++11/14 新增元素），必须借由插件 vim-cpp-enhanced-highlight（<a href="https://github.com/octol/vim-cpp-enhanced-highlight" target="_blank" rel="external">https://github.com/octol/vim-cpp-enhanced-highlight</a> ）进行增强。</p>
<p>vim-cpp-enhanced-highlight 主要通过 .vim/bundle/vim-cpp-enhanced-highlight/after/syntax/cpp.vim 控制高亮关键字及规则，所以，当你发现某个 STL 容器类型未高亮，那么将该类型追加进 cpp.vim 即可。如，initializer_list 默认并不会高亮，需要添加:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">syntax keyword cppSTL<span class="built_in">type</span> initializer_list</div></pre></td></tr></table></figure></p>
<h3 id="4-2-代码缩进"><a href="#4-2-代码缩进" class="headerlink" title="4.2 代码缩进"></a>4.2 代码缩进</h3><p>C/C++ 中的代码执行流由复合语句控制，如 if(){} 判断复合语句、for(){} 循环符号语句等等，这势必出现大量缩进。缩进虽然不影响语法正确性，但对提升代码清晰度有不可替代的功效。<br>在 vim 中有两类缩进表示法，一类是用 1 个制表符（’\t’），一类是用多个空格（’ ‘）。两者并无本质区别，只是源码文件存储的字符不同而已，但，缩进可视化插件对两类缩进显示方式不同，前者只能显示为粗块，后者可显示为细条，就我的审美观而言，选后者。增加如下配置信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 自适应不同语言的智能缩进</span></div><div class="line">filetype indent on</div><div class="line">" 将制表符扩展为空格</div><div class="line"><span class="built_in">set</span> expandtab</div><div class="line"><span class="string">" 设置编辑时制表符占用空格数</span></div><div class="line">set tabstop=4</div><div class="line">" 设置格式化时制表符占用空格数</div><div class="line"><span class="built_in">set</span> shiftwidth=4</div><div class="line"><span class="string">" 让 vim 把连续数量的空格视为一个制表符</span></div><div class="line">set softtabstop=4</div></pre></td></tr></table></figure></p>
<p>其中，注意下 expandtab、tabstop 与 shiftwidth、softtabstop、retab：</p>
<ul>
<li>expandtab，把制表符转换为多个空格，具体空格数量参考 tabstop 和 shiftwidth 变量；</li>
<li>tabstop 与 shiftwidth 是有区别的。tabstop 指定我们在插入模式下输入一个制表符占据的空格数量，linux 内核编码规范建议是 8，看个人需要；shiftwidth 指定在进行缩进格式化源码时制表符占据的空格数。所谓缩进格式化，指的是通过 vim 命令由 vim 自动对源码进行缩进处理，比如其他人的代码不满足你的缩进要求，你就可以对其进行缩进格式化。缩进格式化，需要先选中指定行，要么键入 = 让 vim 对该行进行智能缩进格式化，要么按需键入多次 &lt; 或 &gt; 手工缩进格式化；</li>
<li>softtabstop，如何处理连续多个空格。因为 expandtab 已经把制表符转换为空格，当你要删除制表符时你得连续删除多个空格，该设置就是告诉 vim 把连续数量的空格视为一个制表符，即，只删一个字符即可。通常应将这tabstop、shiftwidth、softtabstop 三个变量设置为相同值；<br>另外，你总会阅读其他人的代码吧，他们对制表符定义规则与你不同，这时你可以手工执行 vim 的 retab 命令，让 vim 按上述规则重新处理制表符与空格关系。<br>很多编码规范建议缩进（代码嵌套类似）最多不能超过 4 层，但难免有更多层的情况，缩进一多，我那个晕啊：<br>我希望有种可视化的方式能将相同缩进的代码关联起来，Indent Guides（<a href="https://github.com/nathanaelkane/vim-indent-guides" target="_blank" rel="external">https://github.com/nathanaelkane/vim-indent-guides</a> ）来了。安装好该插件后，增加如下配置信息：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 随 vim 自启动</span></div><div class="line">let g:indent_guides_enable_on_vim_startup=1</div><div class="line">" 从第二层开始可视化显示缩进</div><div class="line"><span class="built_in">let</span> g:indent_guides_start_level=2</div><div class="line"><span class="string">" 色块宽度</span></div><div class="line">let g:indent_guides_guide_size=1</div><div class="line">" 快捷键 i 开/关缩进可视化</div><div class="line">:nmap &lt;silent&gt; &lt;Leader&gt;i &lt;Plug&gt;IndentGuidesToggle</div></pre></td></tr></table></figure>
</li>
</ul>
<p>断节？Indent Guides 通过识别制表符来绘制缩进连接线，断节处是空行，没有制表符，自然绘制不出来，算是个小 bug，但瑕不掩瑜，有个小技巧可以解决，换行-空格-退格：</p>
<h3 id="4-3-代码折叠"><a href="#4-3-代码折叠" class="headerlink" title="4.3 代码折叠"></a>4.3 代码折叠</h3><p>有时为了去除干扰，集中精力在某部分代码片段上，我会把不关注部分代码折叠起来。vim 自身支持多种折叠：手动建立折叠（manual）、基于缩进进行折叠（indent）、基于语法进行折叠（syntax）、未更改文本构成折叠（diff）等等，其中，indent、syntax 比较适合编程，按需选用。增加如下配置信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 基于缩进或语法进行代码折叠</span></div><div class="line">"<span class="built_in">set</span> foldmethod=indent</div><div class="line"><span class="built_in">set</span> foldmethod=syntax</div><div class="line"><span class="string">" 启动 vim 时关闭折叠代码</span></div><div class="line">set nofoldenable</div></pre></td></tr></table></figure></p>
<p>操作：za，打开或关闭当前折叠；zM，关闭所有折叠；zR，打开所有折叠。</p>
<h3 id="4-4-接口与实现快速切换"><a href="#4-4-接口与实现快速切换" class="headerlink" title="4.4 接口与实现快速切换"></a>4.4 接口与实现快速切换</h3><p>我习惯把类的接口和实现分在不同文件中，常有在接口文件（MyClass.h）和实现文件（MyClass.cpp）中来回切换的操作。你当然可以先分别打开接口文件和实现文件，再手动切换，但效率不高。我希望，假如在接口文件中，vim 自动帮我找到对应的实现文件，当键入快捷键，在新 buffer 中打开对应实现文件。<br>vim-fswitch（<a href="https://github.com/derekwyatt/vim-fswitch" target="_blank" rel="external">https://github.com/derekwyatt/vim-fswitch</a> ）来了。安装后增加配置信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">" *.cpp 和 *.h 间切换</span></div><div class="line">nmap &lt;silent&gt; &lt;Leader&gt;sw :FSHere&lt;cr&gt;</div></pre></td></tr></table></figure></p>
<p>这样，键入 ;sw 就能在实现文件和接口文件间切换。</p>
<p>上图中，初始状态先打开了接口文件 MyClass.h，键入 ;sw 后，vim 在新 buffer 中打开实现文件 MyClass.cpp，并在当前窗口中显示；再次键入 ;sw 后，当前窗口切回接口文件。</p>
<h3 id="4-5-代码收藏"><a href="#4-5-代码收藏" class="headerlink" title="4.5 代码收藏"></a>4.5 代码收藏</h3><p>源码分析过程中，常常需要在不同代码间来回跳转，我需要“收藏”分散在不同处的代码行，以便需要查看时能快速跳转过去，这时，vim 的书签（mark）功能派上大用途了。<br>vim 书签的使用很简单，在你需要收藏的代码行键入 mm，这样就收藏好了，你试试，没反应？不会吧，难道你 linux 内核编译参数有问题，或者，vim 的编译参数没给全，让我想想，别急，喔，对了，你是指看不到书签？好吧，我承认这是 vim 最大的坑，书签所在行与普通行外观上没任何差别，肉眼，你是找不到他滴。这可不行，得来个让书签可视化的插件，vim-signature（<a href="https://github.com/kshenoy/vim-signature" target="_blank" rel="external">https://github.com/kshenoy/vim-signature</a> ）。vim-signature 通过在书签所在行的前面添加字符的形式，以此可视化书签，这就要求你源码安装的 vim 具备 signs 特性，具体可在 vim 命令模式下键入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="built_in">echo</span> has(<span class="string">'signs'</span>)</div></pre></td></tr></table></figure></p>
<p>若显示 1 则具备该特性，反之 0 则不具备该特性，需参考“1 源码安装编辑器 vim ”重新编译 vim。<br>vim 的书签分为两类，独立书签和分类书签。独立书签，书签名只能由字母（a-zA-Z）组成，长度最多不超过 2 个字母，并且，同个文件中，不同独立书签名中不能含有相同字母，比如，a 和 bD 可以同时出现在同个文件在，而 Fc 和 c 则不行。分类书签，书签名只能由可打印特殊字符（!@#$%^&amp;*()）组成，长度只能有 1 个字符，同个文件中，你可以把不同行设置成同名书签，这样，这些行在逻辑上就归类成相同类型的书签了。下图定义了名为 a 和 dF 两个独立书签（分别 259 行和 261 行）、名为 # 的一类分类书签（含 256 行和 264 行）、名为 @ 的一类分类书签（257 行）.<br>两种形式的书签完全分布在各自不同的空间中，所以，它俩的任何操作都是互不相同的，比如，你无法遍历所有书签，要么只能在各个独立书签间遍历，要么只能在分类书签间遍历。显然，两种形式的书签都有各自的使用场景，就我而言，只使用独立书签，原因有二：一是独立书签可保存，当我设置好独立书签后关闭文档，下次重新打开该文档时，先前的独立书签仍然有效，而分类书签没有该特性（其他文档环境恢复参见“6.3 环境恢复”）；一是减少记忆快捷键，光是独立书签就有 8 种遍历方式，每种遍历对应一种快捷键，太难记了。<br>vim-signature 快捷键如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">let</span> g:SignatureMap = &#123;</div><div class="line">        \ <span class="string">'Leader'</span> : <span class="string">"m"</span>,</div><div class="line">        \ <span class="string">'PlaceNextMark'</span> : <span class="string">"m,"</span>,</div><div class="line">        \ <span class="string">'ToggleMarkAtLine'</span> : <span class="string">"m."</span>,</div><div class="line">        \ <span class="string">'PurgeMarksAtLine'</span> : <span class="string">"m-"</span>,</div><div class="line">        \ <span class="string">'DeleteMark'</span> : <span class="string">"dm"</span>,</div><div class="line">        \ <span class="string">'PurgeMarks'</span> : <span class="string">"mda"</span>,</div><div class="line">        \ <span class="string">'PurgeMarkers'</span> : <span class="string">"m&lt;BS&gt;"</span>,</div><div class="line">        \ <span class="string">'GotoNextLineAlpha'</span> : <span class="string">"']"</span>,</div><div class="line">        \ <span class="string">'GotoPrevLineAlpha'</span> : <span class="string">"'["</span>,</div><div class="line">        \ <span class="string">'GotoNextSpotAlpha'</span> : <span class="string">"`]"</span>,</div><div class="line">        \ <span class="string">'GotoPrevSpotAlpha'</span> : <span class="string">"`["</span>,</div><div class="line">        \ <span class="string">'GotoNextLineByPos'</span> : <span class="string">"]'"</span>,</div><div class="line">        \ <span class="string">'GotoPrevLineByPos'</span> : <span class="string">"['"</span>,</div><div class="line">        \ <span class="string">'GotoNextSpotByPos'</span> : <span class="string">"mn"</span>,</div><div class="line">        \ <span class="string">'GotoPrevSpotByPos'</span> : <span class="string">"mp"</span>,</div><div class="line">        \ <span class="string">'GotoNextMarker'</span> : <span class="string">"[+"</span>,</div><div class="line">        \ <span class="string">'GotoPrevMarker'</span> : <span class="string">"[-"</span>,</div><div class="line">        \ <span class="string">'GotoNextMarkerAny'</span> : <span class="string">"]="</span>,</div><div class="line">        \ <span class="string">'GotoPrevMarkerAny'</span> : <span class="string">"[="</span>,</div><div class="line">        \ <span class="string">'ListLocalMarks'</span> : <span class="string">"ms"</span>,</div><div class="line">        \ <span class="string">'ListLocalMarkers'</span> : <span class="string">"m?"</span></div><div class="line">        \ &#125;</div></pre></td></tr></table></figure></p>
<p>够多了吧，粗体部分是按个人习惯重新定义的快捷键，请添加进 .vimrc 中。<br>常用的操作也就如下几类：<br>书签设定。mx，设定/取消当前行名为 x 的标签；m,，自动设定下一个可用书签名，前面提说，独立书签名是不能重复的，在你已经有了多个独立书签，当想再设置书签时，需要记住已经设定的所有书签名，否则很可能会将已有的书签冲掉，这可不好，所以，vim-signature 为你提供了 m, 快捷键，自动帮你选定下一个可用独立书签名；mda，删除当前文件中所有独立书签。<br>书签罗列。m?，罗列出当前文件中所有书签，选中后回车可直接跳转；<br>书签跳转。mn，按行号前后顺序，跳转至下个独立书签；mp，按行号前后顺序，跳转至前个独立书签。书签跳转方式很多，除了这里说的行号前后顺序，还可以基于书签名字母顺序跳转、分类书签同类跳转、分类书签不同类间跳转等等。<br>我虽然选用了 vim-signature，但不代表它完美了，对我而言，无法在不同文件的书签间跳转绝对算是硬伤。另外，如果觉得收藏的代码行只有行首符号来表示不够醒目，你可以考虑 BOOKMARKS–Mark-and-Highlight-Full-Lines 这个插件（<a href="https://github.com/vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines" target="_blank" rel="external">https://github.com/vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines</a> ），它可以让书签行高亮，如下是它的快捷键：，高亮所有书签行；，关闭所有书签行高亮；，清除 [a-z] 的所有书签；，收藏当前行；，取消收藏当前行。</p>
<h3 id="4-6-标识符列表"><a href="#4-6-标识符列表" class="headerlink" title="4.6 标识符列表"></a>4.6 标识符列表</h3><p>本节之前的内容，虽说与代码开发有些关系，但最多也只能算作用户体验层面的，真正提升生产效率的内容将从此开始。<br>本文主题是探讨如何将 vim 打造成高效的 C/C++ 开发环境，希望实现标识符列表、定义跳转、声明提示、实时诊断、代码补全等等系列功能，这些都需要 vim 能够很好地理解我们的代码（不论是 vim 自身还是借助插件甚至第三方工具），如何帮助 vim 理解代码？基本上，有两种主流方式：标签系统和语义系统。至于优劣，简单来说，标签系统配置简单，而语义系统效果精准，后者是趋势。目前对于高阶 IDE 功能，部分已经有对应基于语义的插件支撑，而部分仍只能通过基于标签的方式实现，若同个功能既有语义插件又有标签插件，优选语义。<br><strong>标签系统</strong><br>代码中的类、结构、类成员、函数、对象、宏等等这些统称为标识符，每个标识符的定义、所在文件中的行位置、所在文件的路径等等信息就是标签（tag）。<br>Exuberant Ctags（<a href="http://ctags.sourceforge.net/" target="_blank" rel="external">http://ctags.sourceforge.net/</a> ，后简称 ctags）就是一款经典的用于生成代码标签信息的工具 。ctags 最初只支持生成 C/C++ 语言，目前已支持 41 种语言，具体列表运行如下命令获取：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctags --list-languages</div></pre></td></tr></table></figure></p>
<p>学习知识最好方式就是动手实践。我们以 main.cpp、my_class.h、my_class.cpp 三个文件为例：<br>第一步，准备代码文件。创建演示目录 /data/workplace/example/、库子目录 /data/workplace/example/lib/，创建如下内容的 main.cpp：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lib/my_class.h"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> g_num = <span class="number">128</span>;</div><div class="line"><span class="comment">// 重载函数</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></div><div class="line"><span class="title">printMsg</span> <span class="params">(<span class="keyword">char</span> ch)</span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span></span></div><div class="line"><span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 局部对象</span></div><div class="line">    <span class="keyword">const</span> <span class="built_in">string</span>    name = <span class="string">"yangyang.gnu"</span>;</div><div class="line">    <span class="comment">// 类</span></div><div class="line">    MyClass    one;</div><div class="line">    <span class="comment">// 成员函数</span></div><div class="line">    one.printMsg();</div><div class="line">    <span class="comment">// 使用局部对象</span></div><div class="line">    <span class="built_in">cout</span> &lt;&lt; g_num &lt;&lt; name &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span>    (EXIT_SUCCESS);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>创建如下内容的 my_class.h：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span>:</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">printMsg</span><span class="params">(<span class="keyword">void</span>)</span></span>;      </div><div class="line">    <span class="keyword">private</span>:</div><div class="line">        ;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>创建如下内容的 my_class.cpp：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"my_class.h"</span></span></div><div class="line"><span class="comment">// 重载函数</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span></span></div><div class="line"><span class="title">printMsg</span> <span class="params">(<span class="keyword">int</span> i)</span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">void</span></div><div class="line">MyClass::printMsg (<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"I'M MyClass!"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>第二步，生成标签文件。现在运行 ctags 生成标签文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /data/workplace/example/</div><div class="line">ctags -R --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+liaS --extra=+q --language-force=c++</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：如果在mac上不能运行上述代码可以参考<a href="https://gist.github.com/nazgob/1570678" target="_blank" rel="external">https://gist.github.com/nazgob/1570678</a></p>
</blockquote>
<p>命令行参数较多，主要关注 –c++-kinds，ctags 默认并不会提取所有标签，运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctags --list-kinds=c++</div></pre></td></tr></table></figure></p>
<p>可看到 ctags 支持生成标签类型的全量列表：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">c classes</div><div class="line">d macro definitions</div><div class="line">e enumerators (values inside an enumeration)</div><div class="line">f <span class="keyword">function</span> definitions</div><div class="line">g enumeration names</div><div class="line">l <span class="built_in">local</span> variables [off]</div><div class="line">m class, struct, and union members</div><div class="line">n namespaces</div><div class="line">p <span class="keyword">function</span> prototypes [off]</div><div class="line">s structure names</div><div class="line">t typedefs</div><div class="line">u union names</div><div class="line">v variable definitions</div><div class="line">x external and forward variable declarations [off]</div></pre></td></tr></table></figure></p>
<p>其中，标为 off 的局部对象、函数声明、外部对象等类型默认不会生成标签，所以我显式加上所有类型。运行完后，example/ 下多了个文件 tags.里面的内容，! 开头的几行是 ctags 生成的软件信息忽略之，下面的就是我们需要的标签，每个标签项至少有如下字段（命令行参数不同标签项的字段数不同）：标识符名、标识符所在的文件名（也是该文件的相对路径）、标识符所在行的内容、标识符类型（如，l 表示局部对象），另外，若是函数，则有函数签名字段，若是成员函数，则有访问属型字段等等。<br><strong>语义系统</strong><br>通过 ctags 这类标签系统在一定程度上助力 vim 理解我们的代码，对于 C 语言这类简单语言来说，差不多也够了。近几年，随着 C++11/14 的推出，诸如类型推导、lamda 表达式、模版等等新特性，标签系统显得有心无力，这个星球最了解代码的工具非编译器莫属，如果编译器能在语义这个高度帮助 vim 理解代码，那么我们需要的各项 IDE 功能肯定能达到另一个高度。<br>语义系统，编译器必不可少。GCC 和 clang 两大主流 C/C++ 编译器，作为语义系统的支撑工具，我选择后者，除了 clang 对新标准支持及时、错误诊断信息清晰这些优点之外，更重要的是，它在高内聚、低耦合方面做得非常好，各类插件可以调用 libclang 获取非常完整的代码分析结果，从而轻松且优雅地实现高阶 IDE 功能。你对语义系统肯定还是比较懵懂，紧接着的“基于语义的声明/定义跳转”会让你有更为直观的了解，现在，请跳转至“7.1 编译器/构建工具集成”，一是了解 clang 相较 GCC 的优势，二是安装好最新版 clang 及其标准库，之后再回来。</p>
<p><strong>基于标签的标识符列表</strong><br>在阅读代码时，经常分析指定函数实现细节，我希望有个插件能把从当前代码文件中提取出的所有标识符放在一个侧边子窗口中，并且能能按语法规则将标识符进行归类，tagbar （<a href="https://github.com/majutsushi/tagbar" target="_blank" rel="external">https://github.com/majutsushi/tagbar</a> ）是一款基于标签的标识符列表插件，它自动周期性调用 ctags 获取标签信息（仅保留在内存，不落地成文件）。安装完 tagbar 后，在 .vimrc 中增加如下信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 设置 tagbar 子窗口的位置出现在主编辑区的左边</span></div><div class="line">let tagbar_left=1</div><div class="line">" 设置显示／隐藏标签列表子窗口的快捷键。速记：identifier list by tag</div><div class="line">nnoremap &lt;Leader&gt;ilt :TagbarToggle&lt;CR&gt;</div><div class="line"><span class="string">" 设置标签子窗口的宽度</span></div><div class="line">let tagbar_width=32</div><div class="line">" tagbar 子窗口中不显示冗余帮助信息</div><div class="line"><span class="built_in">let</span> g:tagbar_compact=1</div><div class="line"><span class="string">" 设置 ctags 对哪些代码标识符生成标签</span></div><div class="line">let g:tagbar_type_cpp = &#123;</div><div class="line">    \ 'kinds' : [</div><div class="line">         \ 'c:classes:0:1',</div><div class="line">         \ 'd:macros:0:1',</div><div class="line">         \ 'e:enumerators:0:0',</div><div class="line">         \ 'f:functions:0:1',</div><div class="line">         \ 'g:enumeration:0:1',</div><div class="line">         \ 'l:local:0:1',</div><div class="line">         \ 'm:members:0:1',</div><div class="line">         \ 'n:namespaces:0:1',</div><div class="line">         \ 'p:functions_prototypes:0:1',</div><div class="line">         \ 's:structs:0:1',</div><div class="line">         \ 't:typedefs:0:1',</div><div class="line">         \ 'u:unions:0:1',</div><div class="line">         \ 'v:global:0:1',</div><div class="line">         \ 'x:external:0:1'</div><div class="line">     \ ],</div><div class="line">     \ 'sro' : '::',</div><div class="line">     \ 'kind2scope' : &#123;</div><div class="line">         \ 'g' : 'enum',</div><div class="line">         \ 'n' : 'namespace',</div><div class="line">         \ 'c' : 'class',</div><div class="line">         \ 's' : 'struct',</div><div class="line">         \ 'u' : 'union'</div><div class="line">     \ &#125;,</div><div class="line">     \ 'scope2kind' : &#123;</div><div class="line">         \ 'enum' : 'g',</div><div class="line">         \ 'namespace' : 'n',</div><div class="line">         \ 'class' : 'c',</div><div class="line">         \ 'struct' : 's',</div><div class="line">         \ 'union' : 'u'</div><div class="line">     \ &#125;</div><div class="line">\ &#125;</div></pre></td></tr></table></figure></p>
<p>前面提过，ctags 默认并不会提取局部对象、函数声明、外部对象等类型的标签，我必须让 tagbar 告诉 ctags 改变默认参数，这是 tagbar_type_cpp 变量存在的主要目的，所以前面的配置信息中将局部对象、函数声明、外部对象等显式将其加进该变量的 kinds 域中。具体格式为:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;short&#125;:&#123;long&#125;[:&#123;fold&#125;[:&#123;stl&#125;]]</div></pre></td></tr></table></figure></p>
<p>用于描述函数、变量、结构体等等不同类型的标识符，每种类型对应一行。其中，short 将作为 ctags 的 –c++-kinds 命令行选项的参数，类似：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v</div></pre></td></tr></table></figure></p>
<p>long 将作为 short 的简要描述展示在 vim 的 tagbar 子窗口中；fold 表示这种类型的标识符是否折叠显示；stl 指定是否在 vim 状态栏中显示附加信息。<br>重启 vim 后，打开一个 C/C++ 源码文件，键入 ilt，将在左侧的 tagbar 窗口中将可看到标签列表：<br> tagbar 的几个特点： <em> 按作用域归类不同标签。按名字空间 n_foo、类 Foo 进行归类，在内部有声明、有定义； </em> 显示标签类型。名字空间、类、函数等等； <em> 显示完整函数原型； </em> 图形化显示共有成员（+）、私有成员（-）、保护成员（#）；<br>在标识符列表中选中对应标识符后回车即可跳至源码中对应位置；在源码中停顿几秒，tagbar 将高亮对应标识符；每次保存文件时或者切换到不同代码文件时 tagbar 自动调用 ctags 更是标签数据库；tagbar 有两种排序方式，一是按标签名字母先后顺序、一是按标签在源码中出现的先后顺序，在 .vimrc 中我配置选用后者，键入 s 切换不同不同排序方式。</p>
<h3 id="4-7-声明-定义跳转"><a href="#4-7-声明-定义跳转" class="headerlink" title="4.7 声明/定义跳转"></a>4.7 声明/定义跳转</h3><p>假设你正在分析某个开源项目源码，在 main.cpp 中遇到调用函数 func()，想要查看它如何实现，一种方式：在 main.cpp 中查找 -&gt; 若没有在工程内查找 -&gt; 找到后打开对应文件 -&gt; 文件内查找其所在行 -&gt; 移动光标到该行 -&gt; 分析完后切换会先前文件，不仅效率太低更要命的是影响我的思维连续性。我需要另外高效的方式，就像真正函数调用一样：光标选中调用处的 func() -&gt; 键入某个快捷键自动转换到 func() 实现处 -&gt; 键入某个键又回到 func() 调用处，这就是所谓的定义跳转。<br>基本上，vim 世界存在两类导航：基于标签的跳转和基于语义的跳转。<br><strong>基于标签的声明/定义跳转</strong><br>继续延用前面接收标签系统的例子文件 main.cpp、my_class.h、my_class.cpp，第二步已经生成好了标签文件，那么要实现声明/定义跳转，需要第三步，引入标签文件。这让 vim 知晓标签文件的路径。在 /data/workplace/example/ 目录下用 vim 打开 main.cpp，在 vim 中执行如下目录引入标签文件 tags：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="built_in">set</span> tags+=/data/workplace/example/tags</div></pre></td></tr></table></figure></p>
<p>既然 vim 有个专门的命令来引入标签，说明 vim 能识别标签。虽然标签文件中并无行号，但已经有标签所在文件，以及标签所在行的完整内容，vim 只需切换至对应文件，再在文件内作内容查找即可找到对应行。换言之，只要有对应的标签文件，vim 就能根据标签跳转至标签定义处。<br>这时，你可以体验下初级的声明/定义跳转功能。把光标移到 main.cpp 的 one.printMsg() 那行的 printMsg 上，键入快捷键 g]，vim 将罗列出名为 printMsg 的所有标签候选列表，按需选择键入编号即可跳转进入。</p>
<p>目前为止，离我预期还有差距。<br>第一，选择候选列表影响思维连续性。首先得明白为何会出现待选列表。前面说过，vim 做的事情很简单，就是把光标所在单词放到标签文件中查找，如果只有一个，当然你可以直接跳转过去，大部分时候会找到多项匹配标签，比如，函数声明、函数定义、函数调用、函数重载等等都会导致同个函数名出现在多个标签中，vim 无法知道你要查看哪项，只能让你自己选择。其实，因为标签文件中已经包含了函数签名属性，vim 的查找机制如果不是基于关键字，而是基于语义的话，那也可以直接命中，期待后续 vim 有此功能吧。既然无法直接解决，换个思路，我不想选择列表，但可以接受遍历匹配标签。就是说，我不想输入数字选择第几项，但可以接受键入正向快捷键后遍历第一个匹配标签，再次键入快捷键遍历第二个，直到最后一个，键入反向快捷键逆序遍历。这下事情简单了，命令 :tnext 和 :tprevious 分别先后和向前遍历匹配标签，定义两个快捷键搞定：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 正向遍历同名标签</span></div><div class="line">nmap &lt;Leader&gt;tn :tnext&lt;CR&gt;</div><div class="line">" 反向遍历同名标签</div><div class="line">nmap &lt;Leader&gt;tp :tprevious&lt;CR&gt;</div></pre></td></tr></table></figure></p>
<p>等等，这还不行，vim 中有个叫标签栈（tags stack）的机制，:tnext、:tprevious 只能遍历已经压入标签栈内的标签，所以，你在遍历前需要通过快捷键 ctrl-] 将光标所在单词匹配的所有标签压入标签栈中，然后才能遍历。不说复杂了，以后你只需先键入 ctrl-]，若没跳转至需要的标签，再键入 tn 往后或者 tp 往前遍历即可。<br>第二，如何返回先前位置。当分析完函数实现后，我需要返回先前调用处，可以键入 vim 快捷键 ctrl-t 返回，如果想再次进入，可以用前面介绍的方式，或者键入 ctrl-i。另外，注意，ctrl-o 以是一种返回快捷键，但与 ctrl-t 的返回不同，前者是返回上次光标停留行、后者返回上个标签。<br>第三，如何自动生成标签并引入。开发时代码不停在变更，每次还要手动执行 ctags 命令生成新的标签文件，太麻烦了，得想个法周期性针对这个工程自动生成标签文件，并通知 vim 引人该标签文件，嘿，还真有这样的插件 —— indexer（<a href="https://github.com/vim-scripts/indexer.tar.gz" target="_blank" rel="external">https://github.com/vim-scripts/indexer.tar.gz</a> ）。indexer 依赖 DfrankUtil（<a href="https://github.com/vim-scripts/DfrankUtil" target="_blank" rel="external">https://github.com/vim-scripts/DfrankUtil</a> ）、vimprj（<a href="https://github.com/vim-scripts/vimprj" target="_blank" rel="external">https://github.com/vim-scripts/vimprj</a> ）两个插件，请一并安装。请在 .vimrc 中增加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">" 设置插件 indexer 调用 ctags 的参数</span></div><div class="line">" 默认 --c++-kinds=+p+l，重新设置为 --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v</div><div class="line"><span class="string">" 默认 --fields=+iaS 不满足 YCM 要求，需改为 --fields=+iaSl</span></div><div class="line">let g:indexer_ctagsCommandLineOptions="--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+iaSl --extra=+q<span class="string">"</span></div></pre></td></tr></table></figure></p>
<p>另外，indexer 还有个自己的配置文件，用于设定各个工程的根目录路径，配置文件位于 ~/.indexer_files，内容可以设定为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--------------- ~/.indexer_files ---------------  </div><div class="line">[foo]</div><div class="line">/data/workplace/foo/src/</div><div class="line">[bar]</div><div class="line">/data/workplace/bar/src/</div></pre></td></tr></table></figure></p>
<p>上例设定了两个工程的根目录，方括号内是对应工程名，路径为工程的代码目录，不要包含构建目录、文档目录，以避免将产生非代码文件的标签信息。这样，从以上目录打开任何代码文件时，indexer 便对整个目录创建标签文件，若代码文件有更新，那么在文件保存时，indexer 将自动调用 ctags 更新标签文件，indexer 生成的标签文件以工程名命名，位于 ~/.indexer_files_tags/，并自动引入进 vim 中，那么<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="built_in">set</span> tags+=/data/workplace/example/tags</div></pre></td></tr></table></figure></p>
<p>一步也省了。好了，解决了这三个问题后，vim 的代码导航基本已经达到我的预期。</p>
<blockquote>
<p>下面依旧有很多内容，但比较深，不太适合初学者，所以不再继续写了，有兴趣可参考前面的GitHub链接，最后推荐一本vim相关的书籍，《vim实用技巧》</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;所需即所获：像 IDE 一样使用 vim, 参考&lt;a href=&quot;https://github.com/yangyangwithgnu/use_vim_as_ide#01-vimrc-文件&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
    
      <category term="vim" scheme="http://kingle.online/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>python进阶与强化note2</title>
    <link href="http://kingle.online/2017/03/22/python%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%BC%BA%E5%8C%96note2/"/>
    <id>http://kingle.online/2017/03/22/python进阶与强化note2/</id>
    <published>2017-03-22T15:19:37.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="note2"><a href="#note2" class="headerlink" title="note2"></a>note2</h1><h2 id="如何实现可迭代对象和迭代器对象"><a href="#如何实现可迭代对象和迭代器对象" class="headerlink" title="如何实现可迭代对象和迭代器对象"></a>如何实现可迭代对象和迭代器对象</h2><p>应用场景:</p>
<ul>
<li>延时访问(用时访问)</li>
<li>封装成一个对象</li>
<li>for 循环逐条显示<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable, Iterator</div><div class="line"></div><div class="line"><span class="comment"># 继承迭代器对象，并重写__next__方法(next，对于pyton2) </span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherIterator</span><span class="params">(Iterator)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cities)</span>:</span></div><div class="line">        self.cities = cities</div><div class="line">        self.index = <span class="number">0</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getWeather</span><span class="params">(self, city)</span>:</span></div><div class="line">        r = requests.get(<span class="string">u'http://wthrcdn.etouch.cn/weather_mini?city='</span> + city)</div><div class="line">        data = r.json()[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>]</div><div class="line">        <span class="keyword">return</span> <span class="string">'%s: %s, %s'</span> % (city, data[<span class="string">'low'</span>], data[<span class="string">'high'</span>])</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.index == len(self.cities):</div><div class="line">            <span class="keyword">raise</span> StopIteration</div><div class="line">        city = self.cities[self.index]</div><div class="line">        self.index += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> self.getWeather(city)</div><div class="line"></div><div class="line"><span class="comment"># 继承可迭代对象, 并重写__iter__</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherIterable</span><span class="params">(Iterable)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cities)</span>:</span></div><div class="line">        self.cities = cities</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> WeatherIterator(self.cities)</div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> WeatherIterable([<span class="string">u'北京'</span>, <span class="string">u'上海'</span>, <span class="string">u'广州'</span>, <span class="string">u'长春'</span>]):</div><div class="line">    print(x)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="使用生成器函数实现可迭代对象"><a href="#使用生成器函数实现可迭代对象" class="headerlink" title="使用生成器函数实现可迭代对象"></a>使用生成器函数实现可迭代对象</h2><ul>
<li>应用场景:实现一个可迭代对象的类，它能迭代出给定范围内所有素数：</li>
</ul>
<p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimeNumbers</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, start, end)</span>:</span></div><div class="line">        self.start = start</div><div class="line">        self.end = end</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPrimeNum</span><span class="params">(self, k)</span>:</span></div><div class="line">        <span class="keyword">if</span> k &lt; <span class="number">2</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, k):</div><div class="line">            <span class="keyword">if</span> k % i == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span> :</span></div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(self.start, self.end + <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> self.isPrimeNum(k):</div><div class="line">                <span class="keyword">yield</span> k</div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> PrimeNumbers(<span class="number">1</span>, <span class="number">100</span>):</div><div class="line">    print(x)</div></pre></td></tr></table></figure></p>
<h2 id="反向迭代"><a href="#反向迭代" class="headerlink" title="反向迭代"></a>反向迭代</h2><p>可以使用：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line">l.reverse() <span class="comment"># 缺点，改变了原来的值</span></div><div class="line"></div><div class="line">l[::<span class="number">-1</span>] <span class="comment"># 浪费了空间</span></div><div class="line"></div><div class="line">reversed(l) <span class="comment"># 得到一个可迭代的对象</span></div></pre></td></tr></table></figure></p>
<p>实例<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FloatRange</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, start, end, step = <span class="number">0.1</span>)</span>:</span></div><div class="line">        self.start = start</div><div class="line">        self.end = end</div><div class="line">        self.step = step </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></div><div class="line">        t = self.start</div><div class="line">        <span class="keyword">while</span> t &lt;= self.end:</div><div class="line">            <span class="keyword">yield</span> t</div><div class="line">            t += self.step</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reversed__</span><span class="params">(self)</span>:</span></div><div class="line">        t = self.end</div><div class="line">        <span class="keyword">while</span> t &gt;= self.start:</div><div class="line">            <span class="keyword">yield</span> t</div><div class="line">            t -= self.step</div><div class="line"></div><div class="line"><span class="comment"># 正向迭代</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> FloatRange(<span class="number">1.0</span>, <span class="number">4.0</span>, <span class="number">0.5</span>):</div><div class="line">    print(x)</div><div class="line"></div><div class="line"><span class="comment"># 反向迭代 </span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> reversed(FloatRange(<span class="number">1.0</span>, <span class="number">4.0</span>, <span class="number">0.5</span>)):</div><div class="line">    print(x)</div></pre></td></tr></table></figure></p>
<h2 id="如何对迭代器做切片操作"><a href="#如何对迭代器做切片操作" class="headerlink" title="如何对迭代器做切片操作"></a>如何对迭代器做切片操作</h2><p>针对日志文件，可以使用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 缺点，如果文件过大，容易导致内存不足</span></div><div class="line">f = open(<span class="string">'/var/log/system.log'</span>)</div><div class="line">l = l.readlines()</div><div class="line">l[<span class="number">100</span>:<span class="number">300</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">    print(line)</div></pre></td></tr></table></figure></p>
<h2 id="可迭代对象"><a href="#可迭代对象" class="headerlink" title="可迭代对象"></a>可迭代对象</h2><p>islice会消耗之前申请的迭代器对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> islice</div><div class="line"></div><div class="line"><span class="comment">## 初始到500  for x in islice(f, 500)</span></div><div class="line"><span class="comment">##  100到末尾 for x in islice(f, 100, None) </span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> islice(f, <span class="number">100</span>, <span class="number">300</span>):</div><div class="line">    print(x)</div></pre></td></tr></table></figure></p>
<h2 id="如何在一个for语句中迭代迭代多个可迭代对象"><a href="#如何在一个for语句中迭代迭代多个可迭代对象" class="headerlink" title="如何在一个for语句中迭代迭代多个可迭代对象"></a>如何在一个for语句中迭代迭代多个可迭代对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 并行</span></div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line">chinese = [randint(<span class="number">60</span>, <span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">40</span>)]</div><div class="line">english = [randint(<span class="number">60</span>, <span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">40</span>)]</div><div class="line">math = [randint(<span class="number">60</span>, <span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">40</span>)]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(math)):</div><div class="line">    print(chinese[i] + math[i] + english[i])</div><div class="line"></div><div class="line"><span class="comment"># 使用内置函数zip</span></div><div class="line"><span class="keyword">for</span> c, m, e <span class="keyword">in</span> zip(chinese, math, english):</div><div class="line">    print(c + m + e)</div><div class="line"></div><div class="line"><span class="comment"># 串行</span></div><div class="line"><span class="comment"># 使用chain函数</span></div><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</div><div class="line"><span class="keyword">for</span> s <span class="keyword">in</span> chain(chinese, english, math):</div><div class="line">    <span class="keyword">if</span> s &gt; <span class="number">90</span>:</div><div class="line">        count += <span class="number">1</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;note2&quot;&gt;&lt;a href=&quot;#note2&quot; class=&quot;headerlink&quot; title=&quot;note2&quot;&gt;&lt;/a&gt;note2&lt;/h1&gt;&lt;h2 id=&quot;如何实现可迭代对象和迭代器对象&quot;&gt;&lt;a href=&quot;#如何实现可迭代对象和迭代器对象&quot; class=&quot;he
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python进阶与强化note1</title>
    <link href="http://kingle.online/2017/03/18/python%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%BC%BA%E5%8C%96note1/"/>
    <id>http://kingle.online/2017/03/18/python进阶与强化note1/</id>
    <published>2017-03-18T15:19:30.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="note1"><a href="#note1" class="headerlink" title="note1"></a>note1</h2><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h2><p><code>list</code>过滤<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#生成-10到10范围内的十个数</span></div><div class="line">data = [randint(<span class="number">-10</span>, <span class="number">10</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"></div><div class="line"><span class="comment">#过滤</span></div><div class="line">filter(<span class="keyword">lambda</span> x: x &gt;= <span class="number">0</span>, data)</div><div class="line"></div><div class="line"><span class="comment"># 列表解析过滤 更快</span></div><div class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> data <span class="keyword">if</span> x &gt;= <span class="number">0</span>]</div></pre></td></tr></table></figure></p>
<p><code>dict</code>过滤<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 生成一个1-20号，分数为60-100的成绩</span></div><div class="line">student = &#123;x: randint(<span class="number">60</span>, <span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">21</span>)&#125;</div><div class="line"></div><div class="line"><span class="comment">#迭代键和值并过滤</span></div><div class="line">&#123;k:v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items() <span class="keyword">if</span> v &gt; <span class="number">90</span>&#125;</div></pre></td></tr></table></figure></p>
<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><p><code>tuple</code>增加可读性<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">NAME, AGE, SEX, EMAIL = range(<span class="number">4</span>)</div><div class="line">student = (<span class="string">'Jim'</span>, <span class="number">16</span>, <span class="string">'male'</span>, <span class="string">'jim@qq.com'</span>)</div><div class="line"><span class="comment">#name</span></div><div class="line">print(student[NAME])</div><div class="line"></div><div class="line"><span class="comment">#age</span></div><div class="line"><span class="keyword">if</span> student[AGE] &gt;= <span class="number">18</span>:</div><div class="line">    <span class="keyword">pass</span></div><div class="line"><span class="comment">#sex</span></div><div class="line"><span class="keyword">if</span> student[SEX] == <span class="string">'male'</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p>
<p><code>使用namedtuple</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</div><div class="line">Student = namedtuple(<span class="string">'Student'</span>, [<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'sex'</span>, <span class="string">'email'</span>])</div><div class="line">s = Student(name=<span class="string">'Jim'</span>, age=<span class="number">16</span>, sex=<span class="string">'male'</span>, email=<span class="string">'jim@qq.com'</span>)</div><div class="line">s.age</div></pre></td></tr></table></figure></p>
<h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><p><code>统计数字出现的次数</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line">data = [randint(<span class="number">0</span>, <span class="number">20</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30</span>)]</div><div class="line"><span class="comment"># 生成起始值为0的字典</span></div><div class="line">c = dict.fromkeys(data, <span class="number">0</span>)</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> data:</div><div class="line">    c[x] += <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p><code>使用内置函数</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"><span class="comment"># 统计数组出现次数，并生产字典c2</span></div><div class="line">c2 = Counter(data)</div><div class="line"><span class="comment">#选出出现频率最高的三个元组</span></div><div class="line">c2.most_common(<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<p><code>统计单词出现频率</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line">txt = open(<span class="string">'CodingStyle'</span>).read()</div><div class="line"><span class="comment"># 按照非字母进行分割</span></div><div class="line">data = re.split(<span class="string">'\W+'</span>, txt)</div><div class="line"><span class="comment"># 统计单词出现频次</span></div><div class="line">c3 = Counter(data)</div><div class="line">c3.most_common(<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<h2 id="字典按值排序"><a href="#字典按值排序" class="headerlink" title="字典按值排序"></a>字典按值排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="comment"># 字典解析生成</span></div><div class="line">data = &#123;x: randint(<span class="number">60</span>, <span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'xyzabc'</span>&#125;</div><div class="line"><span class="comment"># 通过zip函数连接生成一个列表，列表由一系列的元组构成</span></div><div class="line">data2 = zip(data.values(), data.keys())</div><div class="line"><span class="comment"># 排序</span></div><div class="line">sort = sorted(data2)</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sorted(d.items(), key = <span class="keyword">lambda</span> x: x[<span class="number">1</span>])</div></pre></td></tr></table></figure></p>
<h2 id="公共键"><a href="#公共键" class="headerlink" title="公共键"></a>公共键</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, sample</div><div class="line"><span class="comment"># 先取样，后生成字典</span></div><div class="line">s1 = &#123;x: randint(<span class="number">1</span>, <span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcefg'</span>, randint(<span class="number">3</span>, <span class="number">6</span>))&#125;</div><div class="line">s2 = &#123;x: randint(<span class="number">1</span>, <span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcefg'</span>, randint(<span class="number">3</span>, <span class="number">6</span>))&#125;</div><div class="line">s3 = &#123;x: randint(<span class="number">1</span>, <span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcefg'</span>, randint(<span class="number">3</span>, <span class="number">6</span>))&#125;</div><div class="line">res = []</div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> s1:</div><div class="line">    <span class="keyword">if</span> k <span class="keyword">in</span> s2 <span class="keyword">and</span> k <span class="keyword">in</span> s3:</div><div class="line">        res.append(k)</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 通过集合的方式(交集)</span></div><div class="line">res = s1.keys() &amp; s2.keys() &amp; s3.keys()</div></pre></td></tr></table></figure></p>
<p><code>使用map, reduce进行N轮操作</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reduce(<span class="keyword">lambda</span> a, b: a &amp; b, map(dict.keys, [s1, s2, s3]))</div></pre></td></tr></table></figure></p>
<h2 id="让字典保持有序"><a href="#让字典保持有序" class="headerlink" title="让字典保持有序"></a>让字典保持有序</h2><p>默认的字典是没有顺序的,但可以使用OrderedDict<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</div><div class="line">d = OrderedDict()</div><div class="line">d[<span class="string">'jim'</span>] = (<span class="number">1</span>, <span class="number">35</span>)</div><div class="line">d[<span class="string">'leo'</span>] = (<span class="number">2</span>, <span class="number">36</span>)</div><div class="line">d[<span class="string">'bob'</span>] = (<span class="number">3</span>, <span class="number">39</span>)</div></pre></td></tr></table></figure></p>
<p><code>实例</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</div><div class="line"></div><div class="line">d = OrderedDict()</div><div class="line">players = list(<span class="string">"ABCDEFGH"</span>)</div><div class="line">start = time()</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">    input()</div><div class="line">    p = players.pop(randint(<span class="number">0</span>, <span class="number">7</span> - i))</div><div class="line">    end = time()</div><div class="line">    print(i+<span class="number">1</span>, p, end - start)</div><div class="line">    d[p] = (i + <span class="number">1</span>, end - start)</div><div class="line">print(<span class="string">'*'</span> * <span class="number">20</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</div><div class="line">    print(i, d[i])</div></pre></td></tr></table></figure></p>
<h2 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">import</span> pickle</div><div class="line">N = randint(<span class="number">0</span>, <span class="number">100</span>)</div><div class="line"><span class="comment"># 构造一个队列</span></div><div class="line">history = deque([], <span class="number">5</span>)</div><div class="line"><span class="comment"># 判断当前路径中是否有history文件</span></div><div class="line"><span class="keyword">if</span> os.path.isfile(<span class="string">'history'</span>):</div><div class="line">    history = pickle.load(open(<span class="string">'history'</span>, <span class="string">'rb'</span>))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">(k)</span>:</span></div><div class="line">    <span class="keyword">if</span> k == N:</div><div class="line">        print(<span class="string">'right'</span>)</div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">if</span> k &lt; N:</div><div class="line">        print(<span class="string">'%s is less than N'</span> % k)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'%s is greater than N'</span> % k)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    line = input(<span class="string">'please input a number: '</span>)</div><div class="line">    <span class="keyword">if</span> line.isdigit():</div><div class="line">        k = int(line)</div><div class="line">        history.append(k)</div><div class="line">        <span class="keyword">if</span> guess(k):</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">elif</span> line == <span class="string">'history'</span> <span class="keyword">or</span> line == <span class="string">'h?'</span>:</div><div class="line">        print(list(history))</div><div class="line"><span class="comment"># 将history存储到本地文件中，方便下次打开历史记录仍然存在</span></div><div class="line">pickle.dump(history, open(<span class="string">'history'</span>, <span class="string">'wb'</span>))</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;note1&quot;&gt;&lt;a href=&quot;#note1&quot; class=&quot;headerlink&quot; title=&quot;note1&quot;&gt;&lt;/a&gt;note1&lt;/h2&gt;&lt;h2 id=&quot;过滤&quot;&gt;&lt;a href=&quot;#过滤&quot; class=&quot;headerlink&quot; title=&quot;过滤&quot;&gt;&lt;/a&gt;过
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python笔记-BeautifulSoup库入门</title>
    <link href="http://kingle.online/2017/03/14/Python%E7%AC%94%E8%AE%B0-BeautifulSoup%E5%BA%93%E5%85%A5%E9%97%A8/"/>
    <id>http://kingle.online/2017/03/14/Python笔记-BeautifulSoup库入门/</id>
    <published>2017-03-14T13:36:40.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Beautiful-Soup库的安装"><a href="#Beautiful-Soup库的安装" class="headerlink" title="Beautiful Soup库的安装"></a>Beautiful Soup库的安装</h2><p>Win平台: “以管理员身份运行”cmd 执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install beautifulsoup4</div></pre></td></tr></table></figure></p>
<h2 id="最简单的测试："><a href="#最简单的测试：" class="headerlink" title="最简单的测试："></a>最简单的测试：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line">r = requests.get(<span class="string">"http://www.baidu.com"</span>)</div><div class="line">demo = r.text</div><div class="line">soup = BeautifulSoup(demo, <span class="string">'html.parser'</span>)</div><div class="line">print(soup.prettify())</div></pre></td></tr></table></figure>
<h2 id="Beautiful-Soup库解析器："><a href="#Beautiful-Soup库解析器：" class="headerlink" title="Beautiful Soup库解析器："></a>Beautiful Soup库解析器：</h2><h2 id="BeautifulSoup类的基本元素"><a href="#BeautifulSoup类的基本元素" class="headerlink" title="BeautifulSoup类的基本元素"></a>BeautifulSoup类的基本元素</h2><ul>
<li>Tag标签：任何存在于HTML语法中的标签都可以用soup.<tag>访问获得 当HTML文档中存在多个相同<tag>对应内容时，soup.<tag>返回第一个</tag></tag></tag></li>
<li>Tag的name(名字)：每个<tag>都有自己的名字，通过<tag>.name获取，字符串类型</tag></tag></li>
<li>Tag的attrs(属性)：一个<tag>可以有0或多个属性，字典类型</tag></li>
<li>Tag的NavigableString：NavigableString可以跨越多个层次</li>
<li>Tag的Comment：Comment是一种特殊类型，可以读取代码中的注释</li>
</ul>
<hr>
<h2 id="标签树的下行遍历"><a href="#标签树的下行遍历" class="headerlink" title="标签树的下行遍历"></a>标签树的下行遍历</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#遍历儿子节点</span></div><div class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.children:</div><div class="line">    print(child)</div><div class="line"></div><div class="line"><span class="comment">## 遍历子孙节点</span></div><div class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.descendants:</div><div class="line">    print(child)</div></pre></td></tr></table></figure>
<h2 id="标签树的上行遍历"><a href="#标签树的上行遍历" class="headerlink" title="标签树的上行遍历"></a>标签树的上行遍历</h2><ul>
<li>.parent:节点的父亲标签</li>
<li>.parents:节点先辈标签的迭代类型，用于循环遍历先辈节点</li>
</ul>
<h2 id="标签树的平行遍历"><a href="#标签树的平行遍历" class="headerlink" title="标签树的平行遍历"></a>标签树的平行遍历</h2><h2 id="bs4库的prettify-方法"><a href="#bs4库的prettify-方法" class="headerlink" title="bs4库的prettify()方法"></a>bs4库的prettify()方法</h2><pre><code>prettify()为HTML文本&lt;&gt;及其内容增加更加&apos;\n&apos; .prettify()可用于标签，方法:&lt;tag&gt;.prettify()
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Beautiful-Soup库的安装&quot;&gt;&lt;a href=&quot;#Beautiful-Soup库的安装&quot; class=&quot;headerlink&quot; title=&quot;Beautiful Soup库的安装&quot;&gt;&lt;/a&gt;Beautiful Soup库的安装&lt;/h2&gt;&lt;p&gt;Win平台:
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="BeautifulSoup" scheme="http://kingle.online/tags/BeautifulSoup/"/>
    
  </entry>
  
  <entry>
    <title>Python笔记-Requests库网络爬取实战</title>
    <link href="http://kingle.online/2017/03/07/Python%E7%AC%94%E8%AE%B0-Requests%E5%BA%93%E7%BD%91%E7%BB%9C%E7%88%AC%E5%8F%96%E5%AE%9E%E6%88%98/"/>
    <id>http://kingle.online/2017/03/07/Python笔记-Requests库网络爬取实战/</id>
    <published>2017-03-07T13:34:48.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实例1-京东商品页面的爬取"><a href="#实例1-京东商品页面的爬取" class="headerlink" title="实例1:京东商品页面的爬取"></a>实例1:京东商品页面的爬取</h2><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">url = <span class="string">"https://item.jd.com/2967929.html"</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    r = requests.get(url)</div><div class="line">    r.raise_for_status()</div><div class="line">    r.encoding = r.apparent_encoding</div><div class="line">    print(r.text[:<span class="number">1000</span>]</div><div class="line"><span class="keyword">except</span>:</div><div class="line">print(<span class="string">"爬取失败"</span>)</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="实例2-亚马逊商品页面的爬取"><a href="#实例2-亚马逊商品页面的爬取" class="headerlink" title="实例2:亚马逊商品页面的爬取"></a>实例2:亚马逊商品页面的爬取</h2><p>因为亚马逊自带防爬虫技术，故而我们可以将爬虫假装成一个浏览器去访问，代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">url = <span class="string">"https://www.amazon.cn/gp/product/B01M8L5Z3Y"</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    kv = &#123;<span class="string">"user-agent"</span>:<span class="string">"Mozilla/5.0"</span>&#125;</div><div class="line">    r = requests.get(url, headers=kv)</div><div class="line">    r.raise_for_status()</div><div class="line">    r.encoding = r.apparent_encoding</div><div class="line">    print(r.text[<span class="number">1000</span>:<span class="number">2000</span>])</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    print(<span class="string">"爬取失败"</span>)</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="实例3-百度-360搜索关键字提交"><a href="#实例3-百度-360搜索关键字提交" class="headerlink" title="实例3:百度/360搜索关键字提交"></a>实例3:百度/360搜索关键字提交</h2><p>百度的关键词接口: <a href="http://www.baidu.com/s?wd=keyword" target="_blank" rel="external">http://www.baidu.com/s?wd=keyword</a><br>360的关键词接口: <a href="http://www.so.com/s?q=keyword" target="_blank" rel="external">http://www.so.com/s?q=keyword</a><br>代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">keyword = <span class="string">"Python"</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    kv = &#123;<span class="string">'wd'</span>: keyword&#125;</div><div class="line">    r = requests.get(<span class="string">"http://www.baidu.com/s"</span>, params = kv)</div><div class="line">    print(r.requests.url)</div><div class="line">    r.raise_for_status()</div><div class="line">    print(len(r.text))</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    print(<span class="string">"爬取失败"</span>)</div></pre></td></tr></table></figure></p>
<h2 id="实例4-网络图片的爬取和存储"><a href="#实例4-网络图片的爬取和存储" class="headerlink" title="实例4:网络图片的爬取和存储"></a>实例4:网络图片的爬取和存储</h2><p>网络图片链接的格式: <a href="http://www.example.com/picture.jpg" target="_blank" rel="external">http://www.example.com/picture.jpg</a><br>国家地理:<a href="http://www.nationalgeographic.com.cn/" target="_blank" rel="external">http://www.nationalgeographic.com.cn/</a><br>选择一个图片Web页面: <a href="http://www.nationalgeographic.com.cn/photography/photo_of_the_" target="_blank" rel="external">http://www.nationalgeographic.com.cn/photography/photo_of_the_</a> day/3921.html<br>图片地址:<a href="http://image.nationalgeographic.com.cn/2017/" target="_blank" rel="external">http://image.nationalgeographic.com.cn/2017/</a> 0211/20170211061910157.jpg<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> os</div><div class="line">url = <span class="string">"http://image.nationalgeographic.com.cn/2017/ 0211/20170211061910157.jpg"</span></div><div class="line">root = <span class="string">"D://pics//"</span></div><div class="line">path = root + url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</div><div class="line">        os.mkdir(root)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</div><div class="line">        r = requests.get(url)</div><div class="line">        <span class="keyword">with</span> open(path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(r.content)</div><div class="line">            f.close()</div><div class="line">            print(<span class="string">"文件保存成功"</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">"文件已经存在"</span>)</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    print(<span class="string">"爬取失败"</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例1-京东商品页面的爬取&quot;&gt;&lt;a href=&quot;#实例1-京东商品页面的爬取&quot; class=&quot;headerlink&quot; title=&quot;实例1:京东商品页面的爬取&quot;&gt;&lt;/a&gt;实例1:京东商品页面的爬取&lt;/h2&gt;&lt;p&gt;代码：&lt;br&gt;&lt;figure class=&quot;high
    
    </summary>
    
    
      <category term="python" scheme="http://kingle.online/tags/python/"/>
    
      <category term="Requests" scheme="http://kingle.online/tags/Requests/"/>
    
  </entry>
  
  <entry>
    <title>Emacs配置</title>
    <link href="http://kingle.online/2017/02/23/Emacs%E9%85%8D%E7%BD%AE/"/>
    <id>http://kingle.online/2017/02/23/Emacs配置/</id>
    <published>2017-02-23T13:31:20.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><ol>
<li>Overview</li>
<li>Emacs Installation</li>
<li>Emacs Basics</li>
<li>SML/NJ Installation</li>
<li>SML Mode for Emacs Installation</li>
<li>Manual SML Mode Installation for Older Emacs Versions – Probably Skip This!</li>
<li>Using the SML/NJ REPL (Read-Eval-Print Loop) in Emacs</li>
</ol>
<a id="more"></a>
<h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h2><p>For Programming Languages, Part A, we will work with the Standard ML programming language (ML), using the Standard ML of New Jersey compiler (SML/NJ). You will need SML/NJ and a text editor on your computer to do the programming assignments. Any editor that can handle plain text will work, but you will want an editor that specifically supports ML with features like automatic indentation, syntax highlighting, etc. For such an editor, we recommend Emacs because we know it works and we have detailed installation instructions in this document.</p>
<p>You are welcome to use an editor other than Emacs. If you do, the course staff is unlikely to be able to help with any issues that arise, but you may find help on the discussion forums. While Emacs does not have the look-and-feel or tool-integration of many modern integrated development environments (IDEs), it is a versatile tool well-known by many computer scientists and software developers. If you have not used it before, you will find the menus and key bindings unusual, but learning unusual tools is commonplace in computing. Many students have used Emacs for the first time when completing this course without it being a hindrance – we do not need any complicated features and we are writing small enough programs that you do not need to be a “power-user” with any of the tools we are using. All that said, there are plenty of people who despise Emacs for various reasons unrelated to the material in this class, so use whatever you like.</p>
<p>This document describes how to install, configure, and use Emacs, SML/NJ, and SML-Mode-for-emacs (henceforth SML Mode) on your computer. These instructions should work for recent versions of Windows, Mac OS X, and Linux.</p>
<p>These instructions were last updated in June 2016. Details and version numbers may change in the future.</p>
<p>Programming Languages Part B will use Racket and Programming Languages Part C will use Ruby. So there will be more software-installation in your future with instructions provided when we get there, but the instructions in this document are everything you need for Part A.</p>
<h2 id="2-Emacs-Installation"><a href="#2-Emacs-Installation" class="headerlink" title="2. Emacs Installation"></a>2. Emacs Installation</h2><p>We strongly recommend Emacs version 24.X (for any X) so that you can use the most recent version of SML Mode. Earlier versions of SML Mode are fine, but they are more difficult to install. You can check the version of an Emacs installation in several ways, including the About Emacs option under the Help menu. Installing version 24 is easy, so we recommend doing so even if you already have an older version.</p>
<p>Directions depend on your operating system:</p>
<p><strong>Windows:</strong></p>
<p>Download a zip archive of the most recent full version, currently Version 24.5, available at <a href="http://ftp.gnu.org/gnu/emacs/windows/emacs-24.5-bin-i686-mingw32.zip" target="_blank" rel="external">http://ftp.gnu.org/gnu/emacs/windows/emacs-24.5-bin-i686-mingw32.zip</a>. (More information and other versions of Emacs are available at the GNU Emacs website, <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">http://www.gnu.org/software/emacs/</a>.)</p>
<p>Unpack the downloaded zip archive file 𝚎𝚖𝚊𝚌𝚜-𝟸𝟺.𝟻-𝚋𝚒𝚗-𝚒𝟼𝟾𝟼-𝚖𝚒𝚗𝚐𝚠𝟹𝟸.𝚣𝚒𝚙 by right-clicking it and choosing Extract All. This should produce a folder called 𝚎𝚖𝚊𝚌𝚜-𝟸𝟺.𝟻-𝚋𝚒𝚗-𝚒𝟼𝟾𝟼-𝚖𝚒𝚗𝚐𝚠𝟹𝟸. Move this folder wherever you want, but pick a permanent place (i.e., do not move it again after the next step).</p>
<p>Once you have moved the folder to where you want, look inside to find 𝚋𝚒𝚗\𝚊𝚍𝚍𝚙𝚖.𝚎𝚡𝚎 (the .𝚎𝚡𝚎 extension might not be visible in the folder window depending on how you have Windows configured). Double click on this file to run it one time and it should add a Gnu Emacs folder to your Start menu and do some other setup operations. Open the Start menu and select Gnu Emacs then Emacs (or just type emacs in the search box) to launch Emacs.</p>
<p><strong>Mac OS:</strong></p>
<p>Download Emacs as a Mac OS X application from <a href="http://emacsformacosx.com/" target="_blank" rel="external">http://emacsformacosx.com/</a>. Open the disk image file (.dmg) and drag the Emacs application to your Applications folder. If you prefer another version of Emacs, such as the more primitive one on the command line or Aquamacs (<a href="http://aquamacs.org/" target="_blank" rel="external">http://aquamacs.org/</a>), you can use it, but make sure it is based on a version of Emacs 24.X or higher.</p>
<p><strong>Linux:</strong></p>
<p>A suitable version of Emacs is probably already installed. If not, use your package manager to install it. On Ubuntu and other Debian derivatives, try 𝚜𝚞𝚍𝚘 𝚊𝚙𝚝-𝚐𝚎𝚝 𝚒𝚗𝚜𝚝𝚊𝚕𝚕 𝚎𝚖𝚊𝚌𝚜. On Fedora, try 𝚜𝚞𝚍𝚘 𝚢𝚞𝚖 𝚒𝚗𝚜𝚝𝚊𝚕𝚕 𝚎𝚖𝚊𝚌𝚜.</p>
<h2 id="3-Emacs-Basics"><a href="#3-Emacs-Basics" class="headerlink" title="3. Emacs Basics"></a>3. Emacs Basics</h2><p>Using Emacs feels a little different than using other editors; it can take some getting used to, especially the keyboard shortcuts. Fortunately, Emacs has buttons and menus to help you adjust if that is your style. The following is a short primer on Emacs terminology and keyboard commands.</p>
<p>Beyond the basics described here, which should be all you need, there are countless free resources available. An introductory “tour” is at <a href="http://www.gnu.org/software/emacs/tour/" target="_blank" rel="external">http://www.gnu.org/software/emacs/tour/</a>. For more information, see the Emacs Reference Manual at \<br><a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/index.html" target="_blank" rel="external">http://www.gnu.org/software/emacs/manual/html_node/emacs/index.html</a> (also available within Emacs from the Help Menu), the Emacs Wiki at <a href="http://www.emacswiki.org/" target="_blank" rel="external">http://www.emacswiki.org/</a>, or the Emacs Tutorial (within Emacs from the Help Menu).</p>
<ul>
<li>The cursor is a rectangular block and is referred to as the point.</li>
<li>The mode line displays information about the buffer displayed in the current window. A buffer is a logical “thing” that you are working on. When you open a file, it will be loaded into a buffer, typically with the same name as the file.</li>
<li>Every buffer is edited in a mode. The most basic mode is Fundamental, which provides only the most basic Emacs editing features. There are modes for many different programming languages.<br>There are many “special” buffers that do not correspond to loaded files. The one above is called <em>scratch</em>. This buffer runs in Lisp Interaction mode, which means that you can interactively type and evaluate expressions in the Lisp programming language. But we won’t do that.</li>
</ul>
<p>Emacs uses many key combinations involving the Control and Meta keys. Such key combinations are denoted C-x (Control-x (lowercase)) or M-x (Meta-x). On keyboards that don’t have Meta (just about all keyboards today), Alt should work on all systems, but on some Mac systems you might use the funny-symbol-with-four-circles or Option keys instead. (Emacs might complain about “Super” if you get the wrong one. If you or Emacs gets confused about what you are trying to type, use C-g to cancel your current command and start fresh.) If none of these work, use Esc, but when trying to type M-x, for example, you might need to type Esc then type x. (This is only if using Esc as Meta. The other Meta “substitutes” work as usual: hold while pressing the second key.)</p>
<p>The most important commands in Emacs:</p>
<ul>
<li>C-x C-c: Quit Emacs</li>
<li>C-g: Cancel the current action</li>
<li>C-x C-f: Open a file (whether or not it already exists)</li>
<li>C-x C-s: Save a file</li>
<li>C-x C-w: Write a file (probably more familiar to you as Save as…)</li>
</ul>
<p>Cut, copy, paste:</p>
<ul>
<li>Highlight text with the mouse or by hitting C-Space to set a mark and then moving the cursor to highlight a region.</li>
<li>C-w: Cut a highlighted region</li>
<li>M-w: Copy a highlighted region</li>
<li>C-k: Cut (kill) from the cursor to the end of the line</li>
<li>C-y: Paste (yank)</li>
</ul>
<p>Some other useful commands:</p>
<ul>
<li>C-x 2: Split the window into 2 buffers, one above the other (Use the mouse or C-x o to switch between them)</li>
<li>C-x 0: Undo window-splitting so there is only 1 buffer</li>
<li>C-x b: Switch to another buffer by entering its name</li>
<li>C-x C-b: See a list of all current buffers</li>
</ul>
<p>Getting help within Emacs: In addition to the help button/menu on the right…</p>
<ul>
<li>C-h: Hitting this will display a short message in the minibuffer: 𝙲-𝚑 (𝚃𝚢𝚙𝚎 ? 𝚏𝚘𝚛 𝚏𝚞𝚛𝚝𝚑𝚎𝚛 𝚘𝚙𝚝𝚒𝚘𝚗𝚜).</li>
<li>C-h b: Key bindings. This lists all key bindings that are valid for the current mode. Note that key bindings change from mode to mode.</li>
<li>C-h a: Command apropos. After typing 𝙲-𝚑 a you can type a symbol and a buffer will appear that lists all symbols and functions that match that phrase.</li>
</ul>
<p>More advanced Emacs hacks (optional):</p>
<p>If you are curious, try some of these once you have finished the rest of the setup instructions. They are unnecessary for any of the work we will do, but may be convenient.</p>
<ul>
<li>Change the colors of your syntax highlighting. In version 24 of Emacs, 𝙼-𝚡 𝚌𝚞𝚜𝚝𝚘𝚖𝚒𝚣𝚎-𝚝𝚑𝚎𝚖𝚎𝚜 is a good place to start.</li>
<li>General customization interface: Open the Options menu and choose the first item under Customize Emacs. This will let you customize Emacs through a sort-of-graphical interface. It saves all your settings in a file in your “home” directory, ~/.𝚎𝚖𝚊𝚌𝚜.</li>
<li>Much, much, much more: Emacs calls itself an extensible editor for a reason.</li>
</ul>
<h2 id="4-SML-NJ-Installation"><a href="#4-SML-NJ-Installation" class="headerlink" title="4. SML/NJ Installation"></a>4. SML/NJ Installation</h2><p>Directions first vary by operating system, but then see “All Systems: Check your SML Installation” below.</p>
<p>Note: The latest version of SML/NJ is 110.80 and that is the version used in these installation instructions. The course videos use SML/NJ 110.75. There are no language differences between the two versions (and 110.74 and earlier are fine too), so if you already have SML/NJ 110.75 or earlier installed, that is fine. The installation instructions for Mac OS X 10.6 or later changed slightly between versions, affecting the directories where files are installed.</p>
<p><strong>Windows:</strong></p>
<p>Download and run the 𝚜𝚖𝚕𝚗𝚓.𝚖𝚜𝚒 installer available at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>. This will add an item for SML of New Jersey to your Start menu and add a command 𝚜𝚖𝚕 that you can use at the command line.</p>
<p><strong>Mac OS:</strong></p>
<p>The instructions here assume your operating system is Mac OS X 10.6 (which released in August 2009) or higher. See below if you have an older operating system.</p>
<p>Download and run the 𝚜𝚖𝚕𝚗𝚓-𝚡𝟾𝟼-𝟷𝟷𝟶.𝟾𝟶.𝚙𝚔𝚐 installer available at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>. Do not use the .𝚍𝚖𝚐 file available; that is for older computers. We recommend you not choose a “custom install location” though you can if you adjust the instructions that follow appropriately. If you have Mac OS Sierra, you likely need 110.80 and not an older version.</p>
<p>Once the installation is complete, use Emacs or another text editor to edit the file .𝚋𝚊𝚜𝚑<em>𝚙𝚛𝚘𝚏𝚒𝚕𝚎 in your home folder. (In Emacs you can do this via: 𝙲-𝚡 𝙲-𝚏 ~/.𝚋𝚊𝚜𝚑</em>𝚙𝚛𝚘𝚏𝚒𝚕𝚎, notice the three characters “tilde, slash, dot.”) If the file does not already exist, create it. Add this line to the file:</p>
<p>[Math Processing Error]<code>export PATH=&quot;$PATH:/usr/local/smlnj/bin&quot;
[Math Processing Error]</code></p>
<p>This tells your shell (the program that you interact with in the terminal) to add the SML/NJ directory to the paths it searches to find programs. (If you are not using the bash shell, which Mac OS X has used by default since 10.3, the syntax will be different.)</p>
<p>Finally, you will need to run your .𝚋𝚊𝚜𝚑_𝚙𝚛𝚘𝚏𝚒𝚕𝚎 to deploy the changes you have made into your environment for the present session. To do this, run:</p>
<p>[Math Processing Error]source.bashprofi≤</p>
<p>You need to do this only once. Afterwards, each new terminal that you open will automatically run .𝚋𝚊𝚜𝚑_𝚙𝚛𝚘𝚏𝚒𝚕𝚎 for you.</p>
<p>Now skip to “All Systems: Check your SML Installation” – the rest of this section is for Mac users with an operating system older than OS X 10.6.</p>
<p><strong>If your operating system is Mac OS X 10.5:</strong></p>
<ul>
<li>If you have an Intel chip (which is the case if your computer was new in 2007 or later, or possibly in 2006), then you will need to follow the Unix instructions at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>.</li>
<li>If you have a PowerPC chip (which is the case if your computer was new in 2005 or earlier, or possibly in 2006), then you can use the 𝚜𝚖𝚕𝚗𝚓-𝚙𝚙𝚌-𝟷𝟷𝟶.𝟾𝟶.𝚍𝚖𝚐 installer at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>. Follow the instructions above for Mac OS 10.6 or higher except (a) using the different installer and (b) making the contents of your .𝚋𝚊𝚜𝚑_𝚙𝚛𝚘𝚏𝚒𝚕𝚎 file include the line:</li>
</ul>
<p>[Math Processing Error]<code>export PATH=&quot;$PATH:/usr/local/smlnj-110.80/bin&quot;
[Math Processing Error]</code></p>
<p>If your operating system is Mac OS X 10.4 or earlier: You will need to follow the Unix instructions at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>.</p>
<p><strong>Linux:</strong></p>
<p>If your package manager has a package for SML/NJ, install it. If it installs an older version such as SML/NJ 110.72, that should be fine. Otherwise, follow the Unix instructions at <a href="http://www.smlnj.org/dist/working/110.80/" target="_blank" rel="external">http://www.smlnj.org/dist/working/110.80/</a>.</p>
<p><strong>All Systems: Check your SML Installation</strong></p>
<ol>
<li>Open a terminal window and type 𝚜𝚖𝚕 followed by Enter/Return. To open a terminal window:</li>
</ol>
<ul>
<li>Windows: Start then All Programs then Accessories then Command Prompt, or Windows 7/8/10 just use the Start Menu to search for the 𝚌𝚖𝚍.𝚎𝚡𝚎 program and run it.</li>
<li>Mac OS: Open Applications/Utilities/Terminal.app.</li>
<li>Linux: Various ways: any shell should be fine.</li>
</ul>
<ol>
<li>You should see a prompt that looks like this:</li>
</ol>
<p>[Math Processing Error]<code>Standard ML of New Jersey v110.80 [built: ...]
[Math Processing Error]</code></p>
<p>If you do not, then see below.</p>
<ol>
<li>Make sure everything is working by typing a very simple SML program at the prompt (notice the semicolon):</li>
</ol>
<p>[Math Processing Error]<code>1 + 1;
[Math Processing Error]</code></p>
<ol>
<li>Hit Enter/Return. In response, the SML interpreter should print:</li>
</ol>
<p>[Math Processing Error]<code>val it = 2 : int
[Math Processing Error]</code></p>
<ol>
<li>To exit the interpreter, type Control-Z and then Return on Windows and Control-D on Mac or Linux.</li>
</ol>
<p>If everything worked, skip to the next section. Else if the 𝚜𝚖𝚕 command caused an error, then most likely SML/NJ is installed but is not being found in your “PATH”.</p>
<p>For Windows, the PATH should have been set by the installer, but if it was not for some reason, you can set it manually as follows:</p>
<ul>
<li>Go to Start Menu, then Control Panel, then System, then Advanced System Settings, then Advanced (the tab that should be selected by default), then Environment Variables.</li>
<li>Now change the user variable 𝚙𝚊𝚝𝚑 to be everything already there followed by:</li>
</ul>
<p>[Math Processing Error]<code>C:\Program Files (x86)\SMLNJ\bin
[Math Processing Error]</code></p>
<p>For Mac OS X (or Linux), double-check that you edited your .𝚋𝚊𝚜𝚑<em>𝚙𝚛𝚘𝚏𝚒𝚕𝚎 file correctly. Depending on your user settings, you may need to make the same additions to a file that is in the same directory as .𝚋𝚊𝚜𝚑</em>𝚙𝚛𝚘𝚏𝚒𝚕𝚎 but is called .𝚋𝚊𝚜𝚑𝚛𝚌 or .𝚙𝚛𝚘𝚏𝚒𝚕𝚎 instead. (This is particularly likely if you have MacPorts installed.)</p>
<h2 id="5-SML-Mode-for-Emacs-Installation"><a href="#5-SML-Mode-for-Emacs-Installation" class="headerlink" title="5. SML Mode for Emacs Installation"></a>5. SML Mode for Emacs Installation</h2><p>SML Mode is an extension to Emacs that is not Emacs itself or SML/NJ itself. It displays SML code nicely with syntax coloring and clean indentation, and provides a way to run SML from within Emacs. (Thanks to Stefan Monnier for maintaining SML Mode. The website is \<br><a href="http://www.iro.umontreal.ca/~monnier/elisp/" target="_blank" rel="external">http://www.iro.umontreal.ca/~monnier/elisp/</a>, but you do not need to go there to install SML Mode.)</p>
<p>To install the current version of SML Mode (currently 6.7), follow these instructions from within Emacs:</p>
<ul>
<li>Run the command 𝙼-𝚡 𝚕𝚒𝚜𝚝-𝚙𝚊𝚌𝚔𝚊𝚐𝚎𝚜 (and then Return/Enter). If the 𝚕𝚒𝚜𝚝-𝚙𝚊𝚌𝚔𝚊𝚐𝚎𝚜 command does not exist, your Emacs version is too old. You can upgrade Emacs or follow more difficult SML Mode installation instructions below.</li>
<li>Find 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎 and click on it with your mouse. If that worked, then click on 𝚒𝚗𝚜𝚝𝚊𝚕𝚕 with your mouse then move to the next step. If you could not find 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎, first note that while package names are mostly alphabetized, they may be in more than one group, making it seem like 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎 is not present. Check the entire buffer. You can most easily search using 𝙲-𝚜 in Emacs. If you still do not see 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎, try killing the buffer (𝙲-𝚡 𝚔) and trying the previous step again (some users have reported having to try several times, frustratingly). If you still do not see SML Mode, then you can follow these more manual steps instead:</li>
</ul>
<ol>
<li>Visit <a href="http://elpa.gnu.org/packages/sml-mode.html" target="_blank" rel="external">http://elpa.gnu.org/packages/sml-mode.html</a> .</li>
<li>Locate, and download the latest version (currently sml-mode-6.7.el) from that page.</li>
<li>In Emacs type 𝙼-𝚡 𝚙𝚊𝚌𝚔𝚊𝚐𝚎-𝚒𝚗𝚜𝚝𝚊𝚕𝚕-𝚏𝚒𝚕𝚎 𝙴𝙽𝚃𝙴𝚁.</li>
<li>At the prompt 𝙿𝚊𝚌𝚔𝚊𝚐𝚎 𝚏𝚒𝚕𝚎 𝚗𝚊𝚖𝚎: give the path to the just downloaded 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎-𝟼.𝟽.𝚎𝚕, and type 𝙴𝙽𝚃𝙴𝚁.</li>
<li>This will split the window, and show the <em>𝙲𝚘𝚖𝚙𝚒𝚕𝚎-𝚕𝚘𝚐</em> with some lines about 𝙲𝚘𝚖𝚙𝚒𝚕𝚒𝚗𝚐 𝚏𝚒𝚕𝚎, and perhaps a warning. If there are no errors, 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎 should now be installed.</li>
</ol>
<ul>
<li>Exit and restart Emacs.</li>
<li>Read below to see if you need to follow a couple more steps (more likely under Mac and Linux).</li>
</ul>
<p>To verify that SML Mode is properly installed, let us check that it does indentation/coloring for SML files and that you can create the SML read-eval-print-loop (REPL) from within Emacs.</p>
<p>First, edit an existing or new SML file (try 𝙲-𝚡 𝙲-𝚏 𝚝𝚎𝚜𝚝.𝚜𝚖𝚕 to create a new file if nothing else is handy). You should see the mode display at the bottom of the Emacs window change from Fundamental (or whatever it was) to SML. If you enter a line of code like 𝚟𝚊𝚕 𝚗 = 𝟷; you should see colors highlighting the keywords and variable names. When you are editing code, whenever you hit the Tab key, Emacs will try to reindent the current line appropriately.</p>
<p>Second, while the cursor is in an SML buffer (i.e., you are editing an SML file), run 𝙲-𝚌 𝙲-𝚜 and press Enter/Return. This should split the window and create an SML prompt in a new buffer. In that buffer, you should be able to type 𝟷+𝟷; and then Enter/Return at the prompt and see 2 as the result.</p>
<p>If you are seeing syntax highlighting, but the 𝙲-𝚌 𝙲-𝚜 command fails with an error message, Emacs is probably having trouble finding the SML program. You can hopefully fix this as follows:</p>
<p>Mac OS: In Emacs, edit your .𝚎𝚖𝚊𝚌𝚜 file by 𝙲-𝚡 𝙲-𝚏 ~/.𝚎𝚖𝚊𝚌𝚜 (that is tilde, slash, dot, emacs) to open the file. Paste in these lines if you have Mac OS X 10.6 or later:</p>
<p>[Math Processing Error]<code>(setenv &quot;PATH&quot; (concat &quot;/usr/local/smlnj/bin:&quot; (getenv &quot;PATH&quot;)))
(setq exec-path (cons &quot;/usr/local/smlnj/bin&quot;  exec-path))
[Math Processing Error]</code></p>
<p>and these lines if you have Mac OS X 10.5:</p>
<p>[Math Processing Error]<code>(setenv &quot;PATH&quot; (concat &quot;/usr/local/smlnj-110.80/bin:&quot; (getenv &quot;PATH&quot;)))
(setq exec-path (cons &quot;/usr/local/smlnj-110.80/bin&quot;  exec-path))
[Math Processing Error]</code></p>
<p>(Adjust the lines above accordingly if you installed SML/NJ in a different directory.) Save the file (𝙲-𝚡 𝙲-𝚜). Exit and restart Emacs.</p>
<ul>
<li>Linux: Find where 𝚜𝚖𝚕𝚗𝚓-𝟷𝟷𝟶.𝟾𝟶 was installed. Then follow the Mac OS instructions above, but replacing /𝚞𝚜𝚛/𝚕𝚘𝚌𝚊𝚕 with the appropriate path.</li>
</ul>
<h2 id="6-Manual-SML-Mode-Installation-for-Older-Emacs-Versions-–-Probably-Skip-This"><a href="#6-Manual-SML-Mode-Installation-for-Older-Emacs-Versions-–-Probably-Skip-This" class="headerlink" title="6. Manual SML Mode Installation for Older Emacs Versions – Probably Skip This!"></a>6. Manual SML Mode Installation for Older Emacs Versions – Probably Skip This!</h2><p>If you are using Emacs 24.X, you should be able to skip this section. These instructions are only for people who want to use an older version of Emacs, which requires using an older version of SML Mode and following different installation instructions.</p>
<p>If you are on Linux, your package manager may include an 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎 package. For example, on Ubuntu, the command 𝚜𝚞𝚍𝚘 𝚊𝚙𝚝-𝚐𝚎𝚝 𝚒𝚗𝚜𝚝𝚊𝚕𝚕 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎 may be all you need and you might be able to skip the rest of this section. Otherwise…</p>
<p>Go to <a href="http://www.iro.umontreal.ca/~monnier/elisp/" target="_blank" rel="external">http://www.iro.umontreal.ca/~monnier/elisp/</a> and download version 5.0 (see link “Download 5.0” or just download directly (<a href="http://www.iro.umontreal.ca/~monnier/elisp/sml-mode-5.0.tar.gz" target="_blank" rel="external">http://www.iro.umontreal.ca/~monnier/elisp/sml-mode-5.0.tar.gz</a>). Unpack it:</p>
<ul>
<li>Windows: You need some program that can handle a .𝚝𝚊𝚛.𝚐𝚣 file. The Cygwin tools (<a href="http://www.cygwin.com" target="_blank" rel="external">http://www.cygwin.com</a>) suffice, or an easier-to-use program is 7-Zip (<a href="http://www.7-zip.org/" target="_blank" rel="external">http://www.7-zip.org/</a>). For 7-zip, install it. Then right-click the .𝚝𝚊𝚛.𝚐𝚣 file and choose 7-Zip then Extract Here. If this creates a .𝚝𝚊𝚛 file instead of a folder, do 7-Zip then Extract Here on that file as well.</li>
<li>Mac OS: double-click the .𝚝𝚊𝚛.𝚐𝚣 file.</li>
<li>Linux: Either:</li>
</ul>
<ol>
<li><p>When downloading, choose Open with [Archive Manager] if given the option. Otherwise, save the file and double-click it, which should open it in Archive Manager. Drag the 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎-𝟻.𝟶 folder to the Desktop or wherever you want to store it.<br>Save the file. In a terminal, 𝚌𝚍 into the directory where you saved it and run 𝚝𝚊𝚛 -𝚡𝚏𝚣 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎.𝚝𝚊𝚛.𝚐𝚣.<br>You should get a folder named 𝚜𝚖𝚕-𝚖𝚘𝚍𝚎-𝟻.𝟶. You can place this folder anywhere you like.</p>
</li>
<li><p>To get SML Mode to work with Emacs, you need to create/edit a .𝚎𝚖𝚊𝚌𝚜 file in your “home” directory/folder that Emacs searches when it starts up. Open this file in Emacs via the command 𝙲-𝚡 𝙲-𝚏 ~/.𝚎𝚖𝚊𝚌𝚜.</p>
</li>
</ol>
<p>Add the following line to the .𝚎𝚖𝚊𝚌𝚜 file:</p>
<p>[Math Processing Error]<code>(load &quot;/path/to/where/you/stored/sml-mode-5.0/sml-mode-startup&quot;)
[Math Processing Error]</code></p>
<p>but replacing path/to/where/you/stored with the appropriate path:</p>
<ul>
<li>Windows: Hold down the Shift key as you right-click the sml-mode-5.0 folder and choose Copy As Path. Paste this into Emacs. Then replace each \ with / because \ is a special character in Emacs settings files. And add /sml-mode-startup at the end. So you might end up with something like Z:/look/here/sml-mode-startup.</li>
<li>Mac OS: Select the folder in the Finder and choose File then Get Info. Copy the Where: field and add /sml-mode-startup. Now also add the following to your .emacs file in addition to the line above:</li>
</ul>
<p>[Math Processing Error]`<br>(setenv “PATH” (concat “/usr/local/smlnj/bin:” (getenv “PATH”)))</p>
<p>(setq exec-path (cons “/usr/local/smlnj/bin”  exec-path))<br>[Math Processing Error]`</p>
<p>(But if you have Mac OS X 10.5, use smlnj-110.77 in place of smlnj in the two lines above. Or, more generally, adjust the lines above appropriately if you installed SML/NJ in a different directory.)</p>
<ul>
<li>Linux: If SML Mode seems to work, but you cannot get the SML REPL to run in Emacs, then find where smlnj-110.77 was installed and add the two lines under the Mac OS instructions above, but replacing /usr/local with the appropriate path.</li>
</ul>
<p>(There are much more elaborate installation instructions in the documentation included in the sml-mode-5.0 folder, but these are aimed at system administrators who might want to install SML Mode for an entire site instead of a single user. You do not need these.)</p>
<p>Now verify that SML Mode is properly installed, following the instructions in the previous section.</p>
<p>Finally, if you are in SML Mode but your SML code does not have syntax coloring, add this line to your ~/.emacs file and then restart Emacs:</p>
<p>[Math Processing Error]<code>(global-font-lock-mode t)
[Math Processing Error]</code></p>
<p>This should be necessary only if your Emacs version is older than 23.X.</p>
<h2 id="7-Using-the-SML-NJ-REPL-Read-Eval-Print-Loop-in-Emacs"><a href="#7-Using-the-SML-NJ-REPL-Read-Eval-Print-Loop-in-Emacs" class="headerlink" title="7. Using the SML/NJ REPL (Read-Eval-Print Loop) in Emacs"></a>7. Using the SML/NJ REPL (Read-Eval-Print Loop) in Emacs</h2><p>At this point, we are done installing! This section shows you how to run SML programs from within Emacs. It assumes you already have an SML file or can write your own SML program in a new one.</p>
<ul>
<li>Edit a file with extension .𝚜𝚖𝚕. You should be in SML-mode, using Tab to indent your code well.</li>
<li>To create the <em>𝚜𝚖𝚕</em> buffer (which holds the REPL), type 𝙲-𝚌 𝙲-𝚜 (and then Return/Enter) in the buffer with the .sml file. (Note: This will not work in the <em>𝚜𝚌𝚛𝚊𝚝𝚌𝚑</em> buffer that Emacs starts in because this buffer is not in SML Mode.)</li>
<li>Keep the .sml file(s) you are working with for a particular assignment in the same folder. When you type 𝙲-𝚌 𝙲-𝚜 to start the REPL from a buffer for foo.sml, the REPL will look in the right folder for 𝚏𝚘𝚘.𝚜𝚖𝚕 when you type 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; and will look in the same folder for any other file you use such as 𝚏𝚘𝚘_𝚝𝚎𝚜𝚝𝚜.𝚜𝚖𝚕. This is less confusing than trying to keep track of different folders and paths while using the REPL although that is possible.</li>
<li>To end and restart a REPL session, type 𝙲-𝚍 (to end it) and 𝙲-𝚌 𝙲-𝚜 (and then Return/Enter) (to restart it). You must type 𝙲-𝚍 while in the <em>𝚜𝚖𝚕</em> buffer; you can type 𝙲-𝚌 𝙲-𝚜 from the <em>𝚜𝚖𝚕</em> buffer or a buffer with a .sml file.</li>
<li>By ending and restarting a session, the new session has an empty environment. Your earlier interactions are still in the <em>𝚜𝚖𝚕</em> buffer, so you can save them, cut-paste them, etc., but they have no effect on the evaluation in the restarted REPL session.</li>
<li>Evaluation can go into an infinite loop.</li>
</ul>
<ol>
<li>This has likely occurred if you are not getting the “-“ prompt back and nothing appears to be happening.</li>
<li>𝙲-𝚌 𝙲-𝚌 will interrupt evaluation and get you your prompt back.</li>
</ol>
<ul>
<li>If you forget to end your binding with a “;” character, the REPL will print an “=” character on the next line, which is just its way of saying, “you are not done – continue your binding,” so type a “;” and hit Return/Enter. This is not an infinite loop (nothing is being evaluated; the REPL is waiting for you) so 𝙲-𝚌 𝙲-𝚌 does not do anything.</li>
<li>If the printed result looks “pretty good,” but part of what you expected to see has been replaced by a “#” or “ …” this is normal. The REPL has a limit on how many characters it prints, which is good since you might make a large value, such as a list with tens of thousands of elements. You can adjust the limit if you want.</li>
<li>Two keyboard commands are particularly useful in the REPL: 𝙼-𝚙 will print the previous line you used in the REPL, which you can then run again or edit before running. Repeating 𝙼-𝚙 will cycle through previous REPL lines, allowing you to bring back up any of your previous REPL expressions. The p stands for previous. 𝙼-𝚗 (repeatedly) does the same thing in the opposite direction, with the n standing for next.</li>
</ul>
<p><strong>Advice You Will Wish You Followed!</strong></p>
<p>In each REPL session, follow this pattern:</p>
<ul>
<li>First type 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; for any SML files you want to use.</li>
<li>Then use the REPL manually as long as you wish.</li>
<li>After using the REPL to test something, do not use use to load (or reload) any more files.</li>
<li>When tempted to violate the previous point, end and restart your REPL session before continuing.</li>
</ul>
<p>Why: 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; has a very simple semantics: it adds the ML bindings in the file to the environment in order. These may or may not shadow ML bindings from the last time you typed 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”;, depending on how foo.sml changed. This confuses even expert programmers until they train themselves to follow the pattern above.</p>
<p>If you find yourself typing the same non-trivial things repeatedly in the REPL, stop wasting your time.</p>
<p>Move the repeated parts to a second file, e.g., 𝚝𝚎𝚜𝚝.𝚜𝚖𝚕.<br>Then, when you restart your session, begin with 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; 𝚞𝚜𝚎 “𝚝𝚎𝚜𝚝.𝚜𝚖𝚕”;.<br>In fact, there is an even faster way:</p>
<ol>
<li>Begin test.sml with the expression 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”;</li>
<li>Then begin your session with 𝚞𝚜𝚎 “𝚝𝚎𝚜𝚝.𝚜𝚖𝚕”;</li>
</ol>
<p>Note: Do not put 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; in 𝚝𝚎𝚜𝚝.𝚜𝚖𝚕 and begin your session with 𝚞𝚜𝚎 “𝚏𝚘𝚘.𝚜𝚖𝚕”; 𝚞𝚜𝚎 “𝚝𝚎𝚜𝚝.𝚜𝚖𝚕”;. That will evaluate the ML bindings in 𝚏𝚘𝚘.𝚜𝚖𝚕 twice, which is confusing.</p>
<p>If you develop some emotional attachment to the transcript of your <em>𝚜𝚖𝚕</em> buffer, you can save it to a file just like any other buffer. But after you do, it is not an <em>𝚜𝚖𝚕</em> buffer anymore, so you will have to create a new <em>𝚜𝚖𝚕</em> buffer from a buffer in SML Mode via 𝙲-𝚌 𝙲-𝚜.</p>
<p>Acknowledgments: These instructions were prepared starting with material created by Ben Wood, adapted from prior materials by Dan Grossman and Hal Perkins. Stefan Monnier provided fantastic feedback on this document and even created SML Mode version 6 to simplify SML Mode installation substantially. John Reppy provided excellent improvements to the SML/NJ installation instructions.</p>
<p>-from coursera</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Contents&quot;&gt;&lt;a href=&quot;#Contents&quot; class=&quot;headerlink&quot; title=&quot;Contents&quot;&gt;&lt;/a&gt;Contents&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;li&gt;Emacs Installation&lt;/li&gt;
&lt;li&gt;Emacs Basics&lt;/li&gt;
&lt;li&gt;SML/NJ Installation&lt;/li&gt;
&lt;li&gt;SML Mode for Emacs Installation&lt;/li&gt;
&lt;li&gt;Manual SML Mode Installation for Older Emacs Versions – Probably Skip This!&lt;/li&gt;
&lt;li&gt;Using the SML/NJ REPL (Read-Eval-Print Loop) in Emacs&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Emacs" scheme="http://kingle.online/tags/Emacs/"/>
    
  </entry>
  
  <entry>
    <title>预览应用扩展增强工具</title>
    <link href="http://kingle.online/2017/02/03/%E9%A2%84%E8%A7%88%E5%BA%94%E7%94%A8%E6%89%A9%E5%B1%95%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7/"/>
    <id>http://kingle.online/2017/02/03/预览应用扩展增强工具/</id>
    <published>2017-02-03T12:57:45.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>针对mac系统的预览工具，快捷键是<strong>空格键</strong><br>Mac上的预览工具，本身就非常好用，大多数文件，比如图片、Office文档、MP3等文件在文件夹上，选中后，按一下空格就可以快速预览到内容。</p>
</blockquote>
<p>但是，你还可以拓展它的功能，让它更加好用 。下面是简介和安装方法：</p>
<p>1、预览查看图片分辨率&amp;大小</p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/image/size.png" height="200"></p>
<p>2、代码语法高亮</p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/image/codecolor.png"><br>3、快速预览zip压缩包内容</p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/image/zip.png"><br>4、快速预览markdown格式内容</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://ojlmcfp94.bkt.clouddn.com/img-markdownpreview.png"></h2><p>还有很多有意思的插件，比如查看安卓的apk信息、MD文件等，具体可以看<a href="https://github.com/sindresorhus/quick-look-plugins" target="_blank" rel="external">sindresorhus/quick-look-plugins</a>的介绍。</p>
<p>那么如何安装这些插件呢？简单2步：</p>
<p>打开Mac的 “终端” 工具（可右上角 放大镜 搜 终端）：</p>
<p>需要先安装HomeBrew工具。</p>
<p>安装好上面的工具后，再安装插件。如果需要更多其他插件，就在后面加插件名：</p>
<p>brew cask install qlcolorcode betterzipql qlimagesize qlmarkdown</p>
<p>安装过程中，可能需要多次输入系统密码，请留意。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;针对mac系统的预览工具，快捷键是&lt;strong&gt;空格键&lt;/strong&gt;&lt;br&gt;Mac上的预览工具，本身就非常好用，大多数文件，比如图片、Office文档、MP3等文件在文件夹上，选中后，按一下空格就可以快速预览到内容。&lt;/p&gt;
&lt;/blockq
    
    </summary>
    
    
      <category term="mac" scheme="http://kingle.online/tags/mac/"/>
    
      <category term="tool" scheme="http://kingle.online/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>windows软件推荐</title>
    <link href="http://kingle.online/2017/01/26/windows%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>http://kingle.online/2017/01/26/windows软件推荐/</id>
    <published>2017-01-26T13:53:33.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、软件推荐"><a href="#一、软件推荐" class="headerlink" title="一、软件推荐"></a><a href="#一、软件推荐" title="一、软件推荐"></a>一、软件推荐</h3><h4 id="1-1-Listary"><a href="#1-1-Listary" class="headerlink" title="1.1 Listary"></a><a href="#1-1-Listary" title="1.1  Listary"></a>1.1 <a href="http://www.listary.com/" target="_blank" rel="external">Listary</a></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/Listary.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p><a id="more"></a></p>
<p>快捷键：</p>
<ul>
<li><p>启动搜索框及界面</p>
<ul>
<li><code>双击 Ctrl</code></li>
<li><code>桌面双击左键</code></li>
</ul>
</li>
<li><p>在打开文件的时候搜索文件</p>
<ul>
<li>自动或手动</li>
</ul>
</li>
<li>Google或者Baidu搜索<ul>
<li><code>gg</code></li>
<li><code>bd</code></li>
</ul>
</li>
</ul>
<hr>
<p><strong>备选</strong>：<a href="https://www.voidtools.com/" target="_blank" rel="external">evertthing</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/everything.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<hr>
<p><code>CapsLock+</code></p>
<ul>
<li><a href="http://www.iplaysoft.com/capslock-plus.html" target="_blank" rel="external">使用教程</a></li>
<li><a href="http://cjkis.me/capslock+/" target="_blank" rel="external">官方文档</a></li>
</ul>
<hr>
<h4 id="1-2-PDF-Viewer"><a href="#1-2-PDF-Viewer" class="headerlink" title="1.2 PDF-Viewer"></a><a href="#1-2-PDF-Viewer" title="1.2 PDF-Viewer"></a>1.2 <a href="https://www.tracker-software.com/product/pdf-xchange-viewer" target="_blank" rel="external">PDF-Viewer</a></h4>{% image http://ojlmcfp94.bkt.clouddn.com/pdfview.jpg 'Listry' '' %}
<p><strong>备选</strong>：<br><code>SumatraPDF</code><br>(<a href="http://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="external">http://www.sumatrapdfreader.org/free-pdf-reader.html</a>)</p>
<blockquote>
<p>Sumatra PDF is a PDF, ePub, MOBI, CHM, XPS, DjVu, CBZ, CBR reader for Windows</p>
</blockquote>
<p><code>福昕阅读器</code><br><code>adobe reader</code></p>
<hr>
<h4 id="1-3-Bandizip"><a href="#1-3-Bandizip" class="headerlink" title="1.3 Bandizip"></a><a href="#1-3-Bandizip" title="1.3 Bandizip"></a>1.3 <a href="https://www.bandisoft.com/bandizip/cn/" target="_blank" rel="external">Bandizip</a></h4>{% image http://ojlmcfp94.bkt.clouddn.com/Bandizip.png 'Listry' '' %}
<blockquote>
<p><strong>Bandizip : 轻巧、快速、免费的压缩软件</strong><br>Bandizip 是一款可靠和快速的压缩软件，它支WinZip、7-Zip 和 WinRAR 以及其它压缩格式。它拥有非常快速的压缩和解压缩的算法，适用于多核心压缩、快速拖放、高速压缩等功能。</p>
</blockquote>
<p><strong>备选</strong>：<br><code>‎WinRAR</code><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/winRAR_x.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure></p>
<blockquote>
<p>WinRAR is a powerful archive manager. It can backup your data and reduce the size of email attachments, decompress RAR, ZIP and other files downloaded from Internet and create new archives in RAR and ZIP file format.</p>
</blockquote>
<p><code>7-zip</code> 跨平台<br>{% image http://ojlmcfp94.bkt.clouddn.com/7z_rm01.jpg 'Listry' '' %}</p>
<hr>
<h4 id="1-4-potplayer"><a href="#1-4-potplayer" class="headerlink" title="1.4 potplayer"></a><a href="#1-4-potplayer" title="1.4 potplayer"></a>1.4 <a href="http://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="external">potplayer</a></h4>{% image http://ojlmcfp94.bkt.clouddn.com/Listary.png 'Listry' '' %}
<blockquote>
<p>由于PotPlayer与KMPlayer同属一个开发者的产品，所以PotPlayer拥有KMPlayer的硬件加速、支持高清视频播放、界面整洁、操作简单、使用轻松、皮肤丰富多彩等特点，能够满足不同用户的使用需求。Daum PotPlayer也可以在64位Windows系统上运行。</p>
</blockquote>
<p><a href="http://daumpotplayer.com/category/skins/" target="_blank" rel="external">potplayer皮肤</a></p>
<p><strong>备选</strong>：<br><code>KMPlayer</code></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/kmplayerfo.jpg" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p><a href="http://www.kmplayer.com/" target="_blank" rel="external">http://www.kmplayer.com/</a></p>
<hr>
<h4 id="1-5-Snipaste"><a href="#1-5-Snipaste" class="headerlink" title="1.5 Snipaste"></a><a href="#1-5-Snipaste" title="1.5 Snipaste"></a>1.5 <a href="http://www.iplaysoft.com/snipaste.html" target="_blank" rel="external">Snipaste</a></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/snipaste.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p><a href="https://docs.snipaste.com/zh-cn/" target="_blank" rel="external">官方文档</a></p>
<p><strong>备选</strong>：<br><code>qq截图</code><br><code>微信截图</code></p>
<h4 id="1-6-科学上网"><a href="#1-6-科学上网" class="headerlink" title="1.6 科学上网"></a><a href="#1-6-科学上网" title="1.6 科学上网"></a>1.6 <code>科学上网</code></h4><p>收费：<code>shadowsocks + VPS</code><br>(<a href="https://github.com/shadowsocks" target="_blank" rel="external">https://github.com/shadowsocks</a>)<br>{% image http://ojlmcfp94.bkt.clouddn.com/shadowsocks.png 'Listry' '' %}</p>
<hr>
<p><code>vultr</code><br>(<a href="https://www.vultr.com/" target="_blank" rel="external">https://www.vultr.com/</a>)</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/logo_onwhite.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p>免费：<code>XX-Net</code></p>
{% image http://ojlmcfp94.bkt.clouddn.com/xx-net.png 'Listry' '' %}
<p><a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3" target="_blank" rel="external">中文文档</a></p>
<blockquote>
<p>XX-Net is a free desktop application that delivers fast, reliable and secure access to the open Internet for users in censored regions. It uses google app engine (GAE) as a proxy server through the firewall.</p>
</blockquote>
<p><code>蓝灯</code></p>
<h3 id="二、chrome插件推荐"><a href="#二、chrome插件推荐" class="headerlink" title="二、chrome插件推荐"></a><a href="#二、chrome插件推荐" title="二、chrome插件推荐"></a>二、chrome插件推荐</h3><h4 id="2-1-马克飞象"><a href="#2-1-马克飞象" class="headerlink" title="2.1 马克飞象"></a><a href="#2-1-马克飞象" title="2.1 马克飞象"></a>2.1 马克飞象</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<blockquote>
<p>Markdown 是一种简单的、轻量级的标记语法。用户可以使用诸如 * # 等简单的标记符号以最小的输入代价生成极富表现力的文档。</p>
</blockquote>
<p><strong>备选</strong>：<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd Markdown</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/macdown.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<blockquote>
<p>作业部落出品，也是一款不错的工具和博客平台兼顾的产品。全平台且提供web版</p>
</blockquote>
<p><a href="https://www.farbox.com/service/app/desktop_editor" target="_blank" rel="external">FarBox</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/blogflat.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<blockquote>
<p>一个支持Markdown写作语法的博客平台，让用户通过Dropbox（现在默认是自己的同步服务器）直接建立个人网站。FarBox编辑器免费，支持多平台（无web版，Linux版停止维护）,Farbox服务可以免费试用，在本地编辑器内写作自动同步发布在个人博客，对像笔者这样希望有个人博客但却不愿折腾的小白来说，是个不错的选择。</p>
</blockquote>
<p><code>小书匠编辑器</code></p>
<p><code>有道云笔记</code></p>
<p><code>好用的Markdown编辑器一览</code><br><a href="http://www.williamlong.info/archives/4319.html" target="_blank" rel="external">http://www.williamlong.info/archives/4319.html</a></p>
<hr>
<h4 id="2-2-lastpass"><a href="#2-2-lastpass" class="headerlink" title="2.2 lastpass"></a><a href="#2-2-lastpass" title="2.2 lastpass"></a>2.2 <code>lastpass</code></h4><p><a href="https://helpdesk.lastpass.com/zh/" target="_blank" rel="external">用户手册</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/laspass.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<blockquote>
<p>Lastpass是一个优秀的在线密码管理器和页面过滤器，采用了强大的加密算法，自动登录/云同步/跨平台/支持多款浏览器。</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/lastpass-android.jpg" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<hr>
<h4 id="2-3-印象笔记-剪藏"><a href="#2-3-印象笔记-剪藏" class="headerlink" title="2.3 印象笔记* 剪藏"></a><a href="#2-3-印象笔记-剪藏" title="2.3 印象笔记* 剪藏"></a>2.3 <code>印象笔记* 剪藏</code></h4>{% image http://ojlmcfp94.bkt.clouddn.com/caijian.png 'Listry' '' %}
<blockquote>
<p>印象笔记全家桶，值得推荐。</p>
</blockquote>
<hr>
<h4 id="2-4-adblock-plus"><a href="#2-4-adblock-plus" class="headerlink" title="2.4 adblock plus"></a><a href="#2-4-adblock-plus" title="2.4 adblock plus"></a>2.4 <code>adblock plus</code></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/ABP.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<hr>
<h4 id="2-5-净网大师"><a href="#2-5-净网大师" class="headerlink" title="2.5 净网大师"></a><a href="#2-5-净网大师" title="2.5 净网大师"></a>2.5 <code>净网大师</code></h4>{% image http://ojlmcfp94.bkt.clouddn.com/%E5%87%80%E7%BD%91%E5%A4%A7%E5%B8%88.png 'Listry' '' %}
<hr>
<h4 id="2-6-Vimium"><a href="#2-6-Vimium" class="headerlink" title="2.6 Vimium"></a><a href="#2-6-Vimium" title="2.6 Vimium"></a>2.6 <code>Vimium</code></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/vimium.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<hr>
<h4 id="2-7-扩展管理"><a href="#2-7-扩展管理" class="headerlink" title="2.7 扩展管理"></a><a href="#2-7-扩展管理" title="2.7 扩展管理"></a>2.7 <code>扩展管理</code></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/manager.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<h3 id="三、微信公众号"><a href="#三、微信公众号" class="headerlink" title="三、微信公众号"></a><a href="#三、微信公众号" title="三、微信公众号"></a>三、微信公众号</h3><h4 id="3-1-ZEALER订阅号"><a href="#3-1-ZEALER订阅号" class="headerlink" title="3.1 ZEALER订阅号"></a><a href="#3-1-ZEALER订阅号" title="3.1 ZEALER订阅号"></a>3.1 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599688&amp;ver=1&amp;signature=QpzEoBx2gerINFWysy07Xs4tSN4*gYkyjoolgCxAaVz1olZl4PC4k7dtVqW3mD5ObZTFQ150ksM29fUdAbQm3Q==" target="_blank" rel="external">ZEALER订阅号</a></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/photo.jpg" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p>首页<br>(<a href="http://www.zealer.com/" target="_blank" rel="external">http://www.zealer.com/</a>)</p>
<ul>
<li><p><a href="http://www.zealer.com/media?cid=2&amp;index=5" target="_blank" rel="external">科技相对论</a></p>
</li>
<li><p><a href="http://www.zealer.com/media?cid=4&amp;index=2" target="_blank" rel="external">ZEALER | TIPS</a></p>
</li>
<li><p><strong>一系列的手机测评</strong></p>
</li>
</ul>
<h4 id="3-2-科技美学"><a href="#3-2-科技美学" class="headerlink" title="3.2 科技美学"></a><a href="#3-2-科技美学" title="3.2 科技美学"></a>3.2 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599807&amp;ver=1&amp;signature=2ySUdjPiDArWOU0UaheZo6kl6BvmN*x9M9VNqWS0SZhxh6IR2UGY1bJ0RxqDp1MuSA84MHrXqw0uQPRnYgPbiQ==" target="_blank" rel="external">科技美学</a></h4><p>官网：<br>（<a href="http://www.kejimeixue.com/）" target="_blank" rel="external">http://www.kejimeixue.com/）</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/钠盐.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/科技美学mark.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<h4 id="3-3-笔吧测评室"><a href="#3-3-笔吧测评室" class="headerlink" title="3.3 笔吧测评室"></a><a href="#3-3-笔吧测评室" title="3.3 笔吧测评室"></a>3.3 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599861&amp;ver=1&amp;signature=5OSEP63Mkz70iH4EQYvS*0vER3f8gcZizWxaWGxTU4*TAMxWkI6YvF-6v4K*WIrt*TCc8BfCE7LCkP4bhZDC9g==" target="_blank" rel="external">笔吧测评室</a></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/biba.jpg" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<p>微信二维码：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/bibamark.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<h4 id="3-4-卓老板聊科技"><a href="#3-4-卓老板聊科技" class="headerlink" title="3.4 卓老板聊科技"></a><a href="#3-4-卓老板聊科技" title="3.4 卓老板聊科技"></a>3.4 <a href="https://m.ximalaya.com/20445422/album/335347" target="_blank" rel="external">卓老板聊科技</a></h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/卓老板.png" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<blockquote>
<p>以科学故事、理工科思维、生活科技为主要内容。通过普及科学思想更新人们陈旧的观念。</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://ojlmcfp94.bkt.clouddn.com/zhuo%E6%88%AA%E5%9B%BE.jpg" alt="Listry" title="">
                </div>
                <div class="image-caption">Listry</div>
            </figure>
<h3 id="四、几个网站"><a href="#四、几个网站" class="headerlink" title="四、几个网站"></a><a href="#四、几个网站" title="四、几个网站"></a>四、几个网站</h3><h4 id="4-1-廖雪峰的官方网站"><a href="#4-1-廖雪峰的官方网站" class="headerlink" title="4.1 廖雪峰的官方网站"></a><a href="#4-1-廖雪峰的官方网站" title="4.1 廖雪峰的官方网站"></a>4.1 廖雪峰的官方网站</h4><p><a href="http://www.liaoxuefeng.com/" target="_blank" rel="external">http://www.liaoxuefeng.com/</a></p>
<h4 id="4-2-阮一峰的网络日志"><a href="#4-2-阮一峰的网络日志" class="headerlink" title="4.2 阮一峰的网络日志"></a><a href="#4-2-阮一峰的网络日志" title="4.2 阮一峰的网络日志"></a>4.2 阮一峰的网络日志</h4><p><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">http://www.ruanyifeng.com/blog/</a></p>
<h4 id="4-3-张鑫旭-鑫空间-鑫生活"><a href="#4-3-张鑫旭-鑫空间-鑫生活" class="headerlink" title="4.3 张鑫旭-鑫空间-鑫生活"></a><a href="#4-3-张鑫旭-鑫空间-鑫生活" title="4.3 张鑫旭-鑫空间-鑫生活"></a>4.3 张鑫旭-鑫空间-鑫生活</h4><p><a href="http://www.zhangxinxu.com/" target="_blank" rel="external">http://www.zhangxinxu.com/</a></p>
<h4 id="4-4-实验楼"><a href="#4-4-实验楼" class="headerlink" title="4.4 实验楼"></a><a href="#4-4-实验楼" title="4.4 实验楼"></a>4.4 实验楼</h4><p><a href="https://www.shiyanlou.com" target="_blank" rel="external">实验楼</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、软件推荐&quot;&gt;&lt;a href=&quot;#一、软件推荐&quot; class=&quot;headerlink&quot; title=&quot;一、软件推荐&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#一、软件推荐&quot; title=&quot;一、软件推荐&quot;&gt;&lt;/a&gt;一、软件推荐&lt;/h3&gt;&lt;h4 id=&quot;1-1-Listary&quot;
    
    </summary>
    
    
      <category term="windows" scheme="http://kingle.online/tags/windows/"/>
    
      <category term="软件" scheme="http://kingle.online/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>技术分享</title>
    <link href="http://kingle.online/2017/01/11/techshare1/"/>
    <id>http://kingle.online/2017/01/11/techshare1/</id>
    <published>2017-01-11T13:54:32.000Z</published>
    <updated>2018-05-21T06:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、软件推荐"><a href="#一、软件推荐" class="headerlink" title="一、软件推荐"></a>一、软件推荐</h3><h4 id="1-1-Listary"><a href="#1-1-Listary" class="headerlink" title="1.1  Listary"></a>1.1  <a href="http://www.listary.com/" target="_blank" rel="external">Listary</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/Listary.png" width="200" height="200" alt="Listry"></p>
<a id="more"></a>
<p>快捷键：</p>
<ul>
<li><p>启动搜索框及界面 </p>
<ul>
<li><code>双击 Ctrl</code></li>
<li><code>桌面双击左键</code></li>
</ul>
</li>
<li><p>在打开文件的时候搜索文件</p>
<ul>
<li>自动或手动</li>
</ul>
</li>
<li>Google或者Baidu搜索<ul>
<li><code>gg</code></li>
<li><code>bd</code></li>
</ul>
</li>
</ul>
<hr>
<p><strong>备选</strong>：<a href="https://www.voidtools.com/" target="_blank" rel="external">evertthing</a></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/everything.png" alt="Listry"></p>
<hr>
<p><code>CapsLock+</code></p>
<ul>
<li><a href="http://www.iplaysoft.com/capslock-plus.html" target="_blank" rel="external">使用教程</a></li>
<li><a href="http://cjkis.me/capslock+/" target="_blank" rel="external">官方文档</a></li>
</ul>
<hr>
<h4 id="1-2-PDF-Viewer"><a href="#1-2-PDF-Viewer" class="headerlink" title="1.2 PDF-Viewer"></a>1.2<a href="https://www.tracker-software.com/product/pdf-xchange-viewer" target="_blank" rel="external"> PDF-Viewer</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/pdfview.jpg" width="200" height="200" alt="Listry"></p>
<p><strong>备选</strong>：<br><code>SumatraPDF</code><br>(<a href="http://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="external">http://www.sumatrapdfreader.org/free-pdf-reader.html</a>)</p>
<blockquote>
<p>Sumatra PDF is a PDF, ePub, MOBI, CHM, XPS, DjVu, CBZ, CBR reader for Windows</p>
</blockquote>
<p><code>福昕阅读器</code><br><code>adobe reader</code></p>
<hr>
<h4 id="1-3-Bandizip"><a href="#1-3-Bandizip" class="headerlink" title="1.3 Bandizip"></a>1.3 <a href="https://www.bandisoft.com/bandizip/cn/" target="_blank" rel="external">Bandizip</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/Bandizip.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p><strong>Bandizip : 轻巧、快速、免费的压缩软件</strong><br>Bandizip 是一款可靠和快速的压缩软件，它支WinZip、7-Zip 和 WinRAR 以及其它压缩格式。它拥有非常快速的压缩和解压缩的算法，适用于多核心压缩、快速拖放、高速压缩等功能。</p>
</blockquote>
<p><strong>备选</strong>：<br><code>‎WinRAR</code><br><img src="http://ojlmcfp94.bkt.clouddn.com/winRAR_x.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p>WinRAR is a powerful archive manager. It can backup your data and reduce the size of email attachments, decompress RAR, ZIP and other files downloaded from Internet and create new archives in RAR and ZIP file format. </p>
</blockquote>
<p><code>7-zip</code> 跨平台<br><img src="http://ojlmcfp94.bkt.clouddn.com/7z_rm01.jpg" width="200" height="200" alt="Listry"></p>
<hr>
<h4 id="1-4-potplayer"><a href="#1-4-potplayer" class="headerlink" title="1.4 potplayer"></a>1.4 <a href="http://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="external">potplayer</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/Listary.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p>由于PotPlayer与KMPlayer同属一个开发者的产品，所以PotPlayer拥有KMPlayer的硬件加速、支持高清视频播放、界面整洁、操作简单、使用轻松、皮肤丰富多彩等特点，能够满足不同用户的使用需求。Daum PotPlayer也可以在64位Windows系统上运行。</p>
</blockquote>
<p><a href="http://daumpotplayer.com/category/skins/" target="_blank" rel="external">potplayer皮肤</a></p>
<p><strong>备选</strong>：<br><code>KMPlayer</code></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/kmplayerfo.jpg" width="200" height="200" alt="Listry"></p>
<p><a href="http://www.kmplayer.com/" target="_blank" rel="external">http://www.kmplayer.com/</a></p>
<hr>
<h4 id="1-5-Snipaste"><a href="#1-5-Snipaste" class="headerlink" title="1.5 Snipaste"></a>1.5 <a href="http://www.iplaysoft.com/snipaste.html" target="_blank" rel="external">Snipaste</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/snipaste.png" alt="Listry"></p>
<p><a href="https://docs.snipaste.com/zh-cn/" target="_blank" rel="external">官方文档</a></p>
<p><strong>备选</strong>：<br><code>qq截图</code><br><code>微信截图</code></p>
<h4 id="1-6-科学上网"><a href="#1-6-科学上网" class="headerlink" title="1.6 科学上网"></a>1.6 <code>科学上网</code></h4><p>收费：<code>shadowsocks + VPS</code><br>(<a href="https://github.com/shadowsocks" target="_blank" rel="external">https://github.com/shadowsocks</a>)<br><img src="http://ojlmcfp94.bkt.clouddn.com/shadowsocks.png" width="200" height="200" alt="Listry"></p>
<hr>
<p><code>vultr</code><br>(<a href="https://www.vultr.com/" target="_blank" rel="external">https://www.vultr.com/</a>)</p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/logo_onwhite.png" alt="Listry"></p>
<p>免费：<code>XX-Net</code></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/xx-net.png" width="200" height="200" alt="Listry"></p>
<p><a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3" target="_blank" rel="external">中文文档</a></p>
<blockquote>
<p>XX-Net is a free desktop application that delivers fast, reliable and secure access to the open Internet for users in censored regions. It uses google app engine (GAE) as a proxy server through the firewall.</p>
</blockquote>
<p><code>蓝灯</code></p>
<h3 id="二、chrome插件推荐"><a href="#二、chrome插件推荐" class="headerlink" title="二、chrome插件推荐"></a>二、chrome插件推荐</h3><h4 id="2-1-马克飞象"><a href="#2-1-马克飞象" class="headerlink" title="2.1 马克飞象"></a>2.1 马克飞象</h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p>Markdown 是一种简单的、轻量级的标记语法。用户可以使用诸如 * # 等简单的标记符号以最小的输入代价生成极富表现力的文档。</p>
</blockquote>
<p><strong>备选</strong>：<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd Markdown</a></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/macdown.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p>作业部落出品，也是一款不错的工具和博客平台兼顾的产品。全平台且提供web版</p>
</blockquote>
<p><a href="https://www.farbox.com/service/app/desktop_editor" target="_blank" rel="external">FarBox</a></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/blogflat.png" alt="Listry"></p>
<blockquote>
<p>一个支持Markdown写作语法的博客平台，让用户通过Dropbox（现在默认是自己的同步服务器）直接建立个人网站。FarBox编辑器免费，支持多平台（无web版，Linux版停止维护）,Farbox服务可以免费试用，在本地编辑器内写作自动同步发布在个人博客，对像笔者这样希望有个人博客但却不愿折腾的小白来说，是个不错的选择。</p>
</blockquote>
<p><code>小书匠编辑器</code></p>
<p><code>有道云笔记</code></p>
<p><code>好用的Markdown编辑器一览</code><br><a href="http://www.williamlong.info/archives/4319.html" target="_blank" rel="external">http://www.williamlong.info/archives/4319.html</a></p>
<hr>
<h4 id="2-2-lastpass"><a href="#2-2-lastpass" class="headerlink" title="2.2 lastpass"></a>2.2 <code>lastpass</code></h4><p><a href="https://helpdesk.lastpass.com/zh/" target="_blank" rel="external">用户手册</a></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/laspass.png" width="200" height="200" alt="Listry"></p>
<blockquote>
<p>Lastpass是一个优秀的在线密码管理器和页面过滤器，采用了强大的加密算法，自动登录/云同步/跨平台/支持多款浏览器。</p>
</blockquote>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/lastpass-android.jpg" height="800" width="300" alt="Listry"></p>
<hr>
<h4 id="2-3-印象笔记-剪藏"><a href="#2-3-印象笔记-剪藏" class="headerlink" title="2.3 印象笔记* 剪藏"></a>2.3 <code>印象笔记* 剪藏</code></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/caijian.png" height="600" width="260" alt="Listry"></p>
<blockquote>
<p>印象笔记全家桶，值得推荐。</p>
</blockquote>
{% image ./1480583030487.png 'Alt text|' '' %}
<hr>
<h4 id="2-4-adblock-plus"><a href="#2-4-adblock-plus" class="headerlink" title="2.4 adblock plus"></a>2.4 <code>adblock plus</code></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/ABP.png" height="200" width="200" alt="Listry"></p>
<hr>
<h4 id="2-5-净网大师"><a href="#2-5-净网大师" class="headerlink" title="2.5 净网大师"></a>2.5 <code>净网大师</code></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/%E5%87%80%E7%BD%91%E5%A4%A7%E5%B8%88.png" height="200" width="200" alt="Listry"></p>
<hr>
<h4 id="2-6-Vimium"><a href="#2-6-Vimium" class="headerlink" title="2.6 Vimium"></a>2.6 <code>Vimium</code></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/vimium.png" alt="Listry"></p>
<hr>
<h4 id="2-7-扩展管理"><a href="#2-7-扩展管理" class="headerlink" title="2.7 扩展管理"></a>2.7 <code>扩展管理</code></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/manager.png" alt="Listry"></p>
<h3 id="三、微信公众号"><a href="#三、微信公众号" class="headerlink" title="三、微信公众号"></a>三、微信公众号</h3><h4 id="3-1-ZEALER订阅号"><a href="#3-1-ZEALER订阅号" class="headerlink" title="3.1 ZEALER订阅号"></a>3.1 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599688&amp;ver=1&amp;signature=QpzEoBx2gerINFWysy07Xs4tSN4*gYkyjoolgCxAaVz1olZl4PC4k7dtVqW3mD5ObZTFQ150ksM29fUdAbQm3Q==" target="_blank" rel="external">ZEALER订阅号</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/photo.jpg" height="200" width="200" alt="Listry"></p>
<p>首页<br>(<a href="http://www.zealer.com/" target="_blank" rel="external">http://www.zealer.com/</a>)</p>
<ul>
<li><p><a href="http://www.zealer.com/media?cid=2&amp;index=5" target="_blank" rel="external">科技相对论</a></p>
</li>
<li><p><a href="http://www.zealer.com/media?cid=4&amp;index=2" target="_blank" rel="external">ZEALER | TIPS</a></p>
</li>
<li><p><strong>一系列的手机测评</strong></p>
</li>
</ul>
<h4 id="3-2-科技美学"><a href="#3-2-科技美学" class="headerlink" title="3.2 科技美学"></a>3.2 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599807&amp;ver=1&amp;signature=2ySUdjPiDArWOU0UaheZo6kl6BvmN*x9M9VNqWS0SZhxh6IR2UGY1bJ0RxqDp1MuSA84MHrXqw0uQPRnYgPbiQ==" target="_blank" rel="external">科技美学</a></h4><p>官网：<br>（<a href="http://www.kejimeixue.com/）" target="_blank" rel="external">http://www.kejimeixue.com/）</a></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/钠盐.png" alt="Listry"></p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/科技美学mark.png" height="200" width="200" alt="Listry"></p>
<h4 id="3-3-笔吧测评室"><a href="#3-3-笔吧测评室" class="headerlink" title="3.3 笔吧测评室"></a>3.3 <a href="http://mp.weixin.qq.com/profile?src=3&amp;timestamp=1480599861&amp;ver=1&amp;signature=5OSEP63Mkz70iH4EQYvS*0vER3f8gcZizWxaWGxTU4*TAMxWkI6YvF-6v4K*WIrt*TCc8BfCE7LCkP4bhZDC9g==" target="_blank" rel="external">笔吧测评室</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/biba.jpg" height="200" width="200" alt="Listry"></p>
<p>微信二维码：</p>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/bibamark.png" height="200" width="200" alt="Listry"></p>
<h4 id="3-4-卓老板聊科技"><a href="#3-4-卓老板聊科技" class="headerlink" title="3.4 卓老板聊科技"></a>3.4 <a href="https://m.ximalaya.com/20445422/album/335347" target="_blank" rel="external">卓老板聊科技</a></h4><p><img src="http://ojlmcfp94.bkt.clouddn.com/卓老板.png" height="200" width="200" alt="Listry"></p>
<blockquote>
<p>以科学故事、理工科思维、生活科技为主要内容。通过普及科学思想更新人们陈旧的观念。</p>
</blockquote>
<p><img src="http://ojlmcfp94.bkt.clouddn.com/zhuo%E6%88%AA%E5%9B%BE.jpg" height="800" width="300" alt="Listry"></p>
<h3 id="四、几个网站"><a href="#四、几个网站" class="headerlink" title="四、几个网站"></a>四、几个网站</h3><h4 id="4-1-廖雪峰的官方网站"><a href="#4-1-廖雪峰的官方网站" class="headerlink" title="4.1 廖雪峰的官方网站"></a>4.1 廖雪峰的官方网站</h4><p><a href="http://www.liaoxuefeng.com/" target="_blank" rel="external">http://www.liaoxuefeng.com/</a></p>
<h4 id="4-2-阮一峰的网络日志"><a href="#4-2-阮一峰的网络日志" class="headerlink" title="4.2 阮一峰的网络日志"></a>4.2 阮一峰的网络日志</h4><p><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">http://www.ruanyifeng.com/blog/</a></p>
<h4 id="4-3-张鑫旭-鑫空间-鑫生活"><a href="#4-3-张鑫旭-鑫空间-鑫生活" class="headerlink" title="4.3 张鑫旭-鑫空间-鑫生活"></a>4.3 张鑫旭-鑫空间-鑫生活</h4><p><a href="http://www.zhangxinxu.com/" target="_blank" rel="external">http://www.zhangxinxu.com/</a></p>
<h4 id="4-4-实验楼"><a href="#4-4-实验楼" class="headerlink" title="4.4 实验楼"></a>4.4 实验楼</h4>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、软件推荐&quot;&gt;&lt;a href=&quot;#一、软件推荐&quot; class=&quot;headerlink&quot; title=&quot;一、软件推荐&quot;&gt;&lt;/a&gt;一、软件推荐&lt;/h3&gt;&lt;h4 id=&quot;1-1-Listary&quot;&gt;&lt;a href=&quot;#1-1-Listary&quot; class=&quot;headerlink&quot; title=&quot;1.1  Listary&quot;&gt;&lt;/a&gt;1.1  &lt;a href=&quot;http://www.listary.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Listary&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://ojlmcfp94.bkt.clouddn.com/Listary.png&quot; width=&quot;200&quot; height=&quot;200&quot; alt=&quot;Listry&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件推荐" scheme="http://kingle.online/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
      <category term="网站推荐" scheme="http://kingle.online/tags/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
</feed>
